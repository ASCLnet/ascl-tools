0,964fcd4f47bcafe91274ca74b97b0f7e,0,"CODE-A Software Framework For Control and Observation In Distributed Environments","CODE is a framework for the control and observation of resources, services, and applications. The technology supports the secure and scalable transmission of observed information to other programs, and it enables the secure execution of actions on remote computer systems. ","https://www.nas.nasa.gov/Resources/Software/Open-Source/code.html","None","arc-sra-team@mail.nasa.gov"
1,64951fe2efa8695baab37aca4b68f01f,0,"Mission Simulation Toolkit (MST)","MST offers a simulation framework to support research in autonomy for remote exploration. The system allows developers to test models in a high-fidelity simulation and then evaluate system performance against a set of integrated, standardized simulations.","https://ti.arc.nasa.gov/opensource/projects/mission-simulation-toolkit/","None","arc-sra-team@mail.nasa.gov"
2,cfe3560646e4787782145931037eeb53,0,"Livingstone 2 (System for Automated Diagnosis and Discrete Control of Complex Systems) and Skunkworks (Suite of Supporting Development and Runtime Tools)","Livingstone 2 is a reusable artificial intelligence (AI) software system designed to assist spacecraft, life support systems, chemical plants, or other complex systems in operating robustly with minimal human supervision, even in the face of hardware failures or unexpected events. The technology diagnoses the current state of a spacecraft or other system and recommends commands or repair actions that will allow the system to continue operations. A re-engineered version of the Livingstone diagnosis system that was flight-tested onboard the Deep Space One spacecraft in 1999, Livingstone 2 contains significant enhancements to robustness, performance, and usability. Skunkworks is a suite of software tools that support the rapid deployment of model-based representations of complex systems for Livingstone2 via a visual model builder/tester and two graphical user interface tools that provide status information during testing.","https://ti.arc.nasa.gov/opensource/projects/livingstone2/","None","arc-sra-team@mail.nasa.gov"
3,a3a5959a8cb85062b20ace5dac9a3c08,0,"Java Pathfinder (JPF), Version 2.0","Java Pathfinder (JPF) is a model checker for Java. The technology takes a Java program and "executes" it in a way that explores all possible executions/interleavings of the threads in the program. This allows JPF to detect certain bugs (e.g., deadlocks and assertion violations) that may be missed during testing. ","https://babelfish.arc.nasa.gov/trac/jpf/wiki/install/repositories","None","arc-sra-team@mail.nasa.gov"
4,042077ad40841f2cd0394a934fe8364a,0,"CAPTools-based Automatic Parallelizer Using OpenMP (CAPO)","CAPO analyzes a Fortran program and inserts OpenMP directives into the code to improve its performance on a parallel machine. The tool relies on accurate inter-procedural data-dependence information currently provided by CAPTools, which was developed at the University of Greenwich.","https://software.nasa.gov/software/ARC-14487-1","None","arc-sra-team@mail.nasa.gov"
5,2222229e1322ce640b4e58619d61db79,0,"Sound Lab (SLAB), Version 5","SLAB is a software-based, real-time, virtual acoustic-environment rendering system designed to study spatial hearing in environments such as concert halls, listening rooms, virtual reality, aviation spatial information displays, and video game sound effects. ","https://ti.arc.nasa.gov/opensource/projects/slab-spatial-audio-renderer/","None","arc-sra-team@mail.nasa.gov"
6,f219785d678b16e62ad78a8321af1be6,0,"Libibvpp","Libibvpp is a C++ wrapper around libibverbs, which is part of the OpenFabrics software suite.","https://ti.arc.nasa.gov/opensource/projects/libibvpp/","None","arc-sra-team@mail.nasa.gov"
7,471a345b29b3aa3ce463ae12b7599889,0,"Mariana: Text Classification System","Mariana is an algorithm that efficiently optimizes the hyperparameters for support vector machines for regression and classification. It currently uses simulated annealing for optimization but can be extended to use a variety of stochastic optimization techniques, including Markov Chain Monte Carlo, Sequential Monte Carlo, and genetic algorithms. ","https://ti.arc.nasa.gov/opensource/projects/mariana/","None","arc-sra-team@mail.nasa.gov"
8,609b1b03afae5d8f2baca1db76e4ace6,0,"Geometry Manipulation Protocol (GMP) for ComputationalFluid Dynamics (CFD) Applications, Version 1.0","GMP serializes datatypes between XML and ANSI C data structures to support CFD applications. The library currently provides a description of geometric configurations, general moving-body scenarios (prescribed and/or 6-DOF), and control surface settings. ","https://ti.arc.nasa.gov/opensource/projects/gmp/","None","arc-sra-team@mail.nasa.gov"
9,7b7a6c5ef1504a3e289823a5bdda3a01,0,"Constellation PRACA Extension of the Bugzilla Application","The Constellation PRACA I-1 system is a modified version of an open-source, Web-based defect tracking tool called Bugzilla. Bugzilla allows software developers to document and track outstanding bugs in their products; in the Constellation PRACA I-1 system, these core capabilities have been extended to provide the necessary functionality and usability defined in the PRACA processing requirements.","https://software.nasa.gov/software/ARC-16033-1","None","arc-sra-team@mail.nasa.gov"
10,16a7ea7bd0d2b2b83310a881cbb2741c,0,"nu-Anomica (Previously Sparse One Class Support Vector Machines (SOC-SVMs))","nu-Anomica is an anomaly detector that can run faster than traditional OC-SVMs. The technology can handle large training sets and works with a well-defined target function. The program utilizes the OSU SVMs code (which is a MATLAB version of Lib-SVMs) as the baseline.","https://ti.arc.nasa.gov/opensource/projects/nu-anomica/","None","arc-sra-team@mail.nasa.gov"
11,6eafcb0aa340ead3ecee2d957cbe75cb,0,"SequenceMiner-Anomaly Detection in Large Sets of High-Dimensional Symbol Sequences","SequenceMiner was developed to address the problem of detecting and describing anomalies in large sets of high-dimensional symbol sequences. The technology performs unsupervised clustering (grouping) of sequences using the normalized longest common subsequence (LCS) as a similarity measure, followed by a detailed analysis of outliers to detect anomalies. SequenceMiner utilizes a new hybrid algorithm for computing the LCS that has been shown to outperform existing algorithms by a factor of five.","https://ti.arc.nasa.gov/opensource/projects/sequenceminer/","None","arc-sra-team@mail.nasa.gov"
12,fec0a0af032e8c5ec2c160bad8996d7e,0,"Visual Environment for Remote Virtual Exploration (VERVE), Version 2","VERVE is a 3D visualization system that provides situational awareness, science analysis tools, and data understanding capabilities for robotics researchers and exploration science operations. The technology is highly modular and extensible and includes a 3D scene-graph database, an interactive 3D viewer, and associated graphical user interfaces to OSGI plugin-based applications.","https://sourceforge.net/p/irg-verve/wiki/VERVE%20Wiki%20Home/","None","arc-sra-team@mail.nasa.gov"
13,5aca58dd2af83635b637a37465f1d859,0,"Neo-Geography Toolkit (NGT), Version 2","NGT is a collection of automated processing tools that can transform raw geospatial raster data from remote sensing instruments into useful cartographic products, including visible image base maps and topographic models. ","https://ti.arc.nasa.gov/tech/asr/intelligent-robotics/ngt/stereo/","None","arc-sra-team@mail.nasa.gov"
14,d2aa6c3a4c1fdccc132898bbb448acd5,0,"Inference Kernel for Open Static (IKOS) Analyzers: A High-Performance Static Analysis Engine to Build Automated Code Analysis Tools for the Formal Verification of Critical Software Properties","IKOS is a kernel for the construction of open-static analyzers based on Patrick Cousot and Radhia Cousot's theory of abstract interpretation, which states that computations can be abstracted and reduced to a generalized set of objects and still exhibit the same critical properties of the parent program. By reducing the set of objects through abstraction, IKOS is scalable to large complex computer programs and presents a sound approach to verification of such programs. ","https://ti.arc.nasa.gov/opensource/ikos/","None","arc-sra-team@mail.nasa.gov"
15,fab8a58755cd86105c1e77e23fc01846,0,"Robot Application Programming Interface Delegate (RAPID), Version 2","RAPID is a software reference implementation framework for remote operations. The technology promotes interoperability between robot software modules and includes a standard programming interface and data distribution middleware. RAPID facilitates integration of experimental robot software modules created by a distributed development team; improves the compatibility and reusability of robotic functions; and offers speed prototype robot development in a wide range of configurations and environments.","https://rapid.nasa.gov/index.html","None","arc-sra-team@mail.nasa.gov"
16,78d85772f5129eff06997b1a8423b8be,0,"PathDroid","PathDroid is an extension of the open sourced Java Pathfinder (JPF) verification framework that supports checking binary Android applications for absence of software defects such as unhandled exceptions and deadlocks.
PathDroid let users run such applications on development platforms, without the need for hardware-in-the-loop or availability of sources.
","https://ti.arc.nasa.gov/opensource/projects/pathdroid/","None","arc-sra-team@mail.nasa.gov"
17,61c10ea1bb11e061dd267030d316cb18,0,"Scalable Gaussian Process Regression","Block GP is a Gaussian Process regression framework for multimodal data, that can be an order of magnitude more scalable than existing state-of-the-art nonlinear regression algorithms. The framework builds local Gaussian Processes on semantically meaningful partitions of the data and provides higher prediction accuracy than a single global model with very high confidence. The method relies on approximating the covariance matrix of the entire input space by smaller covariance matrices that can be modeled independently, and
can therefore be parallelized for faster execution. 
","https://ti.arc.nasa.gov/opensource/projects/block-gp/","None","arc-sra-team@mail.nasa.gov"
18,3940787b5ee63a7a6383bd93678b98e4,0,"Java Pathfinder (JPF) core system","Java Pathfinder core system (jpf-core), is a model checker for Java bytecode. The technology takes a binary Java program and executes it in a user configurable way to detect defects such as deadlocks and unhandled exceptions, providing significantly higher confidence in correct program behavior than conventional testing.","https://babelfish.arc.nasa.gov/hg/jpf/jpf-core","None","arc-sra-team@mail.nasa.gov"
19,9433bb5573edf7b69940060450b73483,0,"IND 2.1-Creation and Manipulation of Decision Trees from Data","Decision trees are commonly used in artificial intelligence and statistical pattern recognition. A tree is "grown" from data using a recursive-partitioning algorithm. IND re-implements parts of existing standard prediction algorithms, offers experimental control suites, and also introduces new, more sophisticated methods for growing decision trees.","https://ti.arc.nasa.gov/opensource/projects/ind/","None","arc-sra-team@mail.nasa.gov"
20,3515699ff76899806f9ba27fd734364a,0,"JPF-NAS, an extension of Java Pathfinder that provides support for model checking distributed systems","JPF-NAS is developed to provide support for model checking distributed applications.   It relies on the multiprocess support included in Java Pathfinder (JPF) which provides basic functionality to verify the bytecode of distributed applications. JPF-NAS is implemented as a JPF extension which models interprocess communication mechanisms. It uses a form of partial order reduction to explore all possible executions of a distributed Java application. Moreover, JPF-NAS provides a functionality to check the given distributed application under test against possible network failures which can occur at the operating system or the hardware layer.","https://babelfish.arc.nasa.gov/hg/jpf/jpf-nas","None","arc-sra-team@mail.nasa.gov"
21,89b4e3de57517b5333e14588d8cc7efa,0,"MFSim - Multi-fidelity Simulation","MFS (Multi-Fidelity Simulator) is a pluggable framework for creating an air traffic flow simulator at multiple levels of fidelity. The framework is designed to allow low-fidelity simulations of the entire US Airspace to be completed very quickly (on the order of seconds). The framework allows higher-fidelity plugins to be added to allow higher-fidelity simulations to occur in certain regions of the airspace concurrently with the low-fidelity simulation of the full airspace.","https://ti.arc.nasa.gov/opensource/projects/mfsim/","None","arc-sra-team@mail.nasa.gov"
22,0b65c6d9096deb768044643f16e70137,0,"Surfer: An Extensible Pull-Based Framework For Resource Selection and Ranking","Surfer examines the pool of potential grid resources and extracts the highest-ranking resources that meet user-specified constraints and preferences. The technology has been implemented as a grid service that is compliant with an Open Grid Services Infrastructure (OGSI), and it can also be embedded directly into Java applications through its application programming interface or into non-java applications through its XML-based command-line interface.","https://ti.arc.nasa.gov/opensource/projects/surfer/","None","arc-sra-team@mail.nasa.gov"
23,5491f77ae6ff63f0dee043a23b31fe54,0,"Pour: A Framework for Periodic, On-Demand, and User-Specified Information Reconciliation","Pour is a general-purpose information service framework for periodic, on-demand, and user-specified information reconciliation. The technology is designed to accommodate a wide variety of information types with support for high-volume, low-frequency periodic updates, user-specified updates, and automatic updates collected on demand when needed. ","https://ti.arc.nasa.gov/opensource/projects/pour/","None","arc-sra-team@mail.nasa.gov"
24,1152fb331cf13696cffb0d2bd7e83637,0,"Swim: A Software Information Metacatalog for the Grid","Swim is a software information service for the grid built on top of the NASA-developed Pour framework. Software information is periodically gathered from native package managers on FreeBSD, Solaris, and IRIX as well as the RPM, Perl, and Python package managers on multiple platforms. ","https://ti.arc.nasa.gov/opensource/projects/swim/","None","arc-sra-team@mail.nasa.gov"
25,bde19eb914e73e7323c87f73b99e7a3f,0,"Ballast: Balancing Load Across Systems","Ballast is a tool for balancing user load across Secure Shell Handler (SSH) servers. The system includes a load-balancing client, a lightweight data server, scripts for collecting system load, and scripts for analyzing user behavior. Because Ballast is invoked as part of the SSH login process, it has access to user names. This capability, which is not available in traditional approaches, enables Ballast to perform user-specific load balancing. In addition, Ballast is easy to install, induces near-zero overhead, and has fault-tolerant features in its architectures that will eliminate single points of failure.","https://github.com/pkolano/ballast","None","arc-sra-team@mail.nasa.gov"
26,d3dab47046f623eafc7f45f2f0cc5e1f,0,"Dyper: Dynamic Perimeter Enforcement","Dyper protects a site from unauthorized network flows. The tool offers dynamic perimeter enforcement by providing a general-purpose mechanism for maintaining least-privilege network security policies while still supporting the full utilization of multiport protocols. Dyper requires no changes to software or practices outside of the perimeter and only minimal changes inside.","https://sourceforge.net/projects/dyper/","None","arc-sra-team@mail.nasa.gov"
27,088943c0e49aa021f164393ed9e72f28,0,"JavaGenes Genetic Graphs","JavaGenes is a genetic algorithm code written in Java. It evolves graphs using genetic software techniques and has applications in designing drugs, circuits, or any other system that is easily represented by graphs. ","https://ti.arc.nasa.gov/opensource/projects/javagenes/","None","arc-sra-team@mail.nasa.gov"
28,7ea2717106896803153e184c7cb1fe57,0,"JavaGenes-Scheduler: Evolutionary Software for Earth Observing Satellite Scheduling","JavaGenes-Scheduler is a general purpose evolutionary system designed to compare techniques for scheduling observations. It was originally developed for scheduling observations made by Earth-observing satellites. JavaGenes-Scheduler uses a simple, earliest-first scheduler to insert observations into the timeline in permutation order.","https://ti.arc.nasa.gov/opensource/projects/javagenes/","None","arc-sra-team@mail.nasa.gov"
29,de7c1cff72303c6b3b99180bdafa3d65,0,"Open Mission Control Technologies (Open MCT)","Open MCT is an open source and web-based mission control framework for visualization of data on desktop and mobile devices. Open MCT is designed for analysis, visualization, operation, and support of spacecraft missions. Open MCT provides an extensible plugin system allowing it to be integrated with existing ground systems, and adapted to support multiple missions as well as non-space applications.","https://github.com/nasa/openmct/","None","arc-sra-team@mail.nasa.gov"
30,404542d6c6c00a44bb375419bc9b0c3b,0,"X-Plane Communication Toolbox (XPC)","The X-Plane Connect Toolbox enables users to receive real-time information on one or more simulated vehicles state from the X-Plane flight simulator, and control vehicles running in the X-Plane simulation environment. The toolbox can be used to record simulated flight data, visualize flight profiles, create out-the-window visuals, test autopilots, and test control algorithms. Additionally, the toolbox enables the display of ghost traffic flying predefined flight paths in the simulated airspace, and the visualization of flight plans in the form of waypoints. The toolbox allows custom built or third party autopilot programs to interface with X-Plane through MATLAB, C, C++, Java, or Python . Code examples are included in the open source distribution. The toolbox uses a network communication protocol, allowing X-Plane and the client program to run on different computers.","https://github.com/nasa/XPlaneConnect/","None","arc-sra-team@mail.nasa.gov"
31,a9996baeaa49ce4cb05a130c56638b1a,0,"Blackbody VBA Excel Functions","In the analysis of radiation, it is helpful to be able to predict the heat transfer rate and the spectral distribution of the emitted energy. Presented here is a set of routines written in Microsoft Visual Basic for Applications (VBA) and incorporating functions specific to Microsoft Excel that are useful for predicting the radiative behavior of heated surfaces. These routines include functions for calculating important engineering quantities of primary importance to engineers and scientists such as radiative flux and spectral distributions. In addition, the routines also provide the capability to use such information to determine surface temperatures from spectral intensities and for calculating the sensitivity of these temperature measurements to unknowns in the input parameters.","https://software.nasa.gov/software/DRC-015-017","None","afrc-ipo-softwarecatalogue@mail.nasa.gov"
32,a2fa5dc153d71a603572e22454bc6763,0,"EZASE  Easy Aeroservoelasticity","This is an easy-to-use MATLAB based finite element modeling and simulation tool for aeroservoelastic analysis of rectangular wings with trailing-edge control surfaces. It includes a tutorial on structural finite element modeling (FEM_Tutorial.m) using elements such as 12 DOF plates and 6 DOF beams. The aero tutorial (DLM_VLM_Tutorial.m) shows how to code doublet lattice and vortex lattice, with symmetry capability. Together the finite element and aero tutorials can be used to compare to experimental studies such as ground vibration testing, cantilever beam analysis, as well as wind tunnel testing. The primary code, EZASE.m, links structures and aero together in a commented way to produce a wing in flutter which can be controlled. The wing may include control surfaces or they can be excluded. A state space model with control surface inputs and accelerometer outputs can be produced. This model is used to design a PID control system and is tested using margin studies and pole plots. Other visualization methods such as V-g plots determined using the K-method are also included. The code is commented for Graduate and Undergraduate students of aeroservoelasticity who want to know the basic concepts of medium fidelity aeroservoelastic modeling. Not all methods are coded to industry standards. But students of the field including practicing engineers may find it useful for basic understanding; theoretical manuals for industry level codes tend to leave out many of the coding details. All of the details of the code are open sourced here and most of it is referenced at the top of the file to its source paper or book section. Two AIAA publications with one focusing on V&V with experimental wind tunnel test and ground vibration test data are also included.","https://software.nasa.gov/software/DRC-014-036","None","afrc-ipo-softwarecatalogue@mail.nasa.gov"
33,d04008f91d750f39ed759ad96b1cc996,0,"Tool for Turbine Engine Closed-loop Transient Analysis (TTECTrA)","Tool for Turbine Engine Closed-loop Transient Analysis (TTECTrA)

The Tool for Turbine Engine Closed-loop Transient Analysis (TTECTrA) is a tool, developed in the Mathworks(R) Matlab/Simulink enviornment, intended to extend systems analysis by providing an estimate of the transient performance/capability of a conceptual engine design.  The TTECTrA tool is capable of designing a basic turbofan engine controller, with transient protection, based on the user's engine model and constraints.  TTECTrA is built in the Mathworks Matlab/Simulink environment and relies on the Matlab Control Systems Toolbox to provide additional functionality and streamline the control design process.","https://github.com/nasa/TTECTrA","None","grc-sra-team@mail.nasa.gov"
34,38880aafd6979bba0e088ff908aa93ed,0,"NASA Glenn Research Center: The Early Years for iPad","Photographic gallery type application containing imagery and descriptions from the GRC image archive. Photos and data cover the period from 1941-1979.  The software has been compiled and bundled as an iOS app for the iPad and intended for release through the Apple App Store.","https://www.nasa.gov/centers/glenn/multimedia/grchistory.html","None","grc-sra-team@mail.nasa.gov"
35,ab3a8f6027c30eac562338d9bac1498c,0,"NASA Flywheel for iPad","Augmented reality application intended to highlight NASA Glenn's research efforts in the area of flywheel energy storage systems.  The app utilizes a printed optical target, available on the GRC Flywheel Program brochure and through the NASA Glenn web portal, to present users with 3D views of flywheel hardware and space applications.  Additional video and imagery are also inlcuded in the application package. The software has been compiled and bundled as an iOS app for the iPad and intended for release through the Apple App Store.","https://www.nasa.gov/centers/glenn/multimedia/applied_science/flywheel","None","grc-sra-team@mail.nasa.gov"
36,3e6eee24a93bf5f958a584b35467b4da,0,"Hierarchical Data Format Earth Observing System (HDF-EOS)Data Extractor (HEEX)","The Hierarchical Data Format Earth Observing System (HDF-EOS) Data Extractor (HEEX) is a tool that enables users to extract HDF-EOS data to binary or ASCII data formats in HTML or XML index. The software can be used for both HDF-EOS2 and HDF-EOS5, and it automatically recognizes the two formats.","https://software.nasa.gov/software/GSC-15011-1","None","gsfc-softwarerequest@mail.nasa.gov"
37,55cbc54d0a9a5d9c6248e5d420b55789,0,"Parallel Adaptive Mesh Refinement Library (PARAMESH)","PARAMESH offers parallel support with adaptive mesh capability for a large class of models on distributed memory machines. This package of Fortran 90 subroutines provides an application developer with an easy route to extend an existing serial code using a logically Cartesian structured mesh into a parallel code with adaptive mesh refinement.","https://opensource.gsfc.nasa.gov/projects/paramesh/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
38,8bd82bf9e553411c9bd4bd18f7be2843,0,"Tool For Interactive Plotting, Sonification, and 3D Orbit Display (TIPSOD)","TIPSOD is a software application designed for interactive, animated, 4D (space and time) visualization of satellite orbits. The technology is implemented in Java 3D and is an extension to the existing Satellite Situation Center Web (SSCWeb) 2D static orbit graphics. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/tipsod/index.php","https://opensource.gsfc.nasa.gov/projects/tipsod/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
39,6d25d0816ec5407d3f35ac325281996b,0,"MATLAB-Zemax Toolkit","The MATLAB-Zemax toolkit is a set of MATLAB scripts and functions that enable rapid transfer of optical system and performance data from Zemax optical software into the MATLAB environment. Typical applications include: extracting prescription data into MATLAB to confirm consistency of various delivered models; perturbing the models and performing various analyses in support of integrated modeling activities; and enabling a MATLAB-driven optical model for integrated system-level modeling of wavefront sensing and control. The toolkit can be downloaded at: http://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php","https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
40,ad3e946765ac4977db235ea29ba2e9ed,0,"Advanced Land Image Assessment System (ALIAS)","ALIAS supports radiometric and geometric multispectral image processing for the Advanced Land Imager (ALI) instrument onboard NASA's Earth Observing-1 (EO-1) satellite. The radiometric subsystem characterizes and (where possible) corrects: detector operability; gain; bias; coherent, impulse, and random noise; signal-to-noise ratios; saturation levels; striping and banding; and the stability of detector performance. Geometric processing functions support sensor alignment calibrations; sensor chip assembly alignments; modulation transfer function characterizations; image-to-image characterizations; and geodetic accuracy assessments. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/Alias/index.php","https://opensource.gsfc.nasa.gov/projects/Alias/","None","gsfc-softwarerequest@mail.nasa.gov"
41,f16796ee694dea5741b1a9c20a3bc0aa,0,"Coordinated Data Analysis Workshop Web (CDAWeb)","The CDAWeb software and the CDAWeb service built on this software have been developed and continue to be enhanced and maintained by the Space Physics Data Facility. The technology has supported NASA/Office of Space Science programs dealing with the connections between the Sun and the Earth. CDAWeb software is essentially a set of Interactive Data Language (IDL) scripts that act as the engine of the system. Please visit: http://cdaweb.gsfc.nasa.gov/cdaweb/istp_public/","https://cdaweb.gsfc.nasa.gov/about.html","None","gsfc-softwarerequest@mail.nasa.gov"
42,0eb005ab9e86cb0895beecf2fe3afbe8,0,"Earth Observing System (EOS) Clearing House (ECHO)","The Earth Observing System Clearing House (ECHO) affords the earth science community more flexibility in accessing and sharing data and services. As a metadata clearinghouse, ECHO supports iterative query data access. As a service broker, ECHO decentralizes data-manipulation tools and supports the interoperability of distributed functions. For more information, please visit: http://ti.arc.nasa.gov/opensource/projects/echo/","https://api.echo.nasa.gov/legacy-services/apis.html","None","gsfc-softwarerequest@mail.nasa.gov"
43,b2b64653fd03c149bf18038db8ddf53e,0,"Space Physics Data Facility (SPDF) Web Services","These Web services provide a distributed programming interface to a portion of the Space Physics Data Facility (SPDF) software. The technology conforms to all applicable Web service specifications of the World Wide Web Consortium. Please visit the following URL for additional information: http://spdf.gsfc.nasa.gov/","ftp://spdf.gsfc.nasa.gov/","None","gsfc-softwarerequest@mail.nasa.gov"
44,53b2f52a1053cfffc2fc6023d7e6b3c1,0,"General EQFlux","The WindowsEQFlux computer program converts solar-cell damage resulting from hard-particle radiation into the equivalent fluence on MeV electrons. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/eqflux/index.php","https://opensource.gsfc.nasa.gov/projects/eqflux/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
45,b57351a1ef64355f9754efc571ca0a79,0,"Earth Observing System (EOS) Data Gateway (EDG)","The Earth Observing System Data Gateway (EDG) provides the earth science community with a single interface that will search for data granules from distributed data archives. The innovation enables users to explore, discover, and order available data from geographically distributed providers. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/edg/index.php#software","https://opensource.gsfc.nasa.gov/projects/edg/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
46,71151fb6285323fbaf9364ba7c265ae4,0,"Simple, Scalable, Script-Based Science Processor for Missions (S4PM)","S4PM is a set of Perl scripts that implement a data-driven processing system that executes science algorithms automatically as new data arrive. S4PM includes a graphical user interface for monitoring algorithms and the overall system for failures. The Perl scripts can currently process data from the Moderate Resolution Imaging Spectroradiometer and the Atmospheric Infrared Sounder, but the technology can be extended to process data from other missions if desired. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/s4pm/","https://sourceforge.net/projects/s4pm","None","gsfc-softwarerequest@mail.nasa.gov"
47,cdf2f449b1496dc260696510db67afef,0,"XML to HDF-EOS Convertor","This software program takes an XML representation of the contents of a Hierarchical Data Format-Earth Observing System (HDF-EOS) file and recreates the file from that description. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/xml2he/index.php","https://opensource.gsfc.nasa.gov/projects/xml2he/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
48,0be57a2c6b62c7cecfff3d91b21a9341,0,"HDFView Plugin","This Java-language software plug-in to HDFView provides an interface for two versions of hierarchical data formats (HDF 4 and HDF 5). Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/HDF/index.php","https://opensource.gsfc.nasa.gov/projects/HDF/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
49,5070f3971801e316f70476c5eb36c945,0,"NASA.rb (formerly fUnit)","NASA.rb (formerly fUnit) is a collection of Fortran modules that provide a framework for automating the construction, execution, and reporting of unit tests for Fortran software applications. Support is provided for several aspects of unit testing that are peculiar to scientific technical computing including distributing jparallel applications and parameterized behavior.","https://opensource.gsfc.nasa.gov/projects/FUNIT/","None","gsfc-softwarerequest@mail.nasa.gov"
50,e5ccfeb46f8e65582974740538101460,0,"NASA Forecast Model Web (NFMW) Map Service","NFMW reads weather forecast models outputs; subsets the data to the region of interest; interpolates the data to the specified size; generates a visualization of the data using colors, contour lines, or arrows; and sends the visualization to the client. More information can be found at: http://opensource.gsfc.nasa.gov/projects/NFMW/","https://opensource.gsfc.nasa.gov/projects/NFMW/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
51,1aaca6184ad0f56d01f12bb54071203d,0,"MATLAB-Oslo Toolkit","This toolkit is a set of MATLAB scripts and functions that enable rapid transfer of optical system and performance data from Oslo optical software into the MATLAB environment. Typical applications include: extracting prescription data into MATLAB to confirm consistency of various delivered models; perturbing the models and performing various analyses in support of integrated modeling activities; and enabling a MATLAB-driven optical model for integrated system-level modeling of wavefront sensing and control. The toolkit can be downloaded at http://opensource.gsfc.nasa.gov/projects/Matlab/index.php","https://opensource.gsfc.nasa.gov/projects/Matlab/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
52,81265be9cf1640fe77fab3522ca98b32,0,"User-Friendly Metadata","The User-friendly Metadata (UFM) tool functions as a filter. The tool accepts an ODL file as input and generates a simple HTML representation of the ODL as output. Command-line options provide a user with the ability to modify the program's functionality. Please visit: http://opensource.gsfc.nasa.gov/projects/UFM/index.php","https://opensource.gsfc.nasa.gov/projects/UFM/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
53,d52cfe001301578df4931b14ffe7ff0d,0,"HDF-EOS5 Validator","This software allows generators of HDF-EOS data products to encode product requirement specifications in XML. The tool will then mechanically check product files against those requirements. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/Validator/index.php","https://opensource.gsfc.nasa.gov/projects/Validator/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
54,2aef88084c33623350a56d4bdb2e6dcb,0,"Hierarchical Data Format Earth Observing System (HDF-EOS) Metadata Updater (HEMU)","HDF-EOS Metadata Updater (HEMU) enables users to modify metadata inside an HDF-EOS file (either HDF-EOS2 and HDF-EOS5). The tool can be used to extract metadata from a dataset to a text file that can then be modified with any text editor; replace metadata with text from an external file; or update metadata with text from an external file. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/hemu/index.php","https://opensource.gsfc.nasa.gov/projects/hemu/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
55,35d96ed37e74e12400a59094b273d6bc,0,"Hierarchical Data Format Earth Observing System (HDF-EOS) XML Document-Type Definitions and Schemas","An XML standard has been developed for the HDF-EOS5 file format using document-type definitions and schemas. Users can transform HDF5 files into XML format and vice versa. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php","https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
56,bb4f1b8ab38eb0639ca8c029fc092547,0,"Hierarchical Data Format Earth Observing System (HDF-EOS) Web Server","This shell script chains together existing data usability group tools to: extract ODL metadata from an HDF-EOS file; convert the metadata to XML; reformat the XML into HTML; publish the HTML and the original HDF-EOS file to a Web server and an OPeNDAP server; and reformat the XML and submit it to the Earth Observing System Clearing House (ECHO). For more information, please visit: http://opensource.gsfc.nasa.gov/projects/heserve/index.php","https://opensource.gsfc.nasa.gov/projects/heserve/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
57,c887bfc440bec23248564105d337a9fa,0,"ODL-to-XML Converter","This command-line Java-based utility converts ODL Hierarchical Data Format-Earth Observing Satellite (HDFEOS) metadata file to an HDFEOS XML file. The tool utilizes an all-Java ODL library that includes a syntax and grammar parser. The software can be downloaded at: http://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php","https://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
58,189848a4854ff1c61665873b0071434d,0,"Hierarchical Data Format-Earth Observing System (HDF-EOS) to NetCDF Converter","This C-language computer program accepts a set of scientific data/metadata from an Earth Observing System (EOS) satellite and converts it from the format in which it was created and delivered into another format for data processing and exchange on Earth. The converter can be downloaded at: http://www.hdfeos.org/software/convert_hdfeos5.php","https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
59,8febadaab053208f72cefc2c50816524,0,"Global Precipitation Space and Ground Radar Comparison Software","Designed to support a prototype validation network for the Global Precipitation Measurement (GPM) spaceflight mission, this space and ground radar comparison software collects data from the Precipitation Radar instrument flying on the Tropical Rainfall Measuring Mission (TRMM) spacecraft. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/GPM/","https://opensource.gsfc.nasa.gov/projects/GPM/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
60,e20fa7131c37ce2c4f3188e60650618b,0,"GEOS-5 Global Change Master Modeling Software","GEOS-5 is a next-generation circulation model. Developed using the Earth System Modeling Framework (ESMF) for its internal architecture, the technology represents a new paradigm for systems development. Please visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/GEOS-5/","https://opensource.gsfc.nasa.gov/projects/GEOS-5/","None","gsfc-softwarerequest@mail.nasa.gov"
61,a0454247eb43987dd78764e7ce34ad24,0,"MATLAB-Code V Toolkit","This toolkit is a set of MATLAB scripts and functions that enable rapid transfer of optical system and performance data from Code V optical software into the MATLAB environment. Typical applications include: extracting prescription data into MATLAB to confirm consistency of various delivered models; perturbing the models and performing various analyses such as ray tracing or generation of point-spread functions in support of integrated modeling activities; and enabling a MATLAB-driven optical model for integrated system-level modeling of wavefront sensing and control. The toolkit can be downloaded at: http://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php","https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
62,09fe75e5f1a3211b7ba8ec98688bb045,0,"XML to ODL Convertor","This program translates an XML representation of Hierarchical Data Format-Earth Observing System (HDF-EOS) ODL metadata back to the ODL format. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/xml2odl/index.php","https://opensource.gsfc.nasa.gov/projects/xml2odl/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
63,a6a80efee592b3bec7bd18aea7ee9508,0,"General Mission Analysis Tool (GMAT), Version 2011A","GMAT is a software system for trajectory optimization, mission analysis, trajectory estimation, and prediction. Analysts use GMAT to design spacecraft trajectories, optimize maneuvers, perform orbit determination, visualize and communicate mission parameters, and understand a mission&apos;s trade space. GMAT contains models of real-world objects such as spacecraft and thrusters, as well as analysis "objects" such as plots and reports. These objects are used in the mission sequence wherein the user employs commands supported by the system to model missions and perform estimation. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/GMAT/index.php","https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2011a","None","gsfc-softwarerequest@mail.nasa.gov"
64,f5a8614c354189b78b926d090ef538e1,0,"Assert-Based Unit Test Tools","The ut-assert unit test tools provide a unit test framework and a collection of utilities that are designed to facilitate unit testing. These tools implement an assertion-based testing philosophy that requires the developer to explicitly write verification statements that assert whether a condition is true or false.  This approach is much different than the Flight Software Branch's historical approach to unit testing that creates a log file that requires developer analysis in order to determine whether a test passed or failed. In order to use the tools a developer populates the framework with their unit tests and links with the ut-asssert library to create an executable. ","https://opensource.gsfc.nasa.gov/projects/ut-assert/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
65,ce63ba7302b05486fa675d87065e07fd,0,"Open GeoSocial Consumer Application","This software interface provides a social and collaborative environment to allow end-users such as GEOSS users to discover, visualize, and access Earth Science information on demand from simple browsers and allow them to share the resulting products with their friends and/or Community of Interest through social networks.","https://opensource.gsfc.nasa.gov/projects/gsca/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
66,0bc9901751b5143bf48b70e474f66453,0,"Core Flight System (CFS) Software Bus Network (SBN) Application, Version 1.0","The SBN serves as a plug-in to the cFE framework to transfer messages across process/processor interfaces. The technology has three primary functions: to establish and maintain a connection to each peer over available process/processor interfaces; to distribute and maintain a subscription message database for each peer; and to distribute messages to peers that have subscribed to message identifiers.","https://sourceforge.net/projects/cfs-sbn","None","gsfc-softwarerequest@mail.nasa.gov"
67,bdb20c4e231f594a67cda39b35ab6b2d,0,"Vectorization of Global Flood Monitoring System using Topojson","This capability allows for the generation of vectors by reading the Global Flood Monitoring data, processing the data and generating aTopoJSON encoded file for visualization on the web.","https://opensource.gsfc.nasa.gov/projects/vgfms/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
68,fac569163df528d82f646794591f8320,0,"Core Flight System (CFS) CFDP Version 2","The CFDP application provides the capability to transmit and receive files to/from the ground. Tables are used to allow flexibility in specifying directory priorities and configurations.","https://sourceforge.net/projects/cfs-cfdp","None","gsfc-softwarerequest@mail.nasa.gov"
69,e8fca55c8a9e2c0238e4ee3d3a90c690,0,"Core Flight System (CFS) Checksum Application Version 2","Checksum (CS) is one of the reusable applications that make up the Core Flight System (CFS). The technology performs memory integrity management by verifying the contents of critical flight memory regions. Unexpected changes in memory (i.e., due to an SEU) are reported to ground operators.","https://sourceforge.net/projects/cfs-cs","None","gsfc-softwarerequest@mail.nasa.gov"
70,e0449eb54ed9f7fd6aa8b4564633359f,0,"Core Flight System (CFS) Data Storage (DS) Application Version 2","The DS application provides the ability to store data (i.e., messages) into files. Tables are used to provide the flexibility for specifying messages.","https://sourceforge.net/projects/cfs-ds","None","gsfc-softwarerequest@mail.nasa.gov"
71,67124637157749aabff85cfd721468f4,0,"Core Flight System (CFS) Housekeeping (HK) Application Version 2","The CFS Housekeeping application provides the ability to organize data from various packets into new packets in order to best utilize the telemetry bandwidth available for a mission.","https://sourceforge.net/projects/cfs-hk","None","gsfc-softwarerequest@mail.nasa.gov"
72,a06115c6e3aa9d361df80e7b93437199,0,"Core Flight System (CFS) File Manager (FM) Application Version 2","FM provides the user commands to perform the following operations: copy file, move file, rename file, delete file(s), close file, concatenate file, decompress file, delete directory contents, create directory, remove directory, obtain file information, obtain open file listing, and obtain directory listings.","https://sourceforge.net/projects/cfs-fm","None","gsfc-softwarerequest@mail.nasa.gov"
73,a1ed74a23b6926cb662762751b0afbc3,0,"Core Flight System (CFS) Memory Dwell Application Version 2","The Memory Dwell application telemeters the contents of table-defined addresses at a table-defined dwell rate. Addresses can be processed using symbols if the target processor/operating system includes symbols.","https://sourceforge.net/projects/cfs-md","None","gsfc-softwarerequest@mail.nasa.gov"
74,ffe2e66c46b86149fa772b607e9ea71c,0,"Core Flight System (CFS) Limit Checker (LC) Application Version 2","The Limit Checker (LC) application is responsible for monitoring telemetry values.","https://sourceforge.net/projects/cfs-lc","None","gsfc-softwarerequest@mail.nasa.gov"
75,f5bcd03245d75455ab594e23f46cfef3,0,"Core Flight System (CFS) Health and Safety Application Version 2","The plug-and-play CFS Health and Safety application is compatible with the Core Flight Executive (cFE) and uses the Operating System Abstraction Layer (OSAL), both of which were developed by Goddard Space Flight Center in order to provide a reusable, platform-independent, mission-independent, layered architecture for hosting applications. The technology can be used for any government or commercial spacecraft. Please visit the following URL for additional information: http://sourceforge.net/projects/coreflightexec/files/cFE-6.1.1/","https://sourceforge.net/projects/cfs-hs","None","gsfc-softwarerequest@mail.nasa.gov"
76,8099f24ec7144cb67907adc51e955618,0,"Core Flight System (CFS) Stored Command (SC) Application Version 2","The CFS SC application provides the ability to execute onboard absolute-time and relative-time command sequences. The technology offers a generic implementation that can be configured by a user to fit the needs of a specific mission.","https://sourceforge.net/projects/cfs-sc","None","gsfc-softwarerequest@mail.nasa.gov"
77,b593dbcbd39b5a7c21af6ffb41e18277,0,"Core Flight System (CFS) Scheduler Application Version 2","The Scheduler application uses a one-second major timeframe, which is divided into a designer-determined collection of equally divided minor timeframes. The technology is configurable and table-driven to provide greater flexibility.","https://sourceforge.net/projects/cfs-sch","None","gsfc-softwarerequest@mail.nasa.gov"
78,8247c807a9411eb714a6c5a8cf554943,0,"Integrated Lunar Information Architecture for Decision Support (ILIADS), Version 3.0","ILIADS 3.0 provides the data management capabilities to access CxP-vetted lunar data sets from the LMMP-provided Data Portal and the LMMP-provided OnMoon lunar data product server. (LMMP stands for Lunar Mapping and Modeling Project.) It also provides specific quantitative analysis functions to meet the stated LMMP Level 3 functional and performance requirements specifications that were approved by the CxP.","https://opensource.gsfc.nasa.gov/projects/ILIADS/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
79,5c802568560701dc4fadcca476ae4ea4,0,"Goddard Satellite Data Simulation Unit","The Goddard Satellite Data Simulation Unit (SDSU) is a comprehensive unified system of multi-sensor satellite instrumental simulators. Skill of weather forecasting models can be evaluated in terms of satellite-observed multi-sensor radiance levels. Alternatively, the remote sensing community can more readily utilize atmospheric model simulations to develop and test their retrieval algorithms for application of Earth science.","https://opensource.gsfc.nasa.gov/projects/G-SDSU/","None","gsfc-softwarerequest@mail.nasa.gov"
80,8abfe36847872dbd17832e88555bb20c,0,"Obs4MIPS","This technology is a front end to the Climate Model Output Rewriter (CMOR2) software package. The technology converts a variety of standard data formats (e.g., netcdf3, netcdf4, Grads control files, and MATLAB data files) to allow publication on the Earth System Grid Federation (ESGF) data node.","https://opensource.gsfc.nasa.gov/projects/obs4mips/index.php","None","gsfc-softwarerequest@mail.nasa.gov"
81,a0ea8d213fed6939a84892b8a90363da,0,"Ground and Space Radar Volume Matching and Comparison Software","This software enables easy comparison of ground- and space-based radar observations for validation purposes. It can be accessed at: http://opensource.gsfc.nasa.gov/projects/GSRadar/","https://opensource.gsfc.nasa.gov/projects/GSRadar/","None","gsfc-softwarerequest@mail.nasa.gov"
82,161300d993996d6b78bcbf06f089c6ff,0,"Orbit-Determination Toolbox","Based on MATLAB and Java, the flexible Orbit-Determination Toolbox is intended primarily for the advanced mission analysis that might be performed in the concept exploration, proposal, and early design phases. Visit the following URL for more information: http://opensource.gsfc.nasa.gov/projects/ODTBX/","https://opensource.gsfc.nasa.gov/projects/ODTBX","None","gsfc-softwarerequest@mail.nasa.gov"
83,4554eb419ec24dc034d8e12e2a5b1b3d,0,"Core Hierarchical Segmentation (HSEG) Software Package","This version of HSEG is not subject to patent restrictions. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/HSEG/","https://opensource.gsfc.nasa.gov/projects/HSEG/","None","gsfc-softwarerequest@mail.nasa.gov"
84,722dec0a490f9d4bf07054235a91dd11,0,"Visual System for Browsing, Analysis, and Retrieval of Data (ViSBARD)","ViSBARD provides a way of visualizing multiple vector and scalar quantities as measured by many spacecraft at once. The data are displayed three-dimensionally; may be displayed either as connected lines or as points; and allow the rapid determination of vector configurations, correlations between many measurements at multiple points, and global relationships. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/visbard/index.php","https://sourceforge.net/projects/visbard/","None","gsfc-softwarerequest@mail.nasa.gov"
85,76de8ee4dcaa8c29cdcf013ce4346474,0,"Lossless Hyper-/Multi-Spectral Data Compression Software","This software performs lossless hyper-spectral and multi-spectral data compression. It can be downloaded at: http://opensource.gsfc.nasa.gov/projects/LHD/","https://opensource.gsfc.nasa.gov/projects/LHD/","None","gsfc-softwarerequest@mail.nasa.gov"
86,40653113f9c9081457c0af8f451caaf7,0,"Simple, Scalable, Script-based Science Processing Archive (S4PA)","Simple, Scalable, Script-based, Science Processing (S4P) Archive (S4PA) is a disk-based archiving system for remote sensing data. The tool can be used for new data transfer, data preprocessing, metadata generation, and data archival. Services provided include data access control, data subscription, metadata publication, and data recovery. All data are archived on readily available disk drives, with FTP and HTTP being the primary modes of data access. S4PA includes a graphical user interface for monitoring and re-configuring system operation. Please visit: http://disc.sci.gsfc.nasa.gov/additional/techlab/s4pa","https://disc.sci.gsfc.nasa.gov/additional/techlab/s4pa","None","gsfc-softwarerequest@mail.nasa.gov"
87,ecc38fedff8ad12fca8e157f56021646,0,"General Mission Analysis Tool (GMAT) v.R2016a","The General Mission Analysis Tool (GMAT) is the worlds only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.

GMAT contains models of real world objects such as spacecraft and thrusters, and analysis "objects" such as propagators, plots, and reports. These objects are used in a mission sequence in which the user employs commands supported by the system to model mission events and perform estimation.

For a complete list of new features, compatibility changes, and bug fixes, see the Release Notes.  Below are just some of the new capabilities contained in this release. 
Production quality orbit determination (Operational Certification expected in November, 2016)
Code 500 ephemeris propagator
STK ephemeris file output
Write command to save GMAT configurations during execution
Include macro to load GMAT configurations from external sources during execution
Many new built in math functions and parameters
130 pages of new user documentation
","https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2012a","None","gsfc-softwarerequest@mail.nasa.gov"
88,8774a4f6e7645144d8113045935ce75c,0,"HORIZON 5 - Framework for distributed data management and product generation workflow","HORIZON 5 is an extensible framework for data management systems. It is packaged with the following components SIP/AIP: The Open Archival Information System (OAIS) specification defines the framework for information capturing to information distribution. ","https://software.nasa.gov/software/NPO-49540-1","None","jpl_ott@jpl.nasa.gov"
89,0ab41258aea4a719e9210ae1744584df,0,"RedShift: mobile app for following the tactical and strategic operations meeting schedule","The RedShift mobile app lets operations staff on the MSL project follow the operations schedule of tactical and strategic meetings. RedShift is an application for iOS and Android that presents the meeting agenda for MSL strategic and tactical meeting events that are a part of the operations workflow.","https://software.nasa.gov/software/NPO-50256-1","None","jpl_ott@jpl.nasa.gov"
90,c527275122397704e588ee0a489184a0,0,"Juneberry Web Service Software","Implements the open webification API and provides ReSTful web services for planetary image data in commonly-used formats.  Exposes content of planetary image data through meaningful URLs and enables creation of applications on diverse platforms.","https://software.nasa.gov/software/NPO-48378-1","None","jpl_ott@jpl.nasa.gov"
91,2d6c8338765976d30f8a3880644f0ea8,0,"The EDRN Knowledge Environment","JPL has provided the underlying infrastructure to share data increasing the study power associated with capturing and comparing information. The infrastructure provides software services including data processing and management (eCAS), biomarker data management (BMDB), specimen data management (ERNE), and a portal to link the system together and provide access. These are software built on top of the Apache OODT software services.","https://software.nasa.gov/software/NPO-48644-1","None","jpl_ott@jpl.nasa.gov"
92,5bdaf0a42fb125ac169564a86efa97fa,0,"DEMUD: Discovery through Eigenbasis Modeling of Uninteresting Data","We have developed a machine learning solution called DEMUD (Discovery through Eigenbasis Modeling of Uninteresting Data). DEMUD works by building a model U of the uninteresting class and then identifying items that are maximally anomalous (and therefore likely to be interesting) with respect to that model.
","https://github.com/wkiri/DEMUD","None","jpl_ott@jpl.nasa.gov"
93,f7141d1ee077659b67d0c4d0af816252,0,"DTNTAP","DTNTAP is a userspace Ethernet driver with the potential to expedite DTN deployment by providing a transition mechanism for legacy IP (Internet Protocol) applications to run alongside delay and disruption tolerant applications in large scale communication networks. By presenting an Ethernet-like interface, DTNTAP gives application developers access to many of the benefits of DTN without having to become immediately proficient at a new programming API.","https://software.nasa.gov/software/NPO-48906-1","None","jpl_ott@jpl.nasa.gov"
94,4cd89131577e1917dce09e8b8da42e6e,0,"DTKA, a Prototype Implementation of Delay-Tolerant Security Key Distribution","Unlike all Internet mechanisms for security distribution (e.g., certificate authorities), DTKA operates over the extremely long signal propagation times and interrupted links that characterize communication with interplanetary spacecraft. It has no single point of failure and cannot be "spoofed" by an attacker's subversion of any single key authority machine (or even two key authority machines, in most configurations.  ","https://software.nasa.gov/software/NPO-49413-1","None","jpl_ott@jpl.nasa.gov"
95,92d2bd42c962f72e0c852c68674d1ee9,0,"Juneplum - ReSTful Web Access of OPeNDAP Hyrax Back End Server","Juneplum is implemented as a Java servlet webapp and can be directly deployed into the same servlet engine that Hyrax frontend lives in. With Juneplum, any data product served by OPeNDAP is made simultaneously accessible in a fully ReSTful way.","https://software.nasa.gov/software/NPO-49868-1","None","jpl_ott@jpl.nasa.gov"
96,f6d9c705bb8a18e986fb12236f5465d5,0,"EDGE - The Extensible Data Gateway Environment","EDGE uses Apache Solr for fast indexed search backend.  Inventory data stored in PO.DAAC's Oracle server is being incrementally indexed avery 15 minutes.  Apache Solr provides optimal search solution to all data it managements.  By offloading data from Oracle, this eliminates Denial of Service (DoS) attacks against the core data management backend.  To further ensure reliable serving of data, EDGE's Apache Solr uses Master and Slave model.  The Master instance is for data indexing.  ","https://github.com/dataplumber/edge","None","jpl_ott@jpl.nasa.gov"
97,87676bfde82f4ba211fa9abf8feb8498,0,"NEXUS: Deep Data Platform","NEXUS provides a bridge between science data and horizontal-scaling data analysis. It provides a workflow to divide science artifacts into small data tiles to store in a cloud-scaled database where they can be quickly retrieved through a high performance spatial search registry. Through spatial index, NEXUS provides fast access to all relevant data tiles where each tile fits into RAM for fast in-memory computation. ","https://software.nasa.gov/software/NPO-50157-1","None","jpl_ott@jpl.nasa.gov"
98,46717e0b6c7c0030f3cbb77ecac1a956,0,"Radiometric Calibration of UAVSAR Images","UAVSAR backscatter data contain both geometric and radiometric distortions due to underlying topography and the radar viewing geometry. Currently, backscatter variation due to topography is the single largest error source when estimating biomass over steep or hilly terrain. Thus, proper calibration normalizes the backscatter images so that only contributions from the parameters of interest remain. ","https://software.nasa.gov/software/NPO-47969-1","None","jpl_ott@jpl.nasa.gov"
99,6960e576777435a4384a050d28b86d59,0,"A Web-based Search Service to Support Imaging Spectrometer Instrument Operations.","Just as web search involves more than matching phrases, spectral search is more challenging than simply matching the shape of the spectrum.  The background substrate and illumination changes can cause the same signature to appear very different across scenes.  Here, the search service uses an adaptive matched-filter approach that compensates for the context and background characteristics of each scene.  ","https://software.nasa.gov/software/NPO-49004-1","None","jpl_ott@jpl.nasa.gov"
100,59f4d2b709ecf0eb97bb82aa13f1eb92,0,"GNEIMO Advanced Techniques for Constrained Internal Coordinate Molecular Dynamics","The GNEIMO methods and algorithms build up on the Spatial Operator Algebra (SOA) multibody dynamics framework. The specific problems addressed in this work are velocity intialization techniques that are consistent with the CICMD equipartition priniciple, techniques for nulling momentum drift, analysis and solutions for the flying ice-cube effect, and performance of integration schemes. ","https://software.nasa.gov/software/NPO-48712-1","None","jpl_ott@jpl.nasa.gov"
101,52d540752480c31b7ae67d3cca56b50f,0,"The OCO-2 Level 2 Retrieval Algorithm","The primary purpose of the Level 2 retrieval software is to derive estimates of the column averaged atmospheric CO2 dry air mole fraction, XCO2, and other Level 2 data products from the spectra returned by the OCO-2 mission. Where XCO2 is defined as the ratio of the column abundances of CO2 and the column abundance of dry air.","https://disc.gsfc.nasa.gov/OCO-2","None","jpl_ott@jpl.nasa.gov"
102,5f45d955659221a68bb04dd5cab81c0f,0,"TIE 0.4 - The Imagery Exchange for the NASA Global Imagery Browse Services (GIBS) Project","The software known as the The Imagery Exchange (TIE) 0.4 is an extension of the HORIZON 5 framework. It delivers horizontal scaling solutions for image capturing to automate the generation of the Meta Raster Format (MRF) imagery products. ","https://github.com/nasa-gibs/tie","None","jpl_ott@jpl.nasa.gov"
103,b12376948bcaecbc297da4090f8933d3,0,"Space Mission Architecture and Risk Analysis Tool (SMART)","SMART supports a high-level system trade study on a complex mission, such as a potential Mars Sample Return (MSR) mission, in an intuitive and quantitative manner. SMART offers a unique capability of handling correlated redundancies and accurately evaluate the probability of mission success as well as its sensitivity to the reliability of mission components. ","https://software.nasa.gov/software/NPO-49732-1","None","jpl_ott@jpl.nasa.gov"
104,458cec9c099979ae4a09e757358ad671,0,"Cobra: A Code Browser and Analyzer -- an extendable, interactive tool for the analysis of C code","Provides software developers, peer reviewers, testers, and quality assurance personnel with an interactive tool that facilitates searching for patterns, confirm compliance or non-compliance with coding guidelines and coding standards, identify suspicious code fragments, etc. Cobra uses a lexical analyzer for C to scan in source code. ","https://software.nasa.gov/software/NPO-50050-1","None","jpl_ott@jpl.nasa.gov"
105,d3fda9095530904bc06623531882ea62,0,"OMINAS (OPEN-SOURCE MODULAR IMAGE NAVIGATION AND ANALYSIS SYSTEM) astronomical data processing software","The primary motivation for the development of this software was to separate the analysis part of the problem from the data-specific part. This allows the exact same software to be used for multiple missions as needed; the only requirement for new mission input is the creation of a translator specific to that data source. Provides an API and for developing tools for astronomical data analysis. ","https://software.nasa.gov/software/NPO-50136-1","None","jpl_ott@jpl.nasa.gov"
106,bfa029d0b68f0023a2d9a46b8a691b70,0,"SysML System Model for the Thirty Meter Telescope (TMT)","SysML is a standard, visual, and general-purpose system modeling language developed by the Object Management Group (OMG). MagicDraw from NoMagic is used as a modelling tool.","https://github.com/Open-MBEE/TMT-SysML-Model","None","jpl_ott@jpl.nasa.gov"
107,7fef2aaf7fa92ff2d950b50f75a4bfc3,0,"IMCE Ontological Modeling Framework","JPL's Integrated Model-Centric Engineering (IMCE) initiative developed ontologies for Model-Based Systems Engineering (MBSE) to support JPL's MBSE practices and methodologies. The IMCE ontologies have been carefully engineered to provide support for scalable query and reasoning according to the semantics of the Ontology Web Language (OWL) standard in such a way that these ontologies can be mapped as extensions of the Unified Modeling Language (UML) & Systems Modeling Language (SysML) standards. ","https://github.com/JPL-IMCE","None","jpl_ott@jpl.nasa.gov"
108,17600ec1a8a8c3a0d1def1b6ff62635b,0,"EarthKit","EarthKit provides a framework for collaboration among researchers in Earth science. It provides a set of software tools for sharing any user's research environment via the web and managing workflows that run in the cloud. By leveraging cloud computing services in this novel way, EarthKit can instantly replicate a reesarch computing environment (software, data, operating system environment and hardware).","https://software.nasa.gov/software/NPO-49145-1","None","jpl_ott@jpl.nasa.gov"
109,e23c6510b2de062d15c3af1f56f568a8,0,"Regional Hydrologic Extremes Assessment System (RHEAS) software framework","Automates the deployment of nowcasting and forecasting hydrologic simulations and ingests satellite observations (through data assimilation). Allows coupling of other environmental models. Also facilitates delivery of data products to users via a GIS-enabled database.  users of project outputs through CCAFS network of partners. Our project objectives, and approach are integral with the goals of SERVIR.","https://github.com/nasa/RHEAS","None","jpl_ott@jpl.nasa.gov"
110,5b04dd9b136ee4210835acffd0d53719,0,"File Exchange Interface 5 - New enhancements to NTR 40075","The File Exchange Interface (FEI) service offers secure file transaction, store, transport, and management services. The latest distribution, FEI5 software code name Komodo, is a complete redesign from its predecessors by adopting the latest computing technologies and standards. ","https://software.nasa.gov/software/NPO-47089-1","None","jpl_ott@jpl.nasa.gov"
111,f4c2977582568231f110206ee0d8d586,0,"Ndarts","Ndarts is designed as a general purpose dynamics library that can be used for the modeling of robotic platforms, space vehicles, molecular dynamics and such applications. All NASA space vehicles use such capabilities. ","https://software.nasa.gov/software/NPO-47703-1","None","jpl_ott@jpl.nasa.gov"
112,4d4368455548473eafe6f454cd99fb7c,0,"Athena","One of the big efforts of NASA is the observation of planet earth from space. Global climate change is a prime example. Extending Athena from the county level to the global level would give a simulation tool for examining how populations and countries might respond to global cllimate change and/or new policies related to controlling climate change. ","https://software.nasa.gov/software/NPO-47857-1","None","jpl_ott@jpl.nasa.gov"
113,c03476811543423a6a231e66f376c568,0,"Oceanographic Data Management And Archive System","The Physical Oceanography Distributed Active Archive Center (PO.DAAC) is the center for oceanographic data for the NASA Earth Science Data and Information System (ESDIS). The primary function of PO.DAAC is to ingest, validate, archive, and distribute oceanographic artifacts.","https://software.nasa.gov/software/NPO-47934-1","None","jpl_ott@jpl.nasa.gov"
114,27d00f8c08dd7c0e5b47730e1efbd910,0,"ACCoRDs Conflict-Detection (CD3D)/Conflict-Resolution (CR3D) Algorithms","Written in Java and C++ and based on the Airborne Coordinated Conflict Detection and Resolution mathematical framework, CD3D and CR3D are prototype implementations of state-based conflict-detection and conflict-resolution algorithms for a 3D airspace.","https://shemesh.larc.nasa.gov/people/cam/ACCoRD/","None","larc-sra@mail.nasa.gov"
115,93d88507a49a53265814278ea97096e1,0,"Conflict Prevention Bands","Conflict prevention information has been assembled into prevention bands that advise a crew on maneuvers that should not be taken, helping to ensure that an aircraft's path is free of conflicts with other aircraft.","https://shemesh.larc.nasa.gov/fm/fm-atm-codes.html","None","larc-sra@mail.nasa.gov"
116,349c8d889a48d46a57daa5e755c0c5f7,0,"Strategic Conflict Resolution (Stratway)","Stratway modifies a four-dimensional (latitude, longitude, altitude, and time) flight plan to ensure a conflict-free trajectory. This type of resolution is strategic in that it resolves conflicts over long time horizons, perhaps over several hours.","https://software.nasa.gov/software/lar-17876-1","None","larc-sra@mail.nasa.gov"
117,5d9d6ba4362bf360373a1100ba538d97,0,"Computational Fluids Laboratory 3-Dimensional (CFL3D)","CFL3D is a structured-grid, cell-centered, upwind-biased, Reynolds-averaged Navier-Stokes (RANS) code. It can be run in parallel on multiple grid zones with point-matched, patched, overset, or embedded connectivities. Both multigrid and mesh sequencing are available in time-accurate or steady-state modes. ","https://github.com/nasa/CFL3D","None","c.l.rumsey@nasa.gov"
118,36995b7cf483a531074cdb96514bd7cc,0,"Fortran Unit Testing Framework (fUnit v1.0)","The fUnit software provides a framework for unit-testing Fortran 90, 95, and 2003 code.","https://sourceforge.net/projects/fortranxunit/","None","larc-sra@mail.nasa.gov"
119,a0e544d766ece2a044b37ba75fce33d6,0,"ROBUS-2 Fault-Tolerant Broadcast Communication System for Modular Avionics","ROBUS-2 is a time-division, multiple-access broadcast communication system that uses a time-indexed communication schedule for medium-access control. The technology provides guaranteed fault-tolerant services that include: message broadcast (Byzantine Agreement), dynamic communication schedule update, time reference (clock synchronization), and distributed diagnosis (group membership).","https://ti.arc.nasa.gov/opensource/projects/robus-2/","None","larc-sra@mail.nasa.gov"
120,390a05c577ba4f8fe01b8147dd3bd422,0,"Tolerance Domain Specific Language","This sensitivity task employs the Monte Carlo method. Thousands of simulations are run with randomly varied input parameters, and then statistical correlations are computed to determine the sensitivity of output parameters to each input parameter.","https://github.com/kleb/nasarb/blob/master/uq4sim","None","larc-sra@mail.nasa.gov"
121,e7bbf4caa3ac018ecb521bf96df237b4,0,"Java Program to Promote an Open-Source E Standard for Mass Properties Engineering","This open-source Java software helps develop electronic standards (E-Standards) for mass properties engineering. An E-Standard is a highly descriptive dataset that includes standardizing functions for data manipulation, interrogation, and formatting. With this tool, any number of users can interface with the proposed E-Standard datasets and still seamlessly utilize their own software methods.","https://ti.arc.nasa.gov/opensource/projects/e-standards-mass-properties-engineering/","None","larc-sra@mail.nasa.gov"
122,6d111fe96e8a9a3615657393186d97e1,0,"FilePlottingTools","This Excel plugin written in VB.net allows rapid post-processing of thermal analysis data from text files or from SINDA-formatted SAV files. The software can be adapted to other data formats as well.","https://fileplottingtools.larc.nasa.gov/","None","larc-sra@mail.nasa.gov"
123,fd723b3e3da0ce74e5ded842d8ebc5f3,0,"Flight Dynamics Simulation of a Generic Transport Model","This software is a flight dynamics simulation of a transport aircraft. It implements general rigid body equations of motion for the vehicle dynamics and draws aerodynamic forces from a standard coefficient expansion implemented as table lookups. Dynamics of actuator servos and bandwidth of sensors are also included. The simulation is coded in Simulink, a model-based environment using a commercial simulation package from Mathworks, Inc. The software is not stand-alone; it must be run from inside this commercial environment, making use of numerical libraries for basic operations as well as the overall time-stepping and numerical integration routines.","https://github.com/nasa/GTM_DesignSim/","None","larc-sra@mail.nasa.gov"
124,6b9c2ba6e85eb6a1a4a88b509337742d,0,"Surface Aquatic Vegetation Detection Tool (SAVDT)","This toolbox generates shapefiles from the most recently acquired Landsat 8, Landsat 8 Surface Reflectance, and Sentinel-2 imagery over the Winam Gulf in Kenya depicting locations where water hyacinth in most likely present.","https://github.com/NASA-DEVELOP/SAVDT","None","larc-sra@mail.nasa.gov"
125,8ad95d7af6f15d71818faca5870ac356,0,"Modified Snowmelt Runoff Model For Forecasting Water Availability in Chile","Modified Snowmelt Runoff Model for Forecasting Water Availability in Chile (M-SRM) models daily stream flow of snowmelt runoff as a function of temperature, elevation, snow-covered area, precipitation rate, and experimentally determined coefficients. Using MODIS and TRMM data, the software provides tools for synthesizing daily fractional snow cover and daily precipitation measurements. M-SRM provides daily stream flow estimates for three months beyond the start of the growing season.","https://github.com/NASA-DEVELOP/M-SRM","None","larc-sra@mail.nasa.gov"
126,21445ff138f5f51c445292ffcf8499e1,0,"Tool for Analysis of Surface Cracks (TASC)","Created using the commercial math analysis software MATLAB, TASC enables the easy computation of nonlinear J-integral solutions for surface-cracked plates in tension by accessing and interpolating between the 600 nonlinear surface crack solutions documented in NASA/TP-2011-217480. The only required inputs to the program are the surface crack dimensions, plate cross-section dimensions, and material properties. TASC provides a convenient and easy-to-use interface for the solution set that allows a novice user to obtain a fast and reliable fracture toughness solution. ","https://sourceforge.net/projects/tascnasa/","None","msfc-sra-team@mail.nasa.gov"
127,de0a8e0a6cfc774dda7e7fc95a65e256,0,"libSPRITE","A set of libraries used in the development of software applications.  libSPRITE was specifically designed for real-time systems that operate on a single computational node (but may be multi-core) to systematically address common coding errors, provide for multi-threaded programming to produce the exact same results regardless of the number of cores on the host compute node, and offer support for in-operation reconfigurability (parameter and control flow modifications). Components include engineering unit encoders, math functions, a task scheduler built on top of pthreads, a publish/subscribe data distribution system, and a Lua scripting language interface.","https://github.com/nasa/libSPRITE/","None","msfc-sra-team@mail.nasa.gov"
128,81adcfae532522261eb8e9593cabe99f,0,"Adverse Condition & Critical Event Prediction Toolbox (ACCEPT)","ACCEPT is an open source machine learning code for model development to support both regression and detection modules, including fidelity analysis.","https://c3.nasa.gov/dashlink/static/media/algorithm/ACCEPT_osrelease_1.6.tar.gz","None","rodney.martin@nasa.gov"
129,4aa8a730eea919842220e8bfe9d02a82,0,"Advanced Diagnostics and Prognostics Testbed (ADAPT)","The IVHM Project in the Aviation Safety Program has funded research in electrical power system (EPS) health management. This problem domain contains both discrete and continuous behavior, and thus is directly relevant for the hybrid diagnostic tool HyDE. In FY2007 work was performed to expand the HyDE diagnosis model of the ADAPT system. The work completed resulted in a HyDE model with the capability to diagnose five times the number of ADAPT components than was previously tested. The expanded diagnosis model passed a corresponding set of new ADAPT fault injection scenario tests with no incorrect faults reported. The time required for the HyDE diagnostic system to isolate the fault varied widely between tests; this variance was reduced by tuning of the HyDE input parameters. These results and other diagnostic design tradeoffs are discussed. Finally, possible future improvements for both the HyDE diagnostic model and HyDE itself are presented.","https://dashlink.arc.nasa.gov/static/dashlink/media/dataset/Exp_BN.tar.gz","None","jason.duley@nasa.gov"
130,bc7aaa790c8c48595b6034b6a80beae8,0,"NASA WorldWind Research: AgroSphere","An educational web application that visualizes the effects of climate change on agriculture using a large collection of global agriculture and weather station data.","https://github.com/NASAWorldWindResearch/AgroSphere","None","patrick.hogan@nasa.gov"
131,8ac7603159e5bd5f133f78f54e14a8a8,0,"NASA WorldWind Research: CitySmart","Open framework for urban infrastructure management","https://github.com/NASAWorldWindResearch/CitySmart","None","patrick.hogan@nasa.gov"
132,6fc3ac1f37806e4ece6e19814e648d25,0,"NASA WorldWind Research: WxOps-WorldWind","WorldWind Earth application visualizes weather data and performs animation by extending the NASA WorldWind JAVA Client","https://github.com/NASAWorldWindResearch/WxOps-WorldWind","None","patrick.hogan@nasa.gov"
133,9694d8bce4121a19070f0e08a2e9a904,0,"Common-Metadata-Repository","The Common Metadata Repository (CMR) is an earth science metadata repository for NASA EOSDIS data. The CMR Search API provides access to this metadata.","https://github.com/nasa/Common-Metadata-Repository","None","christopher.d.durbin@nasa.gov"
134,f6d1f2166370e34bb9d2b4e8e8911bb4,0,"georef_geocamutilweb","geocamUtilWeb is a set of utilities used by Django web apps in the GeoCam Share app collection.","https://github.com/nasa/georef_geocamutilweb","None","tamar.e.cohen@nasa.gov"
135,873f49a7cc3fd020b0976bccbc7b9a7a,0,"georef","georef repository","https://github.com/nasa/georef","None","tamar.e.cohen@nasa.gov"
136,5915367275800be1f15b8f83cbc32c0b,0,"georef_deploy","georef_deploy repository","https://github.com/nasa/georef_deploy","None","tamar.e.cohen@nasa.gov"
137,74d0ca3e3f4ae8a44eccb1a9c4b1be45,0,"georef_geocamtiepoint","georef_geocamtiepoint repository","https://github.com/nasa/georef_geocamtiepoint","None","tamar.e.cohen@nasa.gov"
138,2a3cff93523cbf0dc67c568ad85c692d,0,"georef_imageregistration","The Image Registration module is intended to help automate the process of registering images to the correct location on the ground. It consists of two main components: A - Fetching RGB satellite imagery of Earth to use for comparison. B - Searching for the correct image registration parameters.","https://github.com/nasa/georef_imageregistration","None","tamar.e.cohen@nasa.gov"
139,3fa1518e28a8e65f0d7a29af4007f198,0,"Open Mission Control Demo (OpenMCT)","An interactive demo of the Open MCT mission control software","https://github.com/nasa/openmct-demo","None","peter.l.richards@nasa.gov"
140,da9447a6ac7151cd7400cd12cc4a5173,0,"cmr-opensearch","CMR-OpenSearch is a web application developed by NASA EOSDIS to enable data discovery, search, and access across the CMR Earth Science data holdings via the OpenSearch standard. ","https://github.com/nasa/cmr-opensearch","None","calin.duma@nasa.gov"
141,d45c56b23c93628dffb39fb3e1e65aec,0,"cmr-csw","CMR-CSW is a web application developed by NASA EOSDIS to enable data discovery, search, and access across the CMR Earth Science data holdings via the OpenGIS Catalogue Service for the Web (CSW) standard.","https://github.com/nasa/cmr-csw","None","calin.duma@nasa.gov"
142,a3d3d50b872ef6ced3e76c57b09862f7,0,"Open Mission Control Tutorial (OpenMCT)","A tutorial for OpenMCT that guides you through integrating historical and realtime telemetry.","https://github.com/nasa/openmct-tutorial","None","peter.l.richards@nasa.gov"
143,b479eb0ac8970b4a85dc883b4f5cf394,0,"kepler-pipeline","Kepler Science Data Processing Pipeline","https://github.com/nasa/kepler-pipeline","None","bill.wohler@nasa.gov"
144,400ba6eccd2fd9774f15b853118fb86b,0,"meshNetwork","The Mesh Network Communication System is a peer-to-peer communication network architecture that enables communication between network nodes of various types. The initial primary goal of the system was to enable communication between small formations of cubesats or other small satellites, but the basic mesh architecture is applicable to data exchange between network assets of any type. The system has been flight tested on formations of small unmanned aerial systems (sUAS) and shown to provide low latency data throughput for dynamic flight environments.","https://github.com/nasa/meshNetwork","None","christopher.m.becker@nasa.gov"
145,8f19914b80556b82a17d81d3e5897773,0,"cFE","The Core Flight Executive (cFE) provides software bus, time, event, executive, table, and file services, and it defines the application programming interface (API) for each set function. Applications subscribe to cFE services at runtime, making system modifications easy. Facilitating rapid prototyping, new applications can be compiled, linked, loaded, and started without requiring the entire system to be rebuilt.","https://github.com/nasa/cFE","None","james.marshall-1@nasa.gov"
146,d993f9d2cc413c256486867c0189b8e3,0,"pvslib","NASA PVS Library of Formal Developments","https://github.com/nasa/pvslib","None","cesar.a.munoz@nasa.gov"
147,b33c6e0a8f5afe7889172e22e0fd46ff,0,"fprime","Fprime flight software framework","https://github.com/nasa/fprime","None","timothy.canham@jpl.nasa.gov"
148,cad5e878fefaee69506da584b53b746e,0,"knife","The knife library calculates the boolean subtraction of arbitrary watertight triangular polyhedra. The result of this subtraction is also watertight triangular polyhedra. The triangular faces of the resultant polyhedra are created with a Delaunay triangle mesher. These polyhedra are suitable for performing cut cell partial differential equation solutions (i.e., computational fluid flow simulations). ","https://github.com/nasa/knife","None","MikePark.rb@GMail.com"
149,aa2084edf1b59ec15a1fbe8008e47e7c,0,"edsc-echoforms","A jQuery plugin implementing the ECHO Forms specification.","https://github.com/nasa/edsc-echoforms","None","patrick.m.quinn@nasa.gov"
150,f68b2dcc93ff766e2ac82513e9615fc6,0,"cfs_lib","cfs_lib repository","https://github.com/nasa/cfs_lib","None","james.marshall-1@nasa.gov"
151,a9c70b66e5257dab9df75b77f1eb28d6,0,"SCH","NASA core Flight System Scheduler Application","https://github.com/nasa/SCH","None","james.marshall-1@nasa.gov"
152,3ae786a4f1a3765c86dc09f1b34fb25a,0,"SBN","The Software Bus Network application (SBN) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS.","https://github.com/nasa/SBN","None","james.marshall-1@nasa.gov"
153,6b817ed6a3fe41a63fd0daa390ab6819,0,"SC","NASA core Flight System Stored Command Application","https://github.com/nasa/SC","None","james.marshall-1@nasa.gov"
154,0be9c516a694adaafc5e120708fd1e6d,0,"MD","NASA core Flight System Memory Dwell Application","https://github.com/nasa/MD","None","james.marshall-1@nasa.gov"
155,3f85f4c9c990bc429996fc6e3d1d973a,0,"HK","NASA core Flight System Housekeeping Application","https://github.com/nasa/HK","None","james.marshall-1@nasa.gov"
156,1509bd7f8339b65bf898520e0ea1f459,0,"HS","NASA core Flight System Health Safety","https://github.com/nasa/HS","None","james.marshall-1@nasa.gov"
157,a15d47130726d713943c893a0bc5e67e,0,"LC","NASA core Flight System Limit Checker Application","https://github.com/nasa/LC","None","james.marshall-1@nasa.gov"
158,7bf9c20dd747249a95783c8fa8a43f69,0,"DS","NASA core Flight System Data Storage Application","https://github.com/nasa/DS","None","james.marshall-1@nasa.gov"
159,99257f8604d19e9f441100e4caf93fe2,0,"CS","NASA core Flight System Checksum Application","https://github.com/nasa/CS","None","james.marshall-1@nasa.gov"
160,c72207308a3642ed6fa580cfd6feb0c4,0,"CF","NASA core Flight System File Transfer Application","https://github.com/nasa/CF","None","james.marshall-1@nasa.gov"
161,5bc4d83eb3bb0c652c1fcc6409b8f7e8,0,"refine","refine repository","https://github.com/nasa/refine","None","c.l.rumsey@nasa.gov"
162,c9b1b9f37b5d7f3193361df3e83efab8,0,"FM","NASA core Flight System File Manager Application","https://github.com/nasa/FM","None","james.marshall-1@nasa.gov"
163,8e501625876759113a9f1cbb48765647,0,"edsc-timeline","A jQuery plugin implementing a timeline view of data, allowing time range selection as well as keyboard and touch interaction For a basic usage example and a testbed for changes.","https://github.com/nasa/edsc-timeline","None","patrick.m.quinn@nasa.gov"
164,62b6156faa44d8e1ab1a8b8c1b720fe1,0,"General Mission Analysis Tool (GMAT) v.R2017a","The General Mission Analysis Tool (GMAT) is the worlds only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.

GMAT contains models of real world objects such as spacecraft and thrusters, and analysis "objects" such as propagators, plots, and reports. These objects are used in a mission sequence in which the user employs commands supported by the system to model mission events and perform estimation.

For a complete list of new features, compatibility changes, and bug fixes, see the Release Notes.  Below are just some of the new capabilities contained in this release. 
Production quality orbit determination (Operational Certification expected in November, 2016)
Code 500 ephemeris propagator
STK ephemeris file output
Write command to save GMAT configurations during execution
Include macro to load GMAT configurations from external sources during execution
Many new built in math functions and parameters
130 pages of new user documentation
","https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2016a/","None","steven.p.hughes@nasa.gov"
165,77c1b83744d2159fb026644b6b58d4b3,0,"RtRetrievalFrameworkDoc","This software retrieves a set of atmospheric/surface/instrument parameters from a simultaneous fit to spectra from multiple absorption bands. The software uses an iterative, non-linear retrieval technique (optimal estimation). After the retrieval process has converged, the software performs an error analysis. The products of the software include all quantities needed to understand the information content of the measurement, its uncertainty, and its dependence on interfering atmospheric properties. Spectra from ground-based or space-based measurement with arbitrary observation geometry can be analyzed. The retrieved parameters can be chosen from a large set of atmospheric (e.g., volume mixing ratio of gases or aerosol optical depth), surface (e.g., Lambertian reflection), and instrument (e.g., spectral shift or instrument line shape parameters) parameters. The software uses an accurate, state-of-the-art, multiple-scattering radiative transfer code combined with an efficient polarization approximation to simulate measured spectra. The software enables fast and highly accurate simulations of broad spectral ranges by an optional parallelization of the frequency processing in the radiative transfer model. The framework was written with flexibility in mind. New algorithms and instruments are added by creating additional classes that implement the defined interfaces. Bindings are available for both Python and Lua.","https://github.com/nasa/RtRetrievalFrameworkDoc","None","james.mcduffie@jpl.nasa.gov"
166,028351db9ea4b31af30dfba99f5c1128,0,"APOD API","Astronomy Picture of the Day API service. A microservice written in Python which may be run on Google App Engine with the Flask micro framework.","https://github.com/nasa/apod-api","https://github.com/nasa/apod-api","jennifer.n.betancourt@nasa.gov"
167,e486cee321b01e90c8084db07323977c,0,"Viewpoints: Software for Visualization of Multivariate Data","A software application that allows the interactive visualization of multivariate data using a variety of standard techniques, Viewpoints can be used with extremely large data sets.","https://app.assembla.com/spaces/viewpoints/documents","https://app.assembla.com/spaces/viewpoints/wiki/Home","arc-sra-team@mail.nasa.gov"
168,954aa8e97d6018ca2f6ed5c8dbd1ee39,0,"MISR Toolkit","The MISR Toolkit is a simplified programming interface to access MISR L1B2, L2 conventional and ancillary data products. It is an interface built upon HDF-EOS that knows about MISR data products.","https://github.com/nasa/MISR-Toolkit","https://nasa.github.io/MISR-Toolkit/html/index.html","jpl_ott@jpl.nasa.gov"
169,dbad4f54c15c8ca5a59348cb887d7095,0,"Abaqus User Subroutine Verification (abaverify)","abaverify is a collection of Python scripts that is used for testing and verifying the behavior of user subroutines for the commercial finite element code Abaqus.","https://github.com/nasa/Abaverify","https://software.nasa.gov/software/LAR-18938-1","larc-sra@mail.nasa.gov"
170,e56487a1646a61a107099f0ec16b7657,0,"CEOS Data Cube Platform v.2 (CEOS2)","The Committee on Earth Observation Satellites (CEOS) has long recognized a need for data processing infrastructure to support Earth science objectives in developing countries.  Forest preservation initiatives, carbon measurement initiatives, water management and agricultural monitoring are just few examples of causes that can benefit greatly from remote sensing data.  Currently, however, many developing nations lack the in-country expertise and computational infrastructure to utilize remote sensing data.

The CEOS Data Cube Platform provides a flexible model to address these needs.  The CEOS Data Cube Platform is a data processing platform for Earth science data, with a focus on remote-sensing data.  The platform provides a data ingestion framework that includes support for automated ingestion of a wide variety of remote sensing data products.  The data products are ingested into an N-dimensional data array that abstracts away management of distinct acquisitions.   The platform has a tiered API for data processing and a data/application platform layer for higher-level access.","https://github.com/ceos-seo/Data_Cube_v2","https://github.com/ceos-seo/Data_Cube_v2","larc-sra@mail.nasa.gov"
171,a8eb28e6bbfdfdf5c358f58f7859a05f,0,"Coastal Mid-Atlantic METRIC Model","METRIC model software can be used to calculate evapotranspiration (ET) rates of agricultural fields by executing the Measuring Evapotranspiration at High Resolution with Internalized Calibration (METRIC) model in an ArcGIS Python script.  The model requires input data from Landsat 8 OLI/TIRS and local weather stations.  The creation of this software was motivated by the need to reduce irrigation costs for farmers and provide a means of drought monitoring for the agricultural industry.  This software has the potential to reduce the economic stress on the agricultural industry by enhancing crop productivity and irrigation efficiency.  ","https://github.com/NASA-DEVELOP/METRIC","https://github.com/NASA-DEVELOP/METRIC","larc-sra@mail.nasa.gov"
172,2248152fd323c517edec037ed70e46da,0,"Drought Severity Assessment Tool (DSAT)","The Drought Severity Assessment Tool (formerly Drought Severity Assessment - Decision Support Tool) will be used by Navajo Nation Department of Water Resource Managers for their monthly drought reports and other activities related to drought monitoring within the region. With small adjustments it is possible for the tool to be used in other locations given the user has already downloaded and processed the proper precipitation data.","https://github.com/NASA-DEVELOP/DSAT","https://github.com/NASA-DEVELOP/DSAT","jeffry.w.ely@nasa.gov"
173,902569778137c907041fe6371d77ae87,0,"Land Surface Temperature MODIS Visualization (LaSTMoV)","Extreme heat causes and exacerbates a number of health problems, leading to hospitalization and death in some cases. The problem of severe heat is notably felt in Maricopa County, Arizona, where the socially disadvantaged and physically vulnerable are especially susceptible to the effects of extreme heat. Several organizations, including the Arizona Department of Health Services and the Phoenix Heat Relief Network, are working to create more effectively placed cooling centers and heat warning systems to aid those with the highest risk of exposure. This project created a Python tool using Aqua Moderate Resolution Imaging Spectrometer (MODIS) land surface temperature parameters to generate heat maps that reference demographics data on extreme heat days. ","https://github.com/NASA-DEVELOP/LaSTMoV","https://github.com/NASA-DEVELOP/LaSTMoV","larc-sra@mail.nasa.gov"
174,db88aa5796f3e6e13d44fa52738aaef2,0,"DEVELOP DRIP and SLIP Landslide Detection Package (DRIP-SLIP)","The DRIP-SLIP model automatically analyzes red band spectral information and soil moisture information derived from Landsat 8 and ASTER and SRTM data, at a fine to moderate resolutions, to determine areas that might be new landslides. This is important to help increase the temporal latency for landslide products that emergency managers, planners, and scientists are able to use in their work.","https://github.com/NASA-DEVELOP/DRIP-SLIP","https://github.com/NASA-DEVELOP/DRIP-SLIP","larc-sra@mail.nasa.gov"
175,9ffd8e412a563d27c2d07fe3ab3ec4f9,0,"Core Flight System (CFS) Memory Manager Application Version 2","The Memory Manager application processes commands, generally from the ground, in order to dump the contents of a memory location, dump the contents of a range of memory locations, load a memory location with specified data, load a range of memory with specified data, or fill an area of memory with the specified fill pattern. Operations can be performed on non-volatile, volatile, and memory mapped I/O.","https://github.com/nasa/MM","https://software.nasa.gov/software/GSC-16011-1","gsfc-softwarerequest@mail.nasa.gov"
176,596f87f75ae232738fd2df4e9212ef0b,0,"Landslide Hazard Assessment for Situational Awareness (LHASA)","This framework integrates a regional landslide susceptibility map and satellite-based rainfall estimates into a binary decision tree model, considering both daily and antecedent rainfall. Using a regionally distributed, percentile-based threshold approach, the model outputs a pixel-by-pixel nowcast in near real-time at a resolution of 30 arcseconds to identify areas of moderate and high landslide hazard. ","https://github.com/vightel/ojo-processing","http://ojo-streamer.herokuapp.com/","gsfc-softwarerequest@mail.nasa.gov"
177,10dbafcf0a0fef6df1f7bee351921405,0,"Multi-threaded Copy Program (MCP)","MCP is a high-performance file copy utility that achieves performance gains through parallelization. Multiple files and parts of single files are processed in parallel using multiple threads on multiple processors. The program employs the OpenMP and MPI programming models. ","https://github.com/pkolano/mutil","https://pkolano.github.io/projects/mutil.html","arc-sra-team@mail.nasa.gov"
178,edef3157d1708d4529f9cf1ea0aaeb6d,0,"RACE - Runtime for Airspace Concept Evaluation","RACE is a software architecture and framework for configurable, highly concurrent and distributed message based systems.  RACE can be used to rapidly build simulations that span several machines (including synchronized displays), interface existing hardware simulators and other live data feeds, and incorporate sophisticated visualization components such as NASAs WorldWind viewer. RACE is implemented as a distributed actor system that runs within Java virtual machines.","https://github.com/NASARace/race","https://github.com/NASARace/race/blob/master/README.md","arc-sra-team@mail.nasa.gov"
179,5643d50f91ad03b2dc8fbf6b99c7ca71,0,"Program Round-Off Certifier via Static Analysis (PRECiSA) with Kodiak Integration","PRECiSA (Program Round-off Error Certifier via Static Analysis) is a fully automatic analyzer for the estimation of round-off errors of floating-point valued functional expressions. The input to PRECiSA is a program composed of floating-point valued functions.","https://github.com/nasa/PRECiSA","http://precisa.nianet.org","larc-sra@mail.nasa.gov"
180,bbf07c7caf47bbe5b6022ec13a84e08f,0,"Independent Configurable Architecture for Reliable Operations of Unmanned Systems with Distributed On-board Services (ICAROUS-2)","The communication module of ICAROUS enables data transfer between ICAROUS and other off board entities, e.g., ground stations, other air traffic, via the open source MAVLink protocol (http://qgroundcontrol.org/mavlink/start).  The decision making module of ICAROUS provides a framework to monitor incoming data from aircraft sensors and data links for conflicts, e.g., violations of keep-in/keep-out regions, collision hazards, weather hazards, and resolve these conflicts with the help of the core ICAROUS algorithms.
","https://github.com/nasa/icarous","https://shemesh.larc.nasa.gov/fm/ICAROUS/","larc-sra@mail.nasa.gov"
181,421bb8bcf088cb412c4cf4a4ec449f2d,0,"PolyCARP: Algorithms and Software for Computations with Polygons","PolyCARP is a package of algorithms, including both their formal models and software implementations, for computing containment, collision, resolution, and recovery information for polygons. The intended applications of PolyCARP are related, but not limited, to safety critical systems in air traffic management. One application is weather avoidance. A weather cell can be approximated by a polygon, and PolyCARP provides algorithms to detect whether a trajectory will intersect such a polygon in the near future and will provide maneuver guidance to avoid the polygon. If the trajectory is inside the polygon at the current time, PolyCARP provides algorithms for maneuver guidance to exit the polygon. Another application is ensuring that an aircraft stays inside a predetermined safety region, also known as assured containment, and PolyCARP provides algorithms that ensure that a point is inside or outside a particular polygonal region. Another application is obstacle avoidance by an aircraft. There are several functionalities provided by PolyCARP. There are algorithms to insure that a point is contained in or excluded from a polygon. There are also collision detection algorithms that determine if a moving point intersects a polygon, including the case where the polygon is moving or even warping over time, as well as where the polygon and the point are following piecewise linear trajectories. There are algorithms that resolve potential collisions between and point and a polygon by providing collision-free trajectories, and there are algorithms that compute new trajectories to regain separation from a polygon.","https://github.com/nasa/polycarp","https://shemesh.larc.nasa.gov/fm/PolyCARP","larc-sra@mail.nasa.gov"
182,c14a5d2da59788833c1944e9312893e7,0,"Detect and Avoid Alerting Logic for Unmanned Systems (DAIDALUS) with Dynamic Well-Clear Separation Volumes","DAIDALUS is a reference implementation in Java and C++ of RTCA-228 detect and avoid concept for the integration of Unmanned Aircraft Systems into civil airspace. DAIDALUS consists of algorithms for determining the current well-clear status between two aircraft and for predicting a well-clear violation within a lookahead time, assuming non-maneuvering trajectories. In the case of a predicted well-clear violation, DAIDALUS also provides an algorithm that computes the time interval of well-clear violation. Furthermore, DAIDALUS implements algorithms for computing prevention bands, assuming a simple kinematic trajectory model. Prevention bands are ranges of track, ground speed, and vertical speed maneuvers that are predicted to be in well-clear violation within a given lookahead time.
","https://github.com/nasa/wellclear","https://shemesh.larc.nasa.gov/fm/DAIDALUS/","larc-sra@mail.nasa.gov"
183,05b842adf293b7d46abb920bf55a1032,0,"Prognostics Algorithm Library","The Prognostics Algorithm Library is a suite of algorithms implemented in the MATLAB programming language for model-based prognostics (remaining life computation). It includes algorithms for state estimation and prediction, including uncertainty propagation. The algorithms take as inputs component models developed in Matlab, and perform estimation and prediction functions. The library allows the rapid development of prognostics solutions for given models of components and systems. Different algorithms can be easily swapped to do comparative studies and evaluations of different algorithms to select the best for the application at hand.","https://github.com/nasa/PrognosticsAlgorithmLibrary","https://github.com/nasa/PrognosticsAlgorithmLibrary/wiki","arc-sra-team@mail.nasa.gov"
184,9b6c27cf50644715f180209238112335,0,"Prognostics Model Library","The Prognostics Model Library is a modeling framework focused on defining and building models for prognostics (computation of remaining useful life) of engineering systems, and provides a set of prognostics models for select components developed within this framework, suitable for use in prognostics applications for these components. The library currently includes models for valves, pumps, and batteries. The Prognostics Model Library is implemented in MATLAB. The implementation consists of a set of utilities for defining a model (specifying variables, parameters, and equations), simulating the model, and embedding it within common model-based prognostics algorithms. A user can use existing models within the library or construct new models with the provided framework.","https://github.com/nasa/PrognosticsModelLibrary","https://github.com/nasa/PrognosticsModelLibrary/wiki","arc-sra-team@mail.nasa.gov"
185,9d326f80da5efe87ad55cb073c621acd,0,"Portable Environment for Quick Image Processing (QuIP)","The QuIP interpreter, a software environment for QUick image processing, uses an interactive scripting language designed to facilitate use by non-expert users, through features such as context-sensitive automatic response completion and integrated documentation.  The package includes a number of script packages that implement high-, medium-, and low-level functions (e.g., analysis of eye images for human gaze tracking, feature tracking, and image filtering). The environment also includes facilities for displaying images on screen, drawing and overlaying graphics, and constructing graphical user interfaces using the scripting language.  Currently supported platforms are *NIX (tested on Mac OS X and Linux), and Apple iOS.","https://github.com/nasa/QuIP","https://github.com/nasa/QuIP/wiki","arc-sra-team@mail.nasa.gov"
186,ae08f95908644429e538c61c033bc46e,0,"Worldview Options Eosdis","This repository contains the configuration used by Worldview on the Earthdata site. See the Worldview repository for more information. This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.","https://github.com/nasa-gibs/worldview-options-eosdis","https://github.com/nasa-gibs/worldview-options-eosdis","support@earthdata.nasa.gov"
187,a15f0d8b91c41febcd436efbb5e2e66c,0,"Worldview Design","This repository contains the wireframes and designs for NASA Worldview. This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.","https://github.com/nasa-gibs/worldview-design","https://github.com/nasa-gibs/worldview-design","support@earthdata.nasa.gov"
188,d531a3d60eeed282f3de3ccd243ef4fd,0,"Worldview Options Template","This repository contains the generic branding with basic configuration for NASA Worldview.This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.","https://github.com/nasa-gibs/worldview-options-template","https://github.com/nasa-gibs/worldview-options-template","support@earthdata.nasa.gov"
189,9b0dc37e199a790362ee689e396e7b1e,0,"WinASSIST: (Windows Abstract Semi-Markov Specification Interface To The SURE Tool)","The WinASSIST program uses a rule-oriented language to automatically generate input files for the SURE/WinSURE program. The user describes the failure behavior and recovery behavior of a fault-tolerant computer system in an abstract language. The WinASSIST program then automatically generates a corresponding semi-Markov model. The abstract language allows efficient description of large, complex systems. A one-page WinASSIST-language description may result in a semi-Markov model with thousands of states and transitions. The WinASSIST program also provides model-reduction techniques to facilitate efficient modeling of large systems.","https://github.com/nasa/WinASSIST","https://github.com/nasa/WinASSIST","larc-sra@mail.nasa.gov"
190,c3c831142761ac8e4eef2ca1da573297,0,"Windows Semi-Markov Range Evaluator (WinSURE)","This package is used by aerospace flight software developers to predict the reliability of flight-critical computer processes.","https://github.com/nasa/WinSURE","https://github.com/nasa/WinSURE","larc-sra@mail.nasa.gov"
191,4fbe6ce86645f6e7df1f192709bf59d2,0,"Autonomous eXplorer Control System (AXCS)","AXCS enables smartphones and other mobile devices to be utilized as a ground-based test bed for operations in extreme environments. For NASA, the technology is currently being used to evaluate hardware for balloon launches. The software's tool kits provide environmental and situational measurements, command and data handing (CD&H) functions, events timing, data logging, and communications with external devices. ","https://github.com/cboshuizen/AXCS","https://github.com/cboshuizen/AXCS","arc-sra-team@mail.nasa.gov"
192,6dd57912b7c289cfe64e54e4649df798,0,"Savors: A Scalable Aural-Visual Environment for Security Event Monitoring, Analysis, And Response","Savors is a tool for security event monitoring, analysis, and response. The technology scales to real-world environments and uses high-end computing resources on-demand to compile behavior profiles that point to anomalous behavior. Auralization allows both monitoring and analysis to be performed in parallel and draws attention to critical events in one tool when utilizing another. Remote data access and response capabilities across distributed resources are enabled using grid computing that provides a secure, single sign-on environment.","https://github.com/pkolano/savors","https://pkolano.github.io/projects/savors.html","arc-sra-team@mail.nasa.gov"
193,dfc2d6c0c3e2861be65741b49f1bba59,0,"Netmark eXtensible DataBase, Data Access and Retrieval Composition (XDB3-DARC)","This innovation will query using a suite of operators in the Netmark/XDB query language to retrieve elements based on the absolute value of tags in the XML source. In an earlier version of the software, element retrieval was based solely on "full-text" term searches of the tags and their values. ","https://sourceforge.net/projects/darcxdb3","https://sourceforge.net/projects/darcxdb3","arc-sra-team@mail.nasa.gov"
194,1eb29e813cfc5d41be052fee1db42c8c,0,"Network-Form Game Software Library (libnfg)","The libnfg software library describes how humans interact with their environment and with other humans. The tool provides a Monte Carlo analysis of user-specified "network-form games," which are flexible modeling methodologies that combine Bayes nets and game theory to model complex systems.","http://ritchielee.net/wp-content/uploads/2015/11/libnfg-snap-1.0.zip","http://ritchielee.net/software/libnfg-snap-1-0/","arc-sra-team@mail.nasa.gov"
195,c440b1acae5f9dad8d2416ed32f0f230,0,"AutoBayes: Automatic Design of Customized Analysis Algorithms and Programs","AutoBayes uses extended Bayesian networks, a powerful symbolic system, and algorithm schemas to automatically generate efficient and customized programs for data analysis. It generates a standardized design document containing a graphical representation of the Bayesian network and of the details regarding the code's generation.","https://ti.arc.nasa.gov/opensource/projects/autobayes","https://ti.arc.nasa.gov/opensource/projects/autobayes/","arc-sra-team@mail.nasa.gov"
196,764dc68334d601ddc0c85f880b310f66,0,"Highly Scalable Matching Pursuit Signal Decomposition Algorithm (MPD)","MPD is a powerful and effective iterative algorithm for signal decomposition and feature extraction. The technology decomposes any signal into linear combinations of its dictionary elements, or "atoms." ","https://ti.arc.nasa.gov/opensource/projects/mpd","https://c3.nasa.gov/dashlink/resources/125/","arc-sra-team@mail.nasa.gov"
197,9c2ac8a2aa23b10910a48e62a25384e3,0,"Hypatheon-Searchable Database Capability for Formalized Mathematics","The Hypatheon suite of software tools provide a searchable database capability for the specialized domain of formalized mathematics. The technology is designed to be a companion to a specific tool called PVS, which supports an emerging type of advanced software verification intended for safety-critical systems. Hypatheon aims to enhance PVS users' productivity by first indexing the mathematical theories rendered in the PVS specification language, then making their contents searchable by an interactive software tool.","https://github.com/nasa/pvslib/tree/master/Hypatheon-1.2","https://software.nasa.gov/software/LAR-18232-1","larc-sra@mail.nasa.gov"
198,29e2890ff9ed2f31a7ccb227dec86d88,0,"Multivariate Time Series Search Capability to Identify Complex Patterns in Large Datasets","This software allows the user to specify a time series over multiple variables to search within massive datasets. The tool will return a listing of events (a time series) from the database that spans multiple variables and is within a threshold distance from the query. Experiments on numerous real aviation datasets have demonstrated the algorithm's capability to uncover potential aircraft safety events (as validated by multiple aviation safety experts and airlines). ","https://ti.arc.nasa.gov/opensource/projects/mts-search","https://ti.arc.nasa.gov/opensource/projects/mts-search/","arc-sra-team@mail.nasa.gov"
199,868c289d378d474f96f5911517839b34,0,"Physics-Model-Based Wiring Fault Detection Toolbox for MATLAB","Providing a toolbox of functionality for MATLAB, this NASA-developed software detects precursor wiring faults (e.g., chafing) in shielded impedance-controlled cabling using measurements from off-the-shelf, time-domain reflectometry or vector-network analyzer hardware. The technology combines high-fidelity analytical physics models for signal propagation with fast Bayesian inference algorithms for intrinsic cable and fault-parameter retrieval.","https://ti.arc.nasa.gov/opensource/project/wiring","https://ti.arc.nasa.gov/opensource/project/wiring/","arc-sra-team@mail.nasa.gov"
200,c4d5eac7dae62ebc9bb462b11d97bef2,0,"Desktop Exploration of Remote Terrain (DERT)","Desktop Exploration of Remote Terrain (DERT) is a software tool for exploring large Digital Terrain Models (DTMs) in 3D. It aids in understanding topography and spatial relationships of terrain features, as well as performing simple analysis tasks relevant to the planetary science community.","https://github.com/nasa/DERT","https://github.com/nasa/DERT","arc-sra-team@mail.nasa.gov"
201,d97c35de1f4d0e760e05eb9ebc75b843,0,"GeoCam, Version 2","GeoCam is a geospatial system for disaster response that consists of (1) low-cost consumer hardware (i.e., a digital camera or cell phone, position/orientation sensors, and an optional embedded controller) and (2) a Web-based workflow that enables images and other geo-referenced data to be shared and viewed in a variety of ways. GeoCam includes software that computes image location and provides for geo-rectification, KML-formatted geospatial data generation, image management, and geo-referenced data sharing.","https://github.com/geocam/geocamShare","https://github.com/geocam/geocamShare","arc-sra-team@mail.nasa.gov"
202,a9a884e902323c2633b03cd8f7ce9929,0,"Kepler Community Data Analysis Tools (PyKE)","The Kepler archive contains time-series data calibrated and reduced from detector pixels. The pipelined reduction includes the removal of time-series trends systematic to a spacecraft and its environment.","https://github.com/KeplerGO/PyKE/","http://keplerscience.arc.nasa.gov/software.html#pyke","arc-sra-team@mail.nasa.gov"
203,47fc13514a65b39ee4424644cc863f13,0,"Extendable Uniform Remote Operations Planning Architecture (EUROPA) 2.1","EUROPA is a general-purpose, reusable, artificial intelligence software system. The tool generates plans for performing complex activities in parallel. Functionality includes the capability of verifying that a plan satisfies all constraints. ","https://github.com/nasa/europa","https://github.com/nasa/europa","arc-sra-team@mail.nasa.gov"
204,fe483954325289a369835aa7373aaef1,0,"NASA Tensegrity Robotics Toolkit (NTRT) v1","The NASA Tensegrity Robotics Toolkit (NTRT) is a collection of C++  and MATLAB software modules for the modeling, simulation, and control of Tensegrity Robots.  Tensegrity Robots are a biologically inspired approach to building robots based on the tension networks of tensegrity structures, which have no rigid connections between elements.  The NTRT was created to enable: the rapid co-exploration of structures and controls in a physics based simulation environment; the development of tensegrity robotics algorithms such as structural analysis, kinematics, and motion planning; and the validation of the algorithms and controls on hardware prototypes of the tensegrity robots.

","https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim","https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim","arc-sra-team@mail.nasa.gov"
205,6bb903073158970930c5ca42647f2f94,0,"Parallel Dantzig-Wolfe Decomposition","This implementation of the Dantzig-Wolfe decomposition is built upon the GNU Linear Programming Kit. The technology provides a command-line tool for solving properly decomposed linear programs.","https://github.com/alotau/dwsolver","https://github.com/nasajoey/dwsolver","arc-sra-team@mail.nasa.gov"
206,7f7aca76b18c13ed4871f3b8f587a392,0,"NASA STRuctrual ANalysis (NASTRAN)","NASTRAN is a finite element analysis program that was originally developed for NASA in the late 1960s under U.S. government funding for the aerospace industry. The software suite provides engineers a comprehensive simulation solution for insight into structural behavior. NASTRAN source code is integrated in a number of different software packages, which are distributed by a range of companies.","https://github.com/nasa/NASTRAN-95","https://github.com/nasa/NASTRAN-95","larc-sra@mail.nasa.gov"
207,0e0984d7945db4a956f8242f454952fe,0,"VICAR - Video Image Communication And Retrieval","VICAR, which stands for Video Image Communication And Retrieval, is a general purpose image processing software system that has been developed since 1966 to digitally process multi-dimensional imaging data. VICAR was developed primarily to process images from the Jet Propulsion Laboratory's unmanned planetary spacecraft. It is now used for a variety of other applications including biomedical image processing, cartography, earth resources, astronomy, and geological exploration. ","https://github.com/nasa/VICAR","http://www-mipl.jpl.nasa.gov/vicar_open.html","jpl_ott@jpl.nasa.gov"
208,75d019137e9a436cb5325e504a8c3ca8,0,"IPv6 Python Extension Module","IPv6 Extension module for Python that allows a user to enable IPv6 features not yet available for any Python versions.  Currently, it allows for IPv6 flow labels to be enabled for a given Python socket object.","https://github.com/nasa/ipv6_python","https://github.com/nasa/ipv6_python/wiki","grc-sra-team@mail.nasa.gov"
209,c3c29dda3ba104bfc41df35c04b0e7b5,0,"Channel Emulator","The Channel  Emulator (CE) is a  software-based network testing  tool.  Its primary functions are providing data framing services, acting  as  a flexible  protocol gateway, and providing network emulation capabilities. 

The software caneasily accept one protocol, optionally extract the payload, send out as different protocol, or encapsulate one in another.  It can also introduce delays up to deep space levels, and introduce bit errors and other link degradations.","https://github.com/nasa/channel-emulator","https://github.com/nasa/channel-emulator/wiki","grc-sra-team@mail.nasa.gov"
210,7bef62362e9c75c4d45ee32522863e1a,0,"Multipath TCP (MPTCP) Tools, Analytics, and Configurations","The network-traffic-analysis-tools directory contains a collection of applications written in C to help both analyze and visualize MPTCP packet traces.","https://github.com/nasa/multipath-tcp-tools","https://github.com/nasa/multipath-tcp-tools","jishac@nasa.gov"
211,1229f44ef43c7c4d5aa4471b914b889c,0,"Earthdata Search Web Application","Earthdata Search is a web application developed by NASA EOSDIS to enable data discovery, search, comparison, visualization, and access across EOSDIS' Earth Science data holdings","https://github.com/nasa/earthdata-search","https://search.earthdata.nasa.gov","gsfc-softwarerequest@mail.nasa.gov"
212,70ac4f3db608c381d8861d0b136ad6da,0,"Python Polarimetric Radar Beam Blockage Calculation (PyBlock)","This Python package will calculate beam blockage in polarimetric weather radar data using the specific differential phase (KDP) and fully self-consistent (FSC) methods of Timothy J. Lang et al. (2009; J. Atmos. Oceanic Technol.). This information can be used to correct the radar data when the radar beams intersect objects like trees, buildings, and mountains.","https://github.com/nasa/PyBlock","https://github.com/nasa/PyBlock/wiki","msfc-sra-team@mail.nasa.gov"
213,4f22e065f1768befd2f514b440d46741,0,"Python Interface to Dual-Pol Radar Algorithms (DualPol)","This is an object-oriented Python module that facilitates precipitation retrievals (e.g., hydrometeor type, precipitation rate, precipitation mass, particle size distribution information) from polarimetric radar data. It leverages existing open source radar software packages to perform all-in-one retrievals that are then easily visualized or saved using existing software.","https://github.com/nasa/DualPol","https://github.com/nasa/DualPol/wiki","msfc-sra-team@mail.nasa.gov"
214,9529dcebc0c671f653d3b3e4827ac724,0,"Single Doppler Retrieval Toolkit (SingleDop)","SingleDop is a software module, written in the Python programming language, that will retrieve two-dimensional low-level winds from either real or simulated Doppler radar data.","https://github.com/nasa/SingleDop","https://github.com/nasa/SingleDop/wiki","timothy.j.lang@nasa.gov"
215,99609a9c3d881d128e35091afa58e3c0,0,"EADIN Communication Protocol","The product of this work is a communication protocol which allows microcontrollers to talk with eachother in a structured fashion. As such, it is embodied in C++ code that runs on the microcontroller. The software is not mission certified and is being used for demonstration and testing purposes only. The current goal of this project is to realease the software open source to enable community participation. We have external companies requesting that we release this software.","https://github.com/nasa/EADINLite","https://github.com/nasa/EADINLite/wiki","grc-sra-team@mail.nasa.gov"
216,1e874f3e4a6b3e9684cfae3740291ee1,0,"Open Scheduling and Planning Interface for Exploration (OpenSPIFe)","The Open Scheduling and Planning Interface for Exploration (OpenSPIFe) is an integrated planning and scheduling toolkit based on hundreds of hours of expert observation, use, and refinement of state-of-the-art planning and scheduling technology for several applications within NASA. It was designed from the ground up with the needs of the operational user in mind, and it presents unique solutions to a number of problems common in other commercial and homegrown systems.

","https://github.com/nasa/OpenSPIFe","https://github.com/nasa/OpenSPIFe","arc-sra-team@mail.nasa.gov"
217,0584e8b3314014f29d6f758ddd805fca,0,"Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS)","T-MATS is open source software code. The Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS) is a Simulink toolbox intended for use in the modeling and simulation of thermodynamic systems and their controls. T-MATS contains generic thermodynamic and controls components that may be combined with a variable input iterative solver and optimization algorithm to create complex systems to meet the needs of a developer. Developement of this tool was completed on behalf of the NASA Aviation Safety Program's Vehicle Systems Safety Technologies (VSST) project located at the Glenn Research Center in Cleveland, OH. ","https://github.com/nasa/T-MATS","https://github.com/nasa/T-MATS","grc-sra-team@mail.nasa.gov"
218,27d65a3bd4886efca3425d1ae140d552,0,"CertWare Safety Case Workbench Software","This technology contributes several core modules to support safety case models and offers a service-based application programming interface that enables new model-processing capabilities to be plugged into the workbench.","https://github.com/nasa/CertWare","https://github.com/nasa/CertWare","larc-sra@mail.nasa.gov"
219,aece7d1e5cb7dae1e0632c5d7c6a404a,0,"NASA-3D-Resources","Here you'll find a growing collection of 3D models, textures, and images from inside NASA.","https://github.com/nasa/NASA-3D-Resources","https://github.com/nasa/NASA-3D-Resources","arc-webservices@mail.nasa.gov"
220,941c693613ff8ae8db5d17b908b72b31,0,"EEPROM File System","The EEPROM File System (EEFS) is a simple, reliable file system for embedded systems. The primary purpose of the EEFS is to provide a file system abstraction for EEPROM or PROM memories that is simple, efficient, and can be proven to be reliable.  The EEFS can be used on embedded systems where a file system is needed to access data from EEPROM, PROM, or RAM memory, but otherwise might not have the resources to deploy a full file system such as the MSDOS file system. The EEPROM file system can also be used in systems where the ability to dump, patch, and diagnose files is required. ","https://github.com/nasa/eefs","https://github.com/nasa/eefs/","gsfc-softwarerequest@mail.nasa.gov"
221,5291334bec13ac16cb38ebc733bde628,0,"Operating System Abstraction Layer (OSAL)","The OSAL library isolates embedded application software from a Real-Time Operating System (RTOS). The technology provides a well-defined, generic interface to RTOS services; a generic interface to hardware services; and an implementation for several current RTO systems. By using the library, an embedded application can remain portable among multiple operating systems on multiple platforms. Please visit the following URL for additional information: http://opensource.gsfc.nasa.gov/projects/osal/","https://github.com/nasa/osal","https://github.com/nasa/osal","gsfc-softwarerequest@mail.nasa.gov"
222,93399aa4b9f372cf19d214f612bc2c06,0,"39A","39A is the software used to power the 2013 International Space Apps Challenge, a global hackathon focusing on space technology and issues.","https://github.com/nasa/39A","https://github.com/nasa/39A","jason.duley@nasa.gov"
223,f80bb8c7c0f2f53bf3383782790b530b,0,"Vehicle Sketch Pad (VSP)","The Vehicle Sketch Pad (VSP) is an aircraft geometry tool for rapid evaluation of advanced design concepts. Fast and accurate geometry modeling allows the designer to use more complex analysis methods earlier in the design process and reduces reliance on empiricism in conceptual design. VSP includes tools to model and export the internal structural layout.","https://github.com/nasa/OpenVSP","https://github.com/nasa/OpenVSP","larc-sra@mail.nasa.gov"
224,febe98dee558099e9f446424b2dfca0b,0,"Open MDAO Version 0.1: The Next Generation Multidisciplinary Design Analysis and Optimization (MDAO) Open Source Framework","OpenMDAO version 0.1 is the initial version of the next generation Multidisciplinary Design Analysis and Optimization (MDAO) open source framework.   OpenMDAO is the open source framework developed by NASA that will be accessible via an open source website to reach the entire broad based MDAO community to facilitate advancing the science of MDAO.  MDAO covers a vast set of capabilities, including a flexible framework and state of the art discipline codes.  This innovation relates specifically to the framework.  OpenMDAO provides the core software infrastructure to integrate multidisciplinary variable fidelity tools and enable design, analysis, and optimization of complex systems.  Currently, the OpenMDAO version 0.1 functionalities include component linking, data passing, driver interface, and lazy evaluation.  This initial basic capability of the framework is sufficient for users to run and optimize their analysis after they integrate their specific component codes.  As OpenMDAO evolves, the following capabilities will be included in the framework:  interprocess communications, error handling, user interfaces, geometry application program interfaces (APIs), plug-in interfaces, utilities to wrap tools, versioning, and parallel processing support.  To be clear, the framework will enable the integration of, but will not include: optimizers, solvers, visualization tools, custom data types, script components, and discipline codes.  AEROSPACE:  To meet the present and future economic and environmental challenges facing air transportation, aviation design must expand its focus from today's conventional "wing-body-tail" aircraft to more advanced vehicles.   The ability to design revolutionary aircraft to improve mobility and air transport efficiency is of paramount importance to the national economy, along with reducing our environmental impact and supporting national defense.   Technologies such as the one disclosed here incorporate progressively more sophisticated computational models and methods, enabling future aircraft designs today.","https://github.com/nasa/OpenMDAO-Framework","https://github.com/nasa/OpenMDAO-Framework","grc-sra-team@mail.nasa.gov"
225,bd8d0bbe134aa202f6b76c0ffca7ceb3,0,"Java World Wind","NASA World Wind is an intuitive software application supporting the interactive exploration of a variety of data presented within a geospatial context. The technology offers a 3D graphics user experience with seamless, integrated access to a variety of online data sources via open-standards protocols. ","https://github.com/nasa/World-Wind-Java","https://github.com/nasa/World-Wind-Java","arc-sra-team@mail.nasa.gov"
226,4dfb5e4f8a82c71d38629cdd2abb6c09,0,"NASA Vision Workbench (VW), Version 3","Vision Workbench (VW) is a modular, extensible computer vision framework that supports a range of tasks, including automated science and engineering analysis, large satellite image processing, and 2D/3D environment reconstruction. The framework provides a rapid C++ development environment as well as a flexible, multi-platform system to deploy computer vision applications. The module interface allows new capabilities to be rapidly integrated, and the dataflow architecture allows image-processing pipelines to be quickly developed and reconfigured. ","https://github.com/nasa/visionworkbench","https://github.com/nasa/visionworkbench","arc-sra-team@mail.nasa.gov"
227,99d0c2b1b7e9862fbe2c3a7c8fd782cc,0,"Apache OODT","Apache OODT is NASA's first project to be stewarded at the open source Apache Software Foundation. OODT is middleware for information integration and for science data processing and retrieval. It provides components including file management, workflow management, resource management, and automated remote data acquisition, file crawling and ingestion, and science algorithm wrapping and integration.","http://oodt.apache.org/","http://oodt.apache.org","chris.a.mattmann@jpl.nasa.gov"
228,af5fd9079d2ea6ba201f1d16affc47cf,0,"Synchronization, Archival, Validation, and IP Exchange (Save)","Save is a high-availability framework that manages IP addresses shared between multiple servers. It also monitors the health of those servers to determine which one should be actively servicing requests at any given time. Synchronization mechanisms allow configuration files to be kept consistent between systems and also allow commands to be executed across all servers of a particular type. Archival mechanisms provide automatic version control of configuration files to aid in recovery in case of errant configuration.","https://sourceforge.net/projects/save-ha","http://save-ha.sourceforge.net","arc-sra-team@mail.nasa.gov"
229,f7fded7acfc5cb7c8e5ca7a0a788acab,0,"Java-Based Software Tool for Dynamic Aerospace Vehicle Exchange Markup Files","An update to software originally named DAVEtools 0.5, this software-based technology is used for manipulating standard Dynamic Aerospace Vehicle Exchange Markup Language (DAVE-ML) models. The improved technology embeds the necessary initialization data into a data structure to keep the MATLAB workspace uncluttered and creates Simulink models from a generated MATLAB script.","https://github.com/nasa/DAVEtools","https://github.com/nasa/DAVEtools/wiki","larc-sra@mail.nasa.gov"
230,e062f278cab83478f37f23afc63fae85,0,"Trick 13 Simulation Environment","The Trick Simulation environment is a generic simulation toolkit used for constructing and running simulations.  The Trick 13 Interface Code Generator (ICG), a utility that provides math model class and structure layout data, has been rewritten and is based off of the open source clang/llvm project.  The Trick numerical integrators have been replaced with a common set of integrators.  Several core components are enhanced from previous Trick versions.  Trick 13 is now Open Source software and can be downloaded at http://code.nasa.gov/#/","https://github.com/nasa/Trick","https://github.com/nasa/Trick/wiki","jsc-ttco-software-request@mail.nasa.gov"
231,0b3cbed9bee075c9792712664afd0b9a,0,"TrickFMI","This software supports FMI based model exchange with Trick based simulations. The Functional Mockup Interface (FMI) standard was developed in partnership with governmental, academic and commercial entities in the European Union. This standard is used to support the exchange of component models for complex system simulations throughout Europe and the United States. Trick simulations are used all across NASA for simulations that support human spaceflight activities. However, until now, there were no means to use FMI based models in a Trick based simulation or a method for providing Trick based models that were FMI compliant. This software provides implementation software to do both. There are two principal components to the software: A C based software implementation for wrapping Trick based C models that provide an FMI compliant interface; A collection of C++ classes that can be used in a Trick based simulation to use an FMI compliant model (FMU).","https://github.com/nasa/TrickFMI","https://github.com/nasa/TrickFMI/wiki","edwin.z.crues@nasa.gov"
232,9f49d3ac6ec6abbe57793248195e2b97,0,"Marshall MRMS Mosaic Python Toolkit (MMM-Py)","MMM-Py reads, analyzes, and displays three-dimensional national mosaicked reflectivity data produced by NOAA's National Severe Storms Laboratory (NSSL). MMM-Py can read MRMS mosaics from either their unique binary format or their converted NetCDF format; it can also read and properly interpret the current mosaic design (4 regional tiles) as well as mosaics produced prior to late July 2013 (8 tiles). The technology can easily stitch multiple tiles together to provide a larger regional or national picture of precipitating weather systems. Composites, horizontal/vertical cross-sections, and combinations thereof are easily displayed using as little as one line of code.","https://github.com/nasa/MMM-Py","https://github.com/nasa/MMM-Py","msfc-sra-team@mail.nasa.gov"
233,9e7758d8bd8dc8c6f813e6f699c79427,0,"Python Advanced Microwave Precipitation Radiometer Data Toolkit (PyAMPR)","This toolkit will read geolocated brightness temperature data (in ASCII format) from any flight of the AMPR airborne instrument.  A python script will pull out timing, brightness temperatures, and other information  from each channel/geolocation and store them as attributes using the appropriate type of numpy array. The approach consists of ingesting the entire file as a text string and then parsing and converting as necessary. The file is read and the data are populated when the class is instantiated with the full path and name of an AMPR file. Numerous visualization methods are provided, including track plots, strip charts, and Google Earth KMZs. In addition, polarization deconvolution is available.","https://github.com/nasa/PyAMPR","https://github.com/nasa/PyAMPR","msfc-sra-team@mail.nasa.gov"
234,df3f6439c9ec47c0d30c54c9fb3dcd75,0,"Python Turbulence Detection Algorithm (PyTDA)","PyTDA, an MSFC-based implementation of the National Center for Atmospheric Research (NCAR) Turbulence Detection Algorithm (NTDA), can be used for convective-scale analysis, situational awareness, and forensic meteorology. The software provides Python functions that will estimate turbulence from Doppler radar data.   It is written in the Python programming language.","https://github.com/nasa/PyTDA","https://github.com/nasa/PyTDA","msfc-sra-team@mail.nasa.gov"
235,c902e27b38d1c29f1475b26f5cce8325,0,"Computational Fluid Dynamics (CFD) Utility Software Library","A collection of utility programs and reusable subroutine libraries supports computational fluid dynamics, particularly on multiblock structured grids. The technology is applicable to all flight regimes-subsonic, transonic, supersonic, and hypersonic. ","https://sourceforge.net/projects/cfdutilities/files/latest/download","https://sourceforge.net/projects/cfdutilities/","arc-sra-team@mail.nasa.gov"
236,37c548cf67769a79e0229172dae07f1a,0,"Crisis Mapping Toolkit (CMT) v1","The Crisis Mapping Toolkit (CMT) is a collection of tools for processing geospatial data (images, satellite data, etc.) into cartographic products that improve understanding of large-scale crises, such as natural disasters. The cartographic products produced by CMT include flood inundation maps, maps of damaged or destroyed structures, forest fire maps, population density estimates, etc. CMT is designed to rapidly process large-scale data using Google Earth Engine and other geospatial data systems. ","https://github.com/nasa/CrisisMappingToolkit","https://github.com/nasa/CrisisMappingToolkit","arc-sra-team@mail.nasa.gov"
237,1961be0fa7d39384633a52539b5b40b1,0,"Multiple Kernel Anomaly Detection (MKAD) Algorithm","In offline mode, MKAD performs automated anomaly detection on large heterogeneous data sets that contain both discrete symbols and continuous data streams.","https://ti.arc.nasa.gov/opensource/projects/mkad","https://ti.arc.nasa.gov/opensource/projects/mkad/","arc-sra-team@mail.nasa.gov"
238,8d17319404f7719dc23867e79b0657b1,0,"Interoperable Remote Component (IRC)","IRC provides robust interactive and distributed control/monitoring of remote instruments. The IRC architecture combines the processing capabilities of Java with the power of XML to express hierarchical data in a human-readable, platform-independent format. For additional information, please visit: http://opensource.gsfc.nasa.gov/projects/IRC/index.php","https://opensource.gsfc.nasa.gov/projects/IRC/index.php#software","https://opensource.gsfc.nasa.gov/projects/IRC/index.php","gsfc-softwarerequest@mail.nasa.gov"
239,e8b353cc5278497059bb224727ff0f4b,0,"Java Astrodynamics Toolkit (JAT)","The Java Astrodynamics Toolkit (JAT) is a collection of Java components that aid flight dynamics engineers in performing space mission design; trajectory optimization; and spacecraft navigation, attitude-determination, and control systems analysis. Current capabilities include orbit propagation, orbit determination, maneuver planning, spacecraft attitude simulation, and 3D orbit and attitude visualization.","https://opensource.gsfc.nasa.gov/projects/JAT/index.php#software","https://opensource.gsfc.nasa.gov/projects/JAT/index.php","gsfc-softwarerequest@mail.nasa.gov"
240,6d1155dcfe71f81248b1004b18cb181e,0,"Metadata Check","Metadata Check is a command-line tool to check Earth Observing System (EOS) metadata with a metadata descriptor. For more information, please visit: http://opensource.gsfc.nasa.gov/projects/metacheck/index.php","https://opensource.gsfc.nasa.gov/projects/metacheck/index.php#software","https://opensource.gsfc.nasa.gov/projects/metacheck/index.php","gsfc-softwarerequest@mail.nasa.gov"
241,5acb3e77d78816615b67c96a6287888b,0,"MYSTRAN","MYSTRAN is a Finite Element Analysis (FEA) processor.   MYSTRAN takes NASTRAN data decks as input and processes them to generate results files based on the inputs.   NASTRAN was originally developed at NASA GSFC in the 1960's.   The input files describe the mechanical nature of some piece of hardware and the loads or driving inputs that cause some reaction.   With this input MYSTRAN computes the responses to the driving inputs.  The theory and research for FEA analysis has been developed over decades.","https://opensource.gsfc.nasa.gov/projects/mystran/index.php#software","https://opensource.gsfc.nasa.gov/projects/mystran/index.php","gsfc-softwarerequest@mail.nasa.gov"
242,fad3e84800c3b28169ce7787b7248c23,0,"Requirements Tracing On Target (RETRO)","RETRO offers methods and techniques for information retrieval (IR), including vector retrieval and probabilistic retrieval. The technology can be downloaded at: http://opensource.gsfc.nasa.gov/projects/RETRO/index.php","https://opensource.gsfc.nasa.gov/projects/RETRO/index.php#software","https://opensource.gsfc.nasa.gov/projects/RETRO/index.php","gsfc-softwarerequest@mail.nasa.gov"
243,fd737eae3866166ac97d463db8b216b4,0,"Worldview satellite imagery browsing and downloading tool","Worldview is a software tool designed for interactively browsing and downloading imagery from NASA's Earth observing satellites.  Building upon a set of open source mapping and user interface libraries, it provides an environment to visually discover interesting phenomena as observed by NASA satellites, then download the data for further analysis.  It was originally designed to address the needs of the near real time applications community to provide relevant information for time-critical scenarios such as wildfire and flood management.  As such, satellite imagery is available to be viewed in Worldview within four hours of observation, the imagery can be viewed in its highest, or native, resolution, and the imagery can be panned and zoomed rapidly through space and time to find the most relevant/cloud-free/etc information available.","https://github.com/nasa-gibs/worldview","https://opensource.gsfc.nasa.gov/projects/worldview/index.php","gsfc-softwarerequest@mail.nasa.gov"
244,51d1970425c0e02dafab6973c4692b77,0,"Architecture Adaptive Computing Environment (ACE)","The Architecture Adaptive Computing Environment (ACE) is a parallel computing language, compiler, and runtime library. The purpose of ACE is to allow a programmer to more easily write parallel programs for a wide variety of parallel computer architectures.","https://opensource.gsfc.nasa.gov/projects/ace/#software","https://opensource.gsfc.nasa.gov/projects/ace/aCe_Distro_Notes.txt","gsfc-softwarerequest@mail.nasa.gov"
245,fa6021cf8a827f4d323d9f1471edc201,0,"Core Flight Executive (cFE)","The Core Flight Executive (cFE) provides software bus, time, event, executive, table, and file services, and it defines the application programming interface (API) for each set function. Applications subscribe to cFE services at runtime, making system modifications easy. Facilitating rapid prototyping, new applications can be compiled, linked, loaded, and started without requiring the entire system to be rebuilt.","https://sourceforge.net/projects/coreflightexec","https://opensource.gsfc.nasa.gov/projects/cfe/index.php","gsfc-softwarerequest@mail.nasa.gov"
246,4b3c2b287409b554a68d669c9edad32b,0,"Evolutionary Mission Trajectory Generator (EMTG)","EMTG is a global trajectory optimization tool intended for interplanetary mission design. The technology automatically searches for the optimal sequence of planetary flybys and propulsive maneuvers for maximizing payload delivery at a destination. Designed for minimal user oversight, EMTG requires only start location, destination, allowable launch-date range, allowable flight time, and minimal spacecraft hardware information.","https://opensource.gsfc.nasa.gov/projects/emtg/index.php#software","https://opensource.gsfc.nasa.gov/projects/emtg/index.php","gsfc-softwarerequest@mail.nasa.gov"
247,2322a8ac1edf544ac1d8588d4f8fea6d,0,"HDF-EOS2 and HDF-EOS5 Compatibility Library","This software library provides uniform access to HDF-EOS2 and HDF-EOS5 files through one set of application program interface (API) calls. Without the library, programs would have to be written twice to cover both HDF-EOS2 and HDF-EOS5 files. http://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php","https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php#software","https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php","gsfc-softwarerequest@mail.nasa.gov"
248,20c823df3a1af2d90f347e9751c24dcc,0,"RT Retrieval Framework","This software retrieves a set of atmospheric/surface/instrument parameters from a simultaneous fit to spectra from multiple absorption bands. The software uses an iterative, non-linear retrieval technique (optimal estimation). After the retrieval process has converged, the software performs an error analysis. The products of the software include all quantities needed to understand the information content of the measurement, its uncertainty, and its dependence on interfering atmospheric properties. Spectra from ground-based or space-based measurement with arbitrary observation geometry can be analyzed. The retrieved parameters can be chosen from a large set of atmospheric (e.g., volume mixing ratio of gases or aerosol optical depth), surface (e.g., Lambertian reflection), and instrument (e.g., spectral shift or instrument line shape parameters) parameters. The software uses an accurate, state-of-the-art, multiple-scattering radiative transfer code combined with an efficient polarization approximation to simulate measured spectra. The software enables fast and highly accurate simulations of broad spectral ranges by an optional parallelization of the frequency processing in the radiative transfer model. The framework was written with flexibility in mind. New algorithms and instruments are added by creating additional classes that implement the defined interfaces. Bindings are available for both Python and Lua.","https://github.com/nasa/RtRetrievalFramework","https://github.com/nasa/RtRetrievalFramework","james.mcduffie@jpl.nasa.gov"
249,d611a05ab92b32832492701fa81d9d76,0,"NASA LaTeX Docs","This is a flexible LaTeX document template designed to separate content from styling and remove all of the grunt work associated with creating professional documents. Can be used for technical reports as well as public documents such as research papers and conference papers.","https://github.com/nasa/nasa-latex-docs","https://github.com/nasa/nasa-latex-docs/wiki","wahab.alshahin@nasa.gov"
250,97bb9f02971fa18419c530ef81115bd8,0,"Inventory System for Lab Equipment (ISLE)","This web application allows inventories of assets to be managed. Assets along with their specifications are added to the system and then used by users via a check-in/check-out function. The inventory can be browsed by category or using search. Users are given various roles within the system to allow them to perform certain functions such as view-only, check-in/check-out, modify, and full-control. Inventory managers can add and track detailed information on all inventory assets including manufacturer, storage location, custom attributes, and relationships with other assets. Assets can be found by browsing by category, search, location, or current user. Assets are checked out to specified locations by users.","https://github.com/nasa/isle","https://github.com/nasa/isle","bruffridge@nasa.gov"
251,8df783ea6d3112c7837e59caa7074f4e,0,"Input Device Framework (IDF)","Framework for mapping physical input devices (joysticks, gaming controllers, custom control panels, etc) to application-specific virtual controller interfaces. Pattern for writing device-independent code.","https://github.com/nasa/idf","https://github.com/nasa/idf","jsc-ttco-software-request@mail.nasa.gov"
252,ae5858ccafd79805b43c6df0c7ddf01b,0,"Composite Damage (CompDam) Progressive Damage Analysis Software","The Composite Damage (CompDam) Progressive Damage Analysis software is developed for the prediction of damage onset, damage progression and structural collapse of structures manufactured of fiber-reinforced plastic laminates. The emphasis has been on development of an analysis capability for application at the structural level. Hence, modeling of damage progression is undertaken at the meso-scale, where each ply of a laminate is represented as a homogenous orthotropic continuum. All of the composite damage mechanisms (matrix cracking, fiber breaking and kinking, and delamination) and their interactions are represented. The CompDam software is implemented as user written subroutines for use with the Abaqus commercial finite element code.  Input for CompDam includes ply-level material properties, and interface properties obtained from standard material characterization tests.  The output from CompDam includes damage variables associated with each damage mode. These damage variables describe the evolution of damage and are used to generate updated structural constitutive matrices and load redistribution as damage evolves. ","https://github.com/nasa/CompDam_DGD","https://github.com/nasa/CompDam_DGD","larc-sra@mail.nasa.gov"
253,0b8c7d29cc8b8be3c8b6636ea6768e3b,0,"Kalman Filter Code Augmentation","The Kalman Filter Code Augmentation release is a modification of Kalman Filter Toolbox, written by Kevin Murphy, 1998. It extends the existing open source software's capabilities and functionality by bookkeeping more detailed information on internal data structures, as well as ensuring the consistency of mathematical conventions used by subroutines that are part of a third-party tool called ASOS as part of the modification. Additional convergence criteria have also been included, as well as the possibility for establishing additional constraints and modelling paradigms.","https://ti.arc.nasa.gov/opensource/projects/kalman","https://ti.arc.nasa.gov/opensource/projects/kalman","rodney.martin@nasa.gov"
254,53255b97f05cc9c180d8cad3d2280996,0,"ROC Curve Code Augmentation","ROC (Receiver Operating Characteristic) curve Code Augmentation is a modification of ROC Curve code originally authored by G.C. Cawley that provides additional functionality. The inclusion of more detailed bookkeeping of new and existing internal data structures that provide more visibility into various performance measures is one of the new features.","https://ti.arc.nasa.gov/opensource/projects/roc","https://ti.arc.nasa.gov/opensource/projects/roc","rodney.martin@nasa.gov"
255,1d70a810b6f4e6f33d59ba3a02857e5a,0,"Podaacpy","Podaacpy is a python utility library for interacting with NASA JPL’s PO.DAAC.","https://github.com/nasa/podaacpy","http://podaacpy.readthedocs.io/en/latest/","lewis.j.mcgibbney@nasa.gov"
256,894247292c6ea739049d00864b034404,0,"NASA WorldWind Research: SpaceBirds","SpaceBirds, a new innovative application intended as both a visual and educational application as well as a powerful tracking tool, can be used by professionals, students, and enthusiasts alike. The app is developed using NASA Web World Wind, and consists of an easy to use interface that allows the user to display all known tracked orbital objects and ground stations, and display their relative information, such as type, orbital period, low, medium, and high earth orbit, country of origin, and use, all in a 3D environment.","https://github.com/NASAWorldWindResearch/SpaceBirds","https://github.com/NASAWorldWindResearch/SpaceBirds/archive/master.zip","patrick.hogan@nasa.gov"
257,be1ef412ed587fa15aad3dd4f539ba35,0,"NASA WorldWind Research: Quake-Hunter","3D visualization of earthquakes using their actual depth below the surface.","https://github.com/NASAWorldWindResearch/Quake-Hunter","https://github.com/NASAWorldWindResearch/Quake-Hunter/archive/master.zip","patrick.hogan@nasa.gov"
258,3000d8b291938b566b10d0377101ffca,0,"NASA WorldWind Research: WorldWeather","The largest three-dimensional web-based interactive browser of satellite, weather, climate, and other time-aware geospatial data on the web, built upon NASA's revolutionary WorldWind technology. ","https://github.com/NASAWorldWindResearch/WorldWeather","https://github.com/NASAWorldWindResearch/WorldWeather/archive/master.zip","patrick.hogan@nasa.gov"
259,e899a00622d695c372d144da1220ecff,0,"NASA WorldWind Research: WorldWindExplorer","A geo-browser app framework based on NASA Web World Wind","https://github.com/NASAWorldWindResearch/WorldWindExplorer","https://github.com/NASAWorldWindResearch/WorldWindExplorer/archive/master.zip","patrick.hogan@nasa.gov"
260,3f9f38cafba55ee1933945caa295596b,0,"NASA WorldWind Research: EarthquakeApp","Magnetic Field Data Anomaly Detection Analysis Sandbox. Earthquake Signal Precursors, ESP, detection and forecast. This project aims to apply Dr. Friedemann Freund’s theory of earthquake precursor science. Dr. Freund's theory states that as stresses in the Earth’s crust increase during the time leading up to a major earthquake, atomic-scale defects in the mineral grains and along the boundaries between mineral grains become activated. The ultimate goal of this project is to observe live anomalous EM field fluctuations and accurately forecast an earthquake within a specified geographical range.","https://github.com/NASAWorldWindResearch/EarthquakeApp","https://github.com/NASAWorldWindResearch/EarthquakeApp/archive/master.zip","patrick.hogan@nasa.gov"
261,9308a31173c110de50b77266fbce70f8,0,"PyCycle - An Cycle Modeling Tool For Design With Gradient Based Optimization","PyCycle is a novel software library written in the Python Programming language. It allows a user to perform standard engine cycle analysis, while also  providing analytic derivative (sensitivity) calculations to the end user. This allows Pycycle to be very efficiently used by (or incorporated within) external software programs performing broader simulation, analysis, and optimization.","https://github.com/JustinSGray/pyCycle","https://github.com/JustinSGray/pyCycle/archive/master.zip","grc-sra-team@mail.nasa.gov"
262,52ea6ec911aee4d556566d376c04d078,0,"GSAP: General Software Architecture for Prognostics","The Generic Software Architecture for Prognostics (GSAP) is a framework for applying prognostics. It makes applying prognostics easier by implementing many of the common elements across prognostic applications. The standard interface enables reuse of prognostic algorithms and models across using the GSAP framework.","https://github.com/nasa/GSAP","https://github.com/nasa/GSAP/archive/master.zip","christopher.a.teubert@nasa.gov"
263,e77eb09cb0a80a30a4f82b42c616615e,0,"Sitepod","Sitepod; A Sitemap Generator written in PHP. Sitepod is build using the Fat-Free Framework, a powerful yet easy-to-use PHP micro-framework designed to build dynamic and robust web applications.","https://github.com/nasa/sitepod/","https://github.com/nasa/sitepod/","lewis.j.mcgibbney@nasa.gov"
264,27e9f3feebfcfb790d8cb0ac923daf65,0,"pyCMR","Python client library that abstracts CMR API calls for search, ingest, update, and deletion of collections and granules.","https://github.com/nasa/pyCMR","https://github.com/nasa/cmr/wiki","lewis.j.mcgibbney@nasa.gov"
265,eba61082196d39e7b97e7d95491028f5,0,"Metadata Management Tool (MMT)","The Metadata Management Tool is a web application to assist users in managing metadata on various Nasa.gov applications.","https://github.com/nasa/mmt","https://github.com/nasa/mmt","catalino.cuadrado@nasa.gov"
266,0ddfd530cf28f1e478e6ddbc854bc683,0,"CFS Command and Data Dictionary Tool (CCDDT)","The Core Flight System (CFS) Command and Data Dictionary (CDD) utility, or CCDD, is a software tool for managing the data structures for CFS and CFS applications, including telemetry data structures, command information, and other data pertinent to a CFS project.","https://github.com/nasa/CCDD","https://github.com/nasa/CCDD","r.k.mccluney@nasa.gov"
267,99304b9352698c0e82126163152080f6,0,"MAV","Modeling, Analysis, and Visualization (MAV) of ATM concepts","https://github.com/nasa/MAV","https://github.com/nasa/MAV","jason.duley@nasa.gov"
268,2a2df86e1f004ae15e1877baeca48852,0,"Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI)","Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots. It also creates a true color image.","https://github.com/NASA-DEVELOP/CBCHI","https://github.com/NASA-DEVELOP/CBCHI","jeffry.w.ely@nasa.gov"
269,db83900b1d0213b07b858e5118523d41,0,"Visualization of CALIPSO (VOCAL)","Visualization of CALIPSO (VOCAL). A CALIPSO Cross Cutting tool for visualizing data.","https://github.com/NASA-DEVELOP/VOCAL","https://github.com/NASA-DEVELOP/VOCAL","jeffry.w.ely@nasa.gov"
270,e57b7cc95fcafaf4a50b0380d54f6141,0,"Move Away Superfluous Clouds (MASC)","This code removes clouds, cloud shadow, water, and snow pixels from Landsat scenes using the cloud mask layer that is provided with Landsat data.","https://github.com/NASA-DEVELOP/MASC","https://github.com/NASA-DEVELOP/MASC","jeffry.w.ely@nasa.gov"
271,b0a5e8282ee644ba27575e846d8f8129,0,"GC-ReDI","This Google Earth Engine software quantifies the decreasing water surface area in Lake Mead and the lower Grand Canyon and assesses the resulting changes in land cover –specifically, riparian vegetation and riparian sediment. The software provides images, statistics, and graphs to understand the drought-induced changes.","https://github.com/NASA-DEVELOP/GC-ReDI","https://github.com/NASA-DEVELOP/GC-ReDI","jeffry.w.ely@nasa.gov"
272,c602870b9845e0a39c2db047f49f1546,0,"Multiple-Doppler Radar Analysis Toolkit (MultiDop)","MultiDop is a Python-based interface between the C-based DDA code developed at University of Oklahoma and the Python Atmospheric Radiation Measurement Radar Toolkit (Py-ART) software developed at Argonne National Lab. Use this software to perform 3D wind analyses using 2-3 independent Doppler radars.","https://github.com/nasa/MultiDop","https://github.com/nasa/MultiDop/wiki","timothy.j.lang@nasa.gov"
273,9780fdab6209d1fb33155e1e8cdc0fb3,0,"Kepler-FLTI","Illustrate using the Flux-Level Transit Injection (FLTI) Tests of the Kepler pipeline for Data Release 25.  This code generates the figures in the documentation of FLTI, Burke, C.J. and Catanzarite, J. 2017, Planet Detection Metrics: Per-Target Flux-Level Transit Injection Tests of TPS for Data Release 25, KSCI-19109-001","https://github.com/nasa/Kepler-FLTI","https://github.com/nasa/Kepler-FLTI","christopher.j.burke@nasa.gov"
274,a4559141bb94e723dae7aa7d7d4fb68d,0,"KeplerPORTs","Illustrate making use of numerous Kepler Planet Occurrence Rate Data Products for Data Release 25 and SOC 9.3 Kepler Pipeline version.  This code generates a detection contour according to the documentation Burke, C.J. and Catanzarite, J. 2017, Planet Detection Metrics: Per-Target Detection Contours for Data Release 25, KSCI-19111-001","https://github.com/nasa/KeplerPORTs","https://github.com/nasa/KeplerPORTs","christopher.j.burke@nasa.gov"
275,e61e5f657e4ee2bcb8b34407d76f5896,0,"Kepler DR25 Robovetter","The Kepler DR25 Robovetter code. The Robovetter dispositions Kepler Threshold Crossing Events (TCEs) into Planet Candidates (PCs) and False Positives (FPs) using sophisticated vetting metrics and decision-tree logic.","https://github.com/nasa/kepler-robovetter","https://github.com/nasa/kepler-robovetter","jeffrey.l.coughlin@nasa.gov"
276,d29bfd4bc3065979acb7b355db276d87,0,"WebWorldWind","NASA World Wind in Java for HTML5","https://github.com/NASAWorldWind/WebWorldWind","https://github.com/NASAWorldWind/WebWorldWind","patrick.hogan@nasa.gov"
277,481c7ea81b8d2d510de31c0823c79755,0,"NASAWorldWind.github.io","NASA World Wind organization website","https://github.com/NASAWorldWind/NASAWorldWind.github.io","https://github.com/NASAWorldWind/NASAWorldWind.github.io","patrick.hogan@nasa.gov"
278,01ab2ab5babe2134ac46452e2a64313c,0,"WorldWindAndroid","NASA World Wind in Java for Android","https://github.com/NASAWorldWind/WorldWindAndroid","https://github.com/NASAWorldWind/WorldWindAndroid","patrick.hogan@nasa.gov"
279,781a7c1060af6319caeb3c546ffe47d5,0,"WorldWindServerKit","The NASA WorldWind Server Kit (WWSK) is an open source Java project that assembles GeoServer for easy distribution and implementation.","https://github.com/NASAWorldWind/WorldWindServerKit","https://github.com/NASAWorldWind/WorldWindServerKit","patrick.hogan@nasa.gov"
280,ccb2ec482d79cc8b7484083040a818f3,0,"WorldWindJava","The NASA WorldWind Java SDK (WWJ) is for building cross-platform 3D geospatial desktop applications in Java.","https://github.com/NASAWorldWind/WorldWindJava","https://github.com/NASAWorldWind/WorldWindJava","patrick.hogan@nasa.gov"
281,3946cfce8cb45fb9544fe1779b50bc6c,0,"GATER","Geographic Applications for Transitioning Everglades Regions (GATER). Meant for running within the Google Earth Engine API, this JavaScript code provides an algorithm for cloud removal from Landsat scenes, and runs a classification scheme which classifies mangrove extent within Everglades National Park.","https://github.com/NASA-DEVELOP/GATER","https://github.com/NASA-DEVELOP/GATER","jeffry.w.ely@nasa.gov"
282,5691fe8e59b4061323cbaa1eee88e454,0,"SWIM","This tool allows users to identify surface water from the most current imagery available, or to monitor temporal changes of surface water in their management area.","https://github.com/NASA-DEVELOP/SWIM","https://software.nasa.gov/software/LAR-19013-1","jeffry.w.ely@nasa.gov"
283,c49ca210d013fb46994bf4f2fbf42a45,0,"ESVIA","Elkhorn Slough Vegetation Imagery Assessment (ESVIA). This suite of Google Earth Engine Javascript code analyzes vegetation change in a historical time-series using Landsat, as well as current-day vegetation productivity using Sentinel 2A imagery. Included in the scripts are operations such as image acquisition, image processing, and application.","https://github.com/NASA-DEVELOP/ESVIA","https://software.nasa.gov/software/LAR-19012-1","jeffry.w.ely@nasa.gov"
284,5c8cbd411f307ca08035b1c028fc7d87,0,"PiCo","Pixelwise Correlation-Based Landscape Classification (PiCo). PiCo, an R script, automates and regionalizes the Climate Landscape Response (CLaRe) metrics developed by Wallace et al 2016. This script performs a pixel-wise regression analysis to produce rasters whose correlation values can be evaluated to target buffelgrass.","https://github.com/NASA-DEVELOP/PiCo","https://software.nasa.gov/software/LAR-19015-1","jeffry.w.ely@nasa.gov"
285,d441b407a5d277210349d08af77a9477,0,"POPP","Palm Oil Plantation Predictor (POPP). This Python software automates the process of downloading, atmospherically correcting, and processing raster data in order to identify potential palm oil plantations.","https://github.com/NASA-DEVELOP/POPP","https://software.nasa.gov/software/LAR-18862-1","jeffry.w.ely@nasa.gov"
286,29ac2a619863d0dec1dad72d804589ff,0,"DON-Federate-HLA2MPC","DON-Federate-HLA2MPC repository","https://github.com/nasa/DON-Federate-HLA2MPC","https://software.nasa.gov/software/KSC-14109","mike.conroy@nasa.gov"
287,fc20cdf13b5f7ef134eba82f314f7611,0,"Kodiak's Boolean Checker Software Module","Kodiak is an implementation of a software library for verifying expressions involving nonlinear real arithmetic. The current innovation discloses the implementation of a generic branch and bound algorithm for rigorous computations and prototype implementation of algorithms for solving global optimization problems.","https://github.com/nasa/kodiak","https://shemesh.larc.nasa.gov/fm/Kodiak/0","larc-sra@mail.nasa.gov"
288,e8e401e12a8ad7428cd1633c157bb044,0,"Virtual ADAPT","VirtualADAPT is a high-fidelity, Matlab Simulink-based simulation testbed that emulates the Advanced Diagnostic and Prognostic Testbed (ADAPT) electrical power system hardware for running offline health management experiments. This simulation testbed models all components of the ADAPT hardware within the power storage and power distribution subsystems. The physical components of the testbed, i.e., the batteries, relays, and the loads, are replaced by simulation modules that generate the same dynamic behaviors as the hardware test bed.","https://github.com/nasa/VirtualADAPT","https://github.com/nasa/VirtualADAPT","arc-sra-team@mail.nasa.gov"
289,b67bf92a45a597837939e6b8fa303b3d,0,"ktransit","Formerly known as PyTransit. This python package contains routines to create and/or fit a transiting planet model. The underlying model is a Fortran implementation of the Mandel & Agol (2002) limb darkened transit model. The code will calculate a full orbital model and eccentricity can be allowed to vary.","https://github.com/mrtommyb/ktransit","https://github.com/mrtommyb/ktransit","thomas.barclay@nasa.gov"
290,8ac54374fd8a8cac0521012213422057,0,"kplr","kplr provides a lightweight Pythonic interface to the catalogs and data. Below, I'll describe the features provided by kplr but to get things started, let’s see an example of how you would go about finding the published parameters of a KOI and download the light curve data.","http://dfm.io/kplr/","http://dan.iel.fm/kplr/","jason.duley@nasa.gov"
291,a4435d6d5eeaa636e818f30d162cdb5e,0,"ketu","The search for transiting exoplanets in K2 data.","https://github.com/dfm/ketu","https://github.com/dfm/ketu","jason.duley@nasa.gov"
292,cbf21d79319f7aff89abe541c801d0fe,0,"k2ps","Oxford K2 planet search pipeline. Searches for transit-like signals from the k2sc-detrended light curves.","https://github.com/hpparvi/k2ps","https://github.com/hpparvi/k2ps","hpparvi@gmail.com"
293,d04684e32df65c8ae2be86594d503061,0,"everest","EPIC Variability Extraction and Removal for Exoplanet Science Targets: A pipeline for de-trending K2 light curves with pixel level decorrelation and Gaussian processes. Here you'll find the Python code used to generate the EVEREST catalog, as well as tools for accessing and interacting with the de-trended light curves.","https://github.com/rodluger/everest","https://rodluger.github.io/everest/","nicholas.k.saunders@nasa.gov"
294,871549044cddae1a129837a3884a25ca,0,"K2mosaic","K2mosaic is a command-line tool that makes it easy to combine CCD pixel data obtained by NASA's Kepler space telescope into wide-field images. The need for this tool arises from the fact that the two-wheeled extended Kepler mission, K2, observed large clusters and moving targets (e.g. planets, comets, and asteroids). ","https://github.com/barentsen/k2mosaic","https://github.com/barentsen/k2mosaic","geert.barentsen@nasa.gov"
295,ce1da383e5eb04e5ab2a54333007da8f,0,"kadenza","Converts raw cadence target data from the Kepler space telescope into astronomer-friendly FITS files.","https://github.com/KeplerGO/kadenza","https://github.com/KeplerGO/kadenza","jessie.dotson@nasa.gov"
296,9c2a757160e10a01401042ff4006a350,0,"K2ephem","Command-line tool to check whether a Solar System body is (or was) observable by NASA's K2 mission","https://github.com/KeplerGO/K2ephem","https://keplerscience.arc.nasa.gov/software.html#k2ephem","jessie.dotson@nasa.gov"
297,4a9c2aacd43b1489603aa7e10b274175,0,"K2fov","The K2fov Python package allows users to check whether a target is in the field of view of K2. In particular, the package adds the K2onSilicon and K2findCampaigns tools to the command line, which allow the visibility of targets to be checked during one (K2onSilicon) or all (K2findCampaigns) campaigns, respectively.","https://github.com/KeplerGO/K2fov","https://keplerscience.arc.nasa.gov/software.html#k2fov","jessie.dotson@nasa.gov"
298,4ead1a4cf6b4bc5593b7af56911fbab5,0,"dnppy","DEVELOP National Program Python package for use with NASA data and GIS. dnppy is a collection of functions and classes for download, format, and analysis of NASA satelite data and anciliary NOAA datasets","https://github.com/NASA-DEVELOP/dnppy","https://nasa-develop.github.io/dnppy/","Jwely"
299,3d01a09bc2754a0892a9e463ff68e865,0,"CERES/ARM Validation Experiment (CAVE)","Data collected in the CAVE effort are meant for use in validation studies of Clouds & The Earths Radiant Energy System (CERES) instruments operating on the Suomi NPP and Earth Observing Systems(EOS)Terra & Aqua & Tropical Rainfall Measurement Mission (TRMM) satellites.","http://www-cave.larc.nasa.gov/LFLcode/Ed4_LaRC_FuLiou201501.tar.gz","http://www-cave.larc.nasa.gov/index.html","Seiji.Kato@NASA.gov"
300,5939bbd1f1115c8f0f9194ee20f7324e,0,"OJO Bot","This is a prototype data processor/publisher for NASA.","https://github.com/vightel/ojo-bot","https://github.com/vightel/ojo-bot","dalia.b.kirschbaum@nasa.gov"
301,6ecc506a4aac67384277e94458ee5b8e,0,"PSYCO: A Predicate-based Symbolic Compositional Reasoning environment","jpf-psyco generates symbolic interfaces for software components using concolic execution.","https://github.com/psycopaths/psyco","https://ti.arc.nasa.gov/m/groups/rse/papers/Giannakopoulou-CAV12.pdf","dimitra.giannakopoulou@nasa.gov"
302,9c709746881a10b8df2f596dc3169c27,0,"Restriping Tools for Lustre (Retools)","Retools is a set of modifications to the commonly used open source utilities bzip2, gzip, rsync, and tar that automatically selects the Lustre stripe count for created and/or extracted files according to the sizes of the files involved. By striping large files over a higher number of physical disks and small files over a lower number, aggregate I/O bandwidth for large files is maximized and the impact to the file system due to small files is minimized. These tools support the typical workflow in high performance computing environments where users compress large files and/or aggregate multiple small files into a single archive during remote transfers. Once uncompressed/unarchived into their original form, these files will be optimally striped for subsequent operations.","https://github.com/pkolano/retools","https://pkolano.github.io/projects/retools.html","Paul.Kolano@nasa.gov"
303,55b2135d6d1dee3955f6806699a15bed,0,"Neo-Geography Toolkit (NGT)","The NASA Ames Stereo Pipeline (ASP) is a suite of free and open source automated geodesy and stereogrammetry tools designed for processing stereo imagery captured from satellites (around Earth and other planets), robotic rovers, aerial cameras, and historical imagery, with and without accurate camera pose information. It produces cartographic products, including digital elevation models (DEMs), ortho-projected imagery, 3D models, and bundle-adjusted networks of cameras. ASP's data products are suitable for science analysis, mission planning, and public outreach.","https://github.com/neogeographytoolkit/stereopipeline","https://ti.arc.nasa.gov/tech/asr/intelligent-robotics/ngt/stereo/","stereo-pipeline@lists.nasa.gov"
304,5a5ec6d67da15d76f7db53c27676a8cb,0,"Visual Environment for Remote Virtual Exploration (VERVE)","VERVE (Visual Environment for Remote Virtual Exploration) is a collection of software components for visualizing, monitoring, and commanding robots in remote environments. VERVE is developed by the Intelligent Robotics Group at NASA Ames Research Center and is part of the NASA Ensemble software ecosystem.","https://sourceforge.net/projects/irg-verve/files/latest/download","https://sourceforge.net/p/irg-verve/wiki/VERVE%20Wiki%20Home/","maria.bualat@nasa.gov"
305,6dadaf8ac08ad18492c62d5ffd99c689,0,"nu-Anomica","One-class nu-Support Vector machine (SVMs) learning technique maps the input data into a much higher dimensional space and then uses a small portion of the training data (support vectors) to parametrize the decision surface that can linearly separate nu fraction of training points (labeled as anomalies) from the rest.","https://ti.arc.nasa.gov/m/opensource/nu-anomica/nu-anomica.zip","https://ti.arc.nasa.gov/opensource/projects/nu-anomica/","peter.c.mehlitz@nasa.gov"
306,9444fb60cf7eadb1613f43646f873cab,0,"Inverse Reinforcement Learning (IRL) Augmentation for PyMDPToolbox","The MDP toolbox for Python by Sam Cordwell provides classes and functions for the resolution of descrete-time Markov Decision Processes. The list of algorithms that have been implemented includes backwards induction, linear programming, policy iteration, q-learning and value iteration along with several variations.","https://github.com/nasa/pymdptoolbox","https://github.com/nasa/pymdptoolbox","michael.bloem@nasa.gov"
307,d8502bbd7c3f68a843cd0a927028b0bd,0,"xGDS","xGDS (Exploration Ground Data Systems) synthesizes real world data (from sensors, robots, ROVs, mobile devices, etc) and human observations into rich, digital maps and displays for analysis, decision making, and collaboration. xGDS evolved from our work developing tools to control, monitor and collect data from autonomous rovers supporting NASA's terrestrial field science research. xGDS is a highly collaborative, interactive suite of web software.","https://github.com/xgds","https://ti.arc.nasa.gov/tech/asr/groups/intelligent-robotics/xgds/","terry.fong@nasa.gov"
308,b6f130f9a824a336429c9ff2f9d937ab,0,"Meta Raster Format (mrf)","The source code contains the Meta Raster Format (MRF) specification and plugin for GDAL, which is a part of the OnEarth software package. OnEarth consists of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The Meta Raster Format and OnEarth software were originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool, the Lunar Mapping and Modeling Project (LMMP), and GIBS.","https://github.com/nasa-gibs/mrf","https://github.com/nasa-gibs/mrf","support@earthdata.nasa.gov"
309,e38942363290f63188b66fa9668e9647,0,"Data Curtains","NASA's Data Curtains from Space is a Google Summer of Code 2015 Project for the Cesium Community developed by Abhishek Potnis under the guidance of Mike McGann and Ryan Boller at NASA. Data Curtains from Space uses Cesium to better visualize data from the CALIPSO satellite, which is used to study clouds and aerosols in the atmosphere.","https://github.com/nasa-gibs/data-curtains","https://github.com/nasa-gibs/data-curtains","support@earthdata.nasa.gov"
310,efadf06db8732b55799cd9e75c1a3b85,0,"OnEarth","OnEarth is a software package consisting of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The software was originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool, the Lunar Mapping and Modeling Project (LMMP), and Worldview.","https://github.com/nasa-gibs/onearth","https://github.com/nasa-gibs/onearth","support@earthdata.nasa.gov"
311,bbfb59d26c2a4210b1b1db5712801c13,0,"OnEarth Boxes","OnEarth-Boxes is a system that creates VM images for use in running, testing, and experimenting with the OnEarth and MRF tools. It uses Packer to produce a variety of pre-built VMs in different formats. OnEarth-Boxes comes pre-configured with NASA Blue Marble and MODIS Aerosol imagery layers, in 4 separate projections. There are OpenLayers endpoints for testing with WMTS, as well as TWMS/KML and Mapserver endpoints.","https://github.com/nasa-gibs/onearth-boxes","https://github.com/nasa-gibs/onearth-boxes","support@earthdata.nasa.gov"
312,5e2ea01212aae5d87e0123be03621498,0,"GIBS Web Examples","This project shows how to use GIBS as a tile source for OpenLayers, Leaflet, Cesium, Bing, and Google Maps.","https://github.com/nasa-gibs/gibs-web-examples","https://github.com/nasa-gibs/gibs-web-examples","support@earthdata.nasa.gov"
313,20e0a056d37cd8ce7fd64fefff1cf929,0,"Open Layers 3","This repository contains changes to OpenLayers 3 used by Worldview.","https://github.com/nasa-gibs/ol3","https://github.com/nasa-gibs/ol3","support@earthdata.nasa.gov"
314,44a2becd8a82f8562c1c5b73f8d34afd,0,"General Mission Analysis Tool (GMAT), Revision 2012a","GMAT is a software system for mission analysis and trajectory optimization, estimation, and prediction. The technology can be used to design spacecraft trajectories, optimize maneuvers, perform orbit determination, visualize and communicate mission parameters, and understand a mission's trade space.","https://sourceforge.net/projects/gmat/files/latest/download","https://sourceforge.net/projects/gmat/","gsfc-softwarerelease@mail.nasa.gov"
315,8379ae1009db5b635d6fc376829e4e60,0,"Core Flight System (CFS) CCSDS File Delivery Protocol (CFDP)","The CCSDS File Delivery Protocol (CFDP) application (CF) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFDP application provides the capability to transmit and receive files to/from the ground. Tables are used to allow flexibility in specifying directory priorities and configurations.","https://sourceforge.net/projects/cfs-cfdp/files/latest/download","https://sourceforge.net/projects/cfs-cfdp","gsfc-softwarerelease@mail.nasa.gov"
316,3869fe57f997c80e3dc60d298b7b1738,0,"Core Flight System (CFS) Checksum Application","The Checksum application (CS) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. Checksum (CS) is one of the reusable applications that make up the Core Flight System (CFS). The technology performs memory integrity management by verifying the contents of critical flight memory regions. Unexpected changes in memory (i.e., due to an SEU) are reported to ground operators.","https://sourceforge.net/projects/cfs-cs/files/latest/download","https://github.com/nasa/cs","gsfc-softwarerelease@mail.nasa.gov"
317,4bc00062ae6df351999ec507c3906edb,0,"Core Flight System (CFS) Data Storage (DS) Application","The Data Storage application (DS) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The DS application provides the ability to store data (i.e., messages) into files. Tables are used to provide the flexibility for specifying messages.","https://github.com/nasa/ds","https://sourceforge.net/projects/cfs-ds","gsfc-softwarerelease@mail.nasa.gov"
318,4ec3b246341288a2e8b67b72c5919f00,0,"Core Flight System (CFS) File Manager (FM) Application","FM provides the user commands to perform the following operations: copy file, move file, rename file, delete file(s), close file, concatenate file, decompress file, delete directory contents, create directory, remove directory, obtain file information, obtain open file listing, and obtain directory listings.","https://github.com/nasa/fm","https://sourceforge.net/projects/cfs-fm","gsfc-softwarerelease@mail.nasa.gov"
319,398190b1d62694c5a4e8341be86a8ab0,0,"Core Flight System (CFS) Health and Safety Application","The plug-and-play CFS Health and Safety application is compatible with the Core Flight Executive (cFE) and uses the Operating System Abstraction Layer (OSAL), both of which were developed by Goddard Space Flight Center in order to provide a reusable, platform-independent, mission-independent, layered architecture for hosting applications. The technology can be used for any government or commercial spacecraft.","https://github.com/nasa/hs","https://sourceforge.net/projects/cfs-hs","gsfc-softwarerelease@mail.nasa.gov"
320,df8326e021d134a51f2bd7e5288fd29f,0,"Core Flight System (CFS) Housekeeping (HK) Application","The Housekeeping application (HK) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFS Housekeeping application provides the ability to organize data from various packets into new packets in order to best utilize the telemetry bandwidth available for a mission.","https://github.com/nasa/hk","https://sourceforge.net/projects/cfs-hk","gsfc-softwarerelease@mail.nasa.gov"
321,f9ec06c735f403cf741d53f5452cd2ca,0,"Core Flight System (CFS) Limit Checker (LC) Application","The Limit Checker application (LC) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The Limit Checker (LC) application is responsible for monitoring telemetry values.","https://github.com/nasa/lc","https://sourceforge.net/projects/cfs-lc","gsfc-softwarerelease@mail.nasa.gov"
322,0bdfb4ab6d81ce2b8a0a414a232582c4,0,"Core Flight System (CFS) Memory Dwell Application","The Memory Dwell application telemeters the contents of table-defined addresses at a table-defined dwell rate. Addresses can be processed using symbols if the target processor/operating system includes symbols.","https://github.com/md","https://sourceforge.net/projects/cfs-md","gsfc-softwarerelease@mail.nasa.gov"
323,57519668fc331d5facf1315c1b30b31b,0,"Core Flight System (CFS) Scheduler Application","The Scheduler application (SCH) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The Scheduler application uses a one-second major timeframe, which is divided into a designer-determined collection of equally divided minor timeframes. The technology is configurable and table-driven to provide greater flexibility.","https://github.com/nasa/sch","https://sourceforge.net/projects/cfs-sch","gsfc-softwarerelease@mail.nasa.gov"
324,de2ad6e245c2053adb9c38d01942cf1c,0,"Core Flight System (CFS) Software Bus Network (SBN) Application","The Software Bus Network application (SBN) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The SBN serves as a plug-in to the cFE framework to transfer messages across process/processor interfaces. The technology has three primary functions: to establish and maintain a connection to each peer over available process/processor interfaces; to distribute and maintain a subscription message database for each peer; and to distribute messages to peers that have subscribed to message identifiers.","https://github.com/nasa/sbn","https://sourceforge.net/projects/cfs-sbn","gsfc-softwarerelease@mail.nasa.gov"
325,9ab94524d90357e4def516070f50a177,0,"Core Flight System (CFS) Stored Command (SC) Application","The Stored Command application (SC) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFS SC application provides the ability to execute onboard absolute-time and relative-time command sequences. The technology offers a generic implementation that can be configured by a user to fit the needs of a specific mission.","https://github.com/nasa/sc","https://sourceforge.net/projects/cfs-sc","gsfc-softwarerelease@mail.nasa.gov"
326,050854fdb6a8b39054875a37368b14e4,0,"NASA Ruby","A home for NASA's open source Ruby software.  funit (Fortran unit testing framework.) fortran (Fortran utilities.) watch-paths (Poor man's file monitoring.) namelists (Generates webpage for creating namelists found in Fortran programs.) uq4sim (Uncertainty quantification for simulation.)","https://github.com/kleb/nasarb","https://github.com/kleb/nasarb","larc-sra@mail.nasa.gov"
327,ddc56a7d8bc6720ee2a5481c4d7e42f5,0,"utm-apis","This repository contains the collection of OpenAPI specification APIs within the NASA's research version of the UTM System.","https://github.com/nasa/utm-apis","https://github.com/nasa/utm-apis","Joseph Rios"
328,bab70bbf7d5a4885fe9535a56513db15,0,"Flight Dynamics Simulation of a Generic Transport Model","The GTM_DesignSim is a Matlab/Simulink simulation intended for design and analysis of flight control laws. It models the dynamics of a 5.5% scale model of a generic transport aircraft. The simulation was developed to allow fault accommodating control algorithms to be developed and refined in simulation before being tested on an experimental subscale model.","https://github.com/nasa/GTM_DesignSim","https://github.com/nasa/GTM_DesignSim/wiki","davidecox"
329,d092bccbdf15f274f35bfc260dbb6acf,0,"NASTRAN 93","NASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA) completed in the early 1970's. It was the first of its kind and opened the door to computer-aided engineering. Subsections of a design can be modeled and then larger groupings of these elements can again be modeled. NASTRAN can handle elastic stability analysis, complex eigenvalues for vibration and dynamic stability analysis, dynamic response for transient and steady state loads, and random excitation, and static response to concentrated and distributed loads, thermal expansion, and enforced deformations.","https://github.com/nasa/NASTRAN-93","https://github.com/nasa/NASTRAN-93","jason.duley@nasa.gov"
330,9e1716a0d5cc843b2c9c5e61db1222cd,0,"Open MCT","Open MCT is an open source and web-based mission control framework for visualization of data on desktop and mobile devices. Open MCT is designed for analysis, visualization, operation, and support of spacecraft missions. Open MCT provides an extensible plugin system allowing it to be integrated with existing ground systems, and adapted to support multiple missions as well as non-space applications.","https://github.com/nasa/openmctweb","https://github.com/nasa/openmctweb","VWoeltjen"
331,938b7c3ed235f955207f564cc8000c8c,0,"Apache Open Climate Workbench","Apache Open Climate Workbench provides a Climate Science library and a suite of tools built on top of it to facilitate multi-model and multi-observation comparisons and visualizations for Climate Scientists.","https://github.com/apache/climate","https://climate.apache.org/","Mr. Michael Joyce"
332,5a4c9bf235ed13739e8be757f2651a83,0,"libSPRITE","libSPRITE is a set of libraries that have been used on several past projects including flight, technology demonstration, and simulation projects.

libSPRITE provides a diverse set of functions to attempt to simplify coding and reduce code errors. For example, libSPRITE defines engineering units as types (i.e., Meters or Radians instead of double or int). It includes an engineering unit aware math library.

libSPRITE includes a task scheduling system that abstracts pthreads and includes a publish subscribe data system for data routing.

In addition, libSPRITE includes an optional binding to the Lua scripting language for configuring the program, setting parameters, running Lua scripts within C++ tasks and even interacting with the application during runtime.","https://github.com/nasa/libSPRITE","https://github.com/nasa/libSPRITE/wiki","dheater"
333,35189d872876644a74a3d9a99a71ed05,0,"X-Plane Communication Toolbox (XPC)","The X-Plane Communications Toolbox (XPC) is an open source research tool used to interact with the commercial flight simulator software X-Plane. XPC allows users to control aircraft and receive state information from aircraft simulated in X-Plane using functions written in C or MATLAB in real time over the network. This research tool has been used to visualize flight paths, test control algorithms, simulate an active airspace, or generate out-the-window visuals for in-house flight simulation software.","https://github.com/nasa/XPlaneConnect","https://github.com/nasa/XPlaneConnect/wiki","teubert"
334,4c543f1fec1d5b7fad62095ceba8d700,0,"MCT-Plugins","This plug-in allows users to create satellites in MCT and track their orbits, in real-time, through various views: Satellite Orbits in 3D via the Earth View plug-in. Real-time locations on a 2D Mercator Projection (A new to MCT; created within this plug-in). All of the views that come standard with the core-MCT distribution (i.e.: MultiColumn View, Plots over time, Alpha, etc.).","https://github.com/nasa/MCT-Plugins","https://github.com/nasa/MCT-Plugins/wiki","VWoeltjen"
335,a31a112ec89c0bdccd7304f8d28cfba2,0,"mct","Mission Control Technologies is a real-time monitoring and visualization platform.","https://github.com/nasa/mct","https://github.com/nasa/mct/wiki","VWoeltjen"
336,b4e7d0d89186662e32bb8bc23875c596,0,"SCRD","The SCRD is a flexible system that can be easily updated or modified for ongoing legislative mandates and is able to provide robust accounting tools for posting and adjusting payments.","https://github.com/nasa/SCRD","https://github.com/nasa/SCRD","rsial2"
337,503b07f25037a7728a03b394001944b3,0,"Digital-Strategy","Machine-readable schema for NASA's response to the president's digital strategy.","https://github.com/nasa/digital-strategy","https://github.com/nasa/digital-strategy","jasonduley"
338,2a4e1cce620c4190d13a40b0640d671e,0,"CoECI-CMS-Healthcare-Fraud-Prevention","Code from the Healthcare Fraud Prevention Partnership (HFPP) through United States Centers for Medicare & Medicaid Services (CMS) challenge in collaboration with NASA's Center of Excellence for Collaboration (CoECI), Harvard, and TopCoder developed software that supports a data exchange network that enables healthcare insurance-paying entities in both the public and private sector to safely and securely share information for purposes of prevention and detection of fraud, waste and abuse across partners.","https://github.com/nasa/CoECI-CMS-Healthcare-Fraud-Prevention","https://github.com/nasa/CoECI-CMS-Healthcare-Fraud-Prevention","nasarader"
339,04ba2fcfa784353b6a9c8f5851cf1c61,0,"coeci-cms-mpsp","This is the Medicaid Provider Enrollment Screening Portal Project multi-state, multi-program provider screening application capable of risk scoring, credentialing validation, identify authentication, and sanction checks, that lowered the burden on providers and reduced administrative and infrastructure expenses for states and federal programs.","https://github.com/nasa/coeci-cms-mpsp","https://github.com/nasa/coeci-cms-mpsp","cyberjag"
340,85b24b6217ef499b1788ab816570daa8,0,"cash","Cassini Structured Homepages uses LDAP authorization to provide a security layer to webpage content.","https://github.com/nasa/cash","https://github.com/nasa/cash","dlconner"
341,a1e9f64161311342b5f9ad3debd3dfb9,0,"autodoc","The Automatic Documentation software creates Microsoft Documents automatically using Text and Template files.","https://github.com/nasa/autodoc","https://github.com/nasa/autodoc","dlconner"
342,f02c2f98e0c8089f1791432c35629f4b,0,"COECI-USAID-Atrocity-Prevention-Model","Code from the United States Agency for International Development (USAID) and Humanity United (HU) challenge for Atrocity Prevention Modeling in collaboration with NASA's Center of Excellence for Collaboration (CoECI). This package contains the top 5 solutions submitted for the 'Tech Challenge for Atrocity Prevention' competition.","https://github.com/NASA-Tournament-Lab/CoECI-USAID-Atrocity-Prevention-Model","https://community.topcoder.com/longcontest/?module=ViewProblemStatement&rd=15761&pm=12634","rsial2"
343,1cb1599ad0217014a87de93dce55aec5,0,"CoECI-CMS-Open-Payment","Code from the United States Centers for Medicare & Medicaid Services (CMS) challenge in collaboration with NASA's Center of Excellence for Collaboration (CoECI), Harvard, and TopCoder developed an iPhone app and reporting web application used to track and compile transfers of value (e.g. gift, meal, speaking fee) from industry manufacturers (e.g. pharmaceutical companies) to physicians.","https://github.com/NASA-Tournament-Lab/coeci-cms-mpsp","https://github.com/nasa/CoECI-CMS-Open-Payment","nasarader"
344,971869057adf594ef1f1f1b7b1d7b2eb,0,"VADER","This repository consists of the various scripts required to make our VADER system work. The variable emissivity radiator aerogel insulation blanket dual zone thermal control experiment suite for responsive space (STP-H3-VADER) investigation tests a variable emissivity radiator and a new form of multilayer insulation that uses Aerogel as the thermal isolator in order to protect the spacecraft from the harsh extremes of the space environment. The Aerogel material provides a more durable, lighter and cheaper alternative to traditional spacecraft thermal blankets. The use of this material could reduce the costs related to spaceflight by reducing the required spacecraft mass and increasing design efficiency.","https://github.com/nasa/VADER","https://github.com/nasa/VADER/wiki","pmosbach"
345,3b25db6a243c13c9474340784485518a,0,"data.nasa.gov","This is the source code for the WordPress theme that powers data.nasa.gov. Data.nasa.gov is NASA's flagship platform for sharing information about the vast data we collect and store over 100 years of U.S. aeronautics and space data. Developers, technologists, entrepreneurs, citizen scientists, and many others can contribute directly to the exploration of space and Earth by helping to create new ways of looking at this data.","https://github.com/nasa/data.nasa.gov","https://github.com/nasa/data.nasa.gov","seanherron"
346,be8676fbbd808ddbafc74aa3b1068a35,0,"code.nasa.gov","This is the source code for the WordPress theme that powers code.nasa.gov. Code.nasa.gov expands NASA's open source activities, surfaces existing activities, and guides internal and external groups in open development, release, and contribution. In doing so, NASA hopes to lower barriers to building open technology in partnership with the public.","https://github.com/nasa/code.nasa.gov","https://github.com/nasa/code.nasa.gov","seanherron"
347,02e46ae2ae9714781e3942ab474bcd99,0,"StereoPipeline","The NASA Ames Stereo Pipeline is a suite of automated geodesy & stereogrammetry tools designed for processing planetary imagery captured from orbiting and landed robotic explorers on other planets.","https://github.com/nasa/StereoPipeline","https://github.com/nasa/StereoPipeline","zmoratto"
348,50fe14f3b5d11b33787485df3c9753c0,0,"NASA-Space-Weather-Media-Viewer","Space weather media viewer.","https://github.com/nasa/NASA-Space-Weather-Media-Viewer","https://play.google.com/store/apps/details?id=air.NasaSpaceViewer","MatthewValverde"
349,7aeee0a38b4cdc328140609d9519831b,0,"Tool for Analysis of Surface Cracks (TASC)","Tool for Analysis of Surface Cracks (TASC) is a computer program created in MATLAB to enable easy computation of nonlinear J-integral solutions for surface cracked plates in tension by accessing and interpolating between the 600 nonlinear surface crack solutions documented in NASA/TP-2011-217480. The only required inputs are the surface crack dimensions (2c and a), plate cross-section dimensions (W and B), and linear plus power law material properties of elastic modulus, yield strength, and strain hardening coefficient. With the geometry and material parameters entered, TASC interpolates to the appropriate J(Φ) vs. crack mouth opening displacement (CMOD) and far-field tension stress, σ, vs. CMOD solution, providing the full solution as CMOD ranges from zero out to the CMOD limit of the solution space for the given input parameters. TASC was developed by the Material and Processes Laboratory at NASA's Marshall Space Flight Center.","https://sourceforge.net/projects/tascnasa","https://sourceforge.net/projects/tascnasa/","pa-allen"
350,0234729d19ce85de785519036ae64610,0,"Earth Science Datacasting","Datacasting is a RSS publish-subscribe method for delivering Earth Science data. A Feed Reader provides feed filtering, data download, and the ability to mash-up data with information related to geophysical events.","https://sourceforge.net/projects/datacasting/files/latest/download","http://datacasting.jpl.nasa.gov/","jplsr"
351,22d7ac6617100425a77a757103936617,0,"Interplanetary Overlay Network (ION) Software Distribution (DTN)","The Interplanetary Overlay Network (ION) software distribution is an implementation of Delay-Tolerant Networking (DTN) architecture as described in Internet RFC 4838. It includes implementations of the DTN Bundle Protocol, the Licklider Transmission Protocol, and two CCSDS application protocols that have been adapted to run over the BP/LTP stack: the CCSDS File Delivery Protocol and Asynchronous Message Service.","https://sourceforge.net/projects/ion-dtn/files/latest/download","https://sourceforge.net/projects/ion-dtn/","jplsr"
352,de7b0c985480d22dca7bf8c078110245,0,"Data Productivity Toolkit","The Data Productivity Toolkit is a collection of linux command-line tools designed to facilitate the analysis of text-based data sets. Modeled after the general linux pipeline tools such as awk, grep, and sed, the kit provides powerful tools for selecting/combining data, performing statistics, and visualizing results. The tools are all written in python and in many instances provide a command-line API to basic python and numpy/scipy/matplotlib routines.","https://sourceforge.net/projects/dptoolkit/files/latest/download","https://sourceforge.net/projects/dptoolkit/","jplsr"
353,e1da08067d16144a06da65daf791b0c1,0,"SunPy","The SunPy project is an effort to create an open-source software library for solar physics using the Python programming language. More information at http://www.sunpy.org.","https://github.com/sunpy/sunpy","http://www.sunpy.org","segfaulthunter"
354,b6b5e479186381f3e71348d0d356c81f,0,"Multi-Threaded Multi-Node Utilities (Mutil)","Mutil is a set of standard utilities that employ multiple types of parallelism and other optimizations to achieve maximum performance on modern file systems. Multi-threading is used to ensure that nodes are kept as busy as possible. Double buffering allows individual operations within a single task to be overlapped using asynchronous I/O. Multi-node cooperation allows different nodes to take part in the same task. Split file processing allows multiple threads to operate concurrently on the same file. Finally, additional optimizations such as buffer management help eliminate other bottlenecks that can reduce performance. Mutil currently includes drop-in replacements for cp and md5sum from GNU coreutils, which have achieved 10/30x rates on one/many nodes.","https://sourceforge.net/projects/mutil/files/latest/download","http://mutil.sourceforge.net","pkolano"
355,1d52b01dbb641cd81b89ad01c8934c69,0,"Middleware Using Existing SSH Hosts (MESH)","Mesh is a secure, lightweight grid middleware that is based on the addition of a single sign-on capability to the built-in public key authentication mechanism of SSH using system call interposition. Resources may be added to a Mesh-based grid in a matter of minutes using just five small files and two environment variable settings. Mesh adheres to fundamental security principles and was designed to be compatible with strong security mechanisms including two-factor authentication, SSH bastions, and restrictive firewalls. Mesh uses a remote command model, which is based on stock SSH clients and the syntax and commands already understood by users, thus requires no additional software or knowledge to utilize effectively. Several existing services have been integrated with Mesh to provide resource discovery and query, high performance file transfer, and job management.","https://sourceforge.net/projects/mesh/files/latest/download","http://mesh.sourceforge.net","pkolano"
356,e69371f96c7367efbc62162456e48318,0,"Balancing Load Across Systems (Ballast)","Ballast is a tool for balancing user load across SSH servers based on configurable criteria such as CPU load and system availability. Ballast is invoked as part of the SSH login process, hence has access to the user name, which is not available in traditional load balancers. This gives ballast the unique ability to perform user-specific load balancing, which has several benefits including separating users who have historically generated high loads and providing a common login interface to users who may be separated based on other criteria such as system accessibility. Ballast includes a simple client, a lightweight data server, and a data collection agent.","https://sourceforge.net/projects/ballast/files/latest/download","http://ballast.sourceforge.net","pkolano"
357,acf3bee3f48072c40d90c07bcdcbdd0d,0,"Lossless Hyper-multi-spectral data compression software","Software implementation of JPL published paper for performing lossless hyper-spectral and milti-spectral data compression. The implementation was executed to confirm the results obtained by JPL independently. Implemented JPL published paper and its revised version presented to the CCSDS hyper/multi-spectral data compression working group. The implementation follows every step listed in the relevant papers and usess C-code for simplicity. The software takes 3-dimensional test data provided by the CCSDS working group and created predictor error results that can be further encoded with other known techniques.","https://opensource.gsfc.nasa.gov/projects/LHD/LHD.zip","https://opensource.gsfc.nasa.gov/projects/LHD","pkolano"
358,eaebd74622bd80a8dc15d7a28ec8206a,0,"Simple, Scalable, Script-based Science Processor for Measurements (S4PM)","The Simple, Scalable, Script-based Science Processor for Measurements (S4PM) is a system for highly automated processing of science data, scalable up to large processing systems and scalable down to small, special-purpose processing strings.","https://sourceforge.net/projects/s4pm/files/latest/download","https://sourceforge.net/projects/s4pm","btrivedi"
359,24ca5a0040806aacc15597f575d83951,0,"Goddard Satellite Data Simulation Unit (G-SDSU)","G-SDSU core modules enables users to insert their own satellite simulator to convert model-simulated atmosphere states to various types of satellite observable signals (radiance or backscattering signals), and to compare such data with comparable measurements collected by corresponding satellite level-1 measurement.","https://opensource.gsfc.nasa.gov/projects/G-SDSU/G-SDSU-core.tar.gz","https://opensource.gsfc.nasa.gov/projects/G-SDSU/index.php","opensource@gsfc.nasa.gov"
360,d0211ae0373da1263bcfa63a52ed3110,0,"Visual System for Browsing, Analysis and Retrieval of Data (ViSBARD)","ViSBARD (Visual System for Browsing, Analysis, and Retrieval of Data) is an interactive visualization and analysis tool for space physics data. It provides an integrated 3-D/2-D environment to analyze measurements across many spacecraft and MHD models.","https://sourceforge.net/projects/visbard/files/latest/download","https://spdf.gsfc.nasa.gov/research/visualization/visbard/index.html","boller8"
361,d5f7e0a710a3863dc0e6966c10ec9307,0,"Ground and space radar volume matching and comparison software","This software enables easy comparison of ground- and space-based radar observations. The software was initially designed to compare ground radar reflectivity from operational, ground-based, S- and C-band meteorological radars with comparable measurements from the Tropical Rainfall Measuring Mission satellite's Precipitation Radar instrument. The software is also applicable to other ground-based and space-based radars. The software allows both ground and space based radar data to be compared for validation purposes.","https://opensource.gsfc.nasa.gov/projects/GSRadar/GS-Radar.tar","https://opensource.gsfc.nasa.gov/projects/GSRadar/index.php","kenneth.r.morris@nasa.gov"
362,1ce8983cf4c6f1089c9d78de7f2f68db,0,"GEOS-5 GCM Modeling Software","The Global Modeling and Assimilation Office (GMAO) has delivered the next generation general circulation model, GEOS-5. This system represents a new paradigm for systems development, in that GEOS-5 has been developed with the Earth System Modeling Framework (ESMF) for its internal architecture using the MAPL software toolkit developed for GEOS-5.","https://opensource.gsfc.nasa.gov/projects/GEOS-5/GEOSagcm-Eros_7_24.tar.gz","https://opensource.gsfc.nasa.gov/projects/GEOS-5/index.php","Steven Pawson"
363,7e804bffe914e98891d7be64d664f50d,0,"General Mission Analysis Tool (GMAT R2016a)","The General Mission Analysis Tool (GMAT), developed at the Goddard Space Flight Center, is the world’s only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.","https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2016a/files/latest/download","http://gmat.gsfc.nasa.gov/","stevenhughes"
364,84efbcde51e50357036a01a4eb3ae723,0,"General Mission Analysis Tool (GMAT R2015a)","The General Mission Analysis Tool (GMAT), developed at the Goddard Space Flight Center, is the world’s only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.","https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2015a/files/latest/download","http://gmat.gsfc.nasa.gov/","djcinsb"
365,96ee2ba18b5539260061dad7e82abf86,0,"Goddard Mission Services Evolution Center Architecture (GMSEC) API","The Goddard Mission Services Evolution Center (GMSEC) program was established in 2001 to coordinate ground and flight data systems development and services at GSFC with the ultimate goal to efficiently support current and future GSFC mission services. The GMSEC architecture is a ground systems architecture that spans the full mission lifecycle from development through operations. The architecture provides a secure, scalable and extensible communications and data system that supports all aspects of a mission from onboard processing through the Mission Operations Center (MOC) to public access on the Internet. The architecture includes an Application Programming Interface (API) and message bus to provide a publish and subscribe communication mechanism. The GMSEC architecture and source code are based on an enterprise architecture approach with a message-oriented cross-platform enterprise middleware (information software bus).","https://sourceforge.net/projects/gmsec/files/latest/download","https://sourceforge.net/projects/gmsec/","bwiegand"
366,a775a173a25f86943d1be3a48f7d89a8,0,"BigView","BigView allows for interactive panning and zooming of images of arbitrary size on desktop PCs running linux. Additionally, it can work in a multi-screen environment where multiple PCs cooperate to view a single large image. Using this software, one can explore -- on relatively modest machines -- images such as the Mars Orbiter Camera mosaic [92160x33280 pixels].","https://ti.arc.nasa.gov/m/opensource/downloads/bigView.tar.gz","https://ti.arc.nasa.gov/opensource/projects/bigview/","Dennis Koga"
367,ee448d5dafc53320d33311652d2220e7,0,"Block-GP: Scalable Gaussian Process Regression","Block GP is a Gaussian Process regression framework for multimodal data, that can be an order of magnitude more scalable than existing state-of-the-art nonlinear regression algorithms. The framework builds local Gaussian Processes on semantically meaningful partitions of the data and provides higher prediction accuracy than a single global model with very high confidence.","https://ti.arc.nasa.gov/m/opensource/downloads/BlockGP.tar.gz","https://ti.arc.nasa.gov/opensource/projects/block-gp/","Dennis Koga"
368,396446e238f044f10e33992dbab40242,0,"CODE software framework","CODE is a software framework for control and observation in distributed environments. The basic functionality of the framework allows a user to observe a distributed set of resources, services, and applications. A user can also use the framework to manage distributed resources, services, and applications.","http://www.nas.nasa.gov/Resources/Software/Open-Source/Downloads/Code/code-1_0b1.tar.gz","http://www.nas.nasa.gov/Resources/Software/Open-Source/code.html","Dennis Koga"
369,30ef782f26d2694b746f6b52fea017e5,0,"E-Standards for Mass Properties Engineering","The purpose of this Opensource forum is to promote the development of a JAVA based Application Programming Interface for the field of Mass Properties Engineering.","https://ti.arc.nasa.gov/m/opensource/downloads/MPE_E_Std_API_Distribution_2010_08_25.zip","https://ti.arc.nasa.gov/opensource/projects/e-standards-mass-properties-engineering/","Dennis Koga"
370,30181fb3b5e3c4c018a39c6042da8d9b,0,"Geometry Manipulation Protocol (GMP)","The Geometry Manipulation Protocol (GMP) is a library which serializes datatypes between XML and ANSI C data structures to support CFD applications. This library currently provides a description of geometric configurations, general moving-body scenarios (prescribed and/or 6-DOF), and control surface settings.","https://ti.arc.nasa.gov/m/opensource/downloads/gmp-1.0.0.tar.gz","https://ti.arc.nasa.gov/opensource/projects/gmp/","Dennis Koga"
371,26d89487710dd7d37db0d921f33f29bf,0,"Growler","Growler is a C++-based distributed object and event architecture. It is written in C++, and supports serialization of C++ objects as part of its Remote Method Invocation, Event Channels, and in its Interface Definition Language. Its primary application has been in support of interactive, distributed visualization, computational steering, and concurrent visualization, but it is a general purpose system for distributed programming.","https://ti.arc.nasa.gov/m/opensource/downloads/growler-0.3.5.tar.gz","http://growler.sourceforge.net/","Dennis Koga"
372,69f1ebdac09e3c2901a98b714ec4751d,0,"IND: Creation and Manipulation of Decision Trees from Data","IND is applicable to most data sets consisting of independent instances, each described by a fixed length vector of attribute values. An attribute value may be a number, one of a set of attribute specific symbols, or omitted. One of the attributes is delegated the 'target' and IND grows trees to predict the target. Prediction can then be done on new data or the decision tree printed out for inspection.","https://ti.arc.nasa.gov/m/opensource/downloads/IND2.1.2.1-NASA-OSA.tar.gz","https://ti.arc.nasa.gov/opensource/projects/ind/","Dennis Koga"
373,7ed84e5c976ec80716443fead339e62a,0,"IPG Execution Service","The Execution Service allows users to submit, monitor, and cancel complex jobs. Each job consists of a set of tasks that perform actions such as executing applications and managing data. Each task is executed based on a starting condition that is an expression on the states of other tasks. This formulation allows tasks to be executed in parallel and also allows a user to specify tasks to execute when other tasks succeed, fail or are cancelled.","https://ti.arc.nasa.gov/m/opensource/downloads/ipg-es-1.0.tar.gz","https://ti.arc.nasa.gov/opensource/projects/ipg/","Dennis Koga"
374,762c940037460049ee78ddf3c6937194,0,"JavaGenes","JavaGenes is a fairly general purpose evolutionary software system written in Java. It implements several versions of the genetic algorithm, simulated annealing, stochastic hill climbing and other search techniques. JavaGenes has been used to evolve molecules, atomic force field parameters, digital circuits, Earth Observing Satellite schedules, and antennas.","https://ti.arc.nasa.gov/m/opensource/downloads/JavaGenes.0.7.68.tar.gz","https://ti.arc.nasa.gov/opensource/projects/javagenes/","Dennis Koga"
375,654f46de4ad6c1bee88fec0e4d023ac5,0,"Libibvpp","Libibvpp is a C++ wrapper around libibverbs, which is part of the OpenFabrics software suite (www.openfabrics.org).","https://ti.arc.nasa.gov/opensource/projects/libibvpp","https://ti.arc.nasa.gov/opensource/projects/libibvpp/","Dennis Koga"
376,61b75167c7ec6e2dc338efe8d0168f1a,0,"Livingstone2","Livingstone2 is a reusable artificial intelligence (AI) software system designed to assist spacecraft, life support systems, chemical plants or other complex systems in operating robustly with minimal human supervision, even in the face of hardware failures or unexpected events. Livingstone2 diagnoses the current state of the spacecraft or other system and recommends commands or repair actions that will allow the system to continue operations.","https://ti.arc.nasa.gov/m/opensource/downloads/L2-OSA-unix_2.7.8.2.tar.gz","https://ti.arc.nasa.gov/opensource/projects/livingstone2/","Dennis Koga"
377,eee88eeb2e229c084c443b30ba558ca6,0,"Mariana","Mariana is an algorithm that efficiently optimizes the hyperparameters for Support Vector Machines for regression and classification.","https://ti.arc.nasa.gov/m/opensource/downloads/Mariana_.tgz","https://ti.arc.nasa.gov/opensource/projects/mariana/","Dennis Koga"
378,0a1e691f393aafc806d6ecdb2ef47907,0,"Mission Simulation ToolKit (MST)","The MST is a simulation framework, supporting the development of autonomy technology for planetary exploration vehicles. The MST provides a software test bed which includes simulated robotic platforms, sensors, and environments.","https://ti.arc.nasa.gov/m/opensource/downloads/MST_v1-0b.tgz","https://ti.arc.nasa.gov/opensource/projects/mission-simulation-toolkit/","Dennis Koga"
379,b14bd9fe7a916b3036b50e0c0be65742,0,"Multi-Fidelity Simulator (MFSim)","Multi-Fidelity Simulator, MFSim is a pluggable framework for creating an air traffic flow simulator at multiple levels of fidelity. The framework is designed to allow low-fidelity simulations of the entire US Airspace to be completed very quickly (on the order of seconds). The framework allows higher-fidelity plugins to be added to allow higher-fidelity simulations to occur in certain regions of the airspace concurrently with the low-fidelity simulation of the full airspace.","https://ti.arc.nasa.gov/m/opensource/downloads/MFSim1_0.zip","https://ti.arc.nasa.gov/opensource/projects/mfsim/","Dennis Koga"
380,cfb71df5d15458dee20d2dd070cac691,0,"NodeMon","NodeMon is a resource utilization monitor tailored to the Altix architecture, but is applicable to any Linux system or cluster. It allows distributed resource monitoring via the Growler software infrastructure. It is modular, with existing modules for monitoring of cpu, memory, network, and numalink activity.","https://ti.arc.nasa.gov/m/opensource/downloads/nodemon-0.3.3.tar.gz","https://ti.arc.nasa.gov/opensource/projects/nodemon/","Dennis Koga"
381,7f141cdf01367e10b0f13549c4574c76,0,"Pour","Pour is a general-purpose information service framework designed to accommodate a wide variety of information types with support for high volume, low frequency periodic updates, user-specified updates, and automatic updates collected on-demand when needed. Information is stored exclusively in XML and retrieved using standard XPath queries over a single unified namespace independent of the information's source.","https://ti.arc.nasa.gov/m/opensource/downloads/ipg-pour-1.0.tar.gz","https://ti.arc.nasa.gov/opensource/projects/pour/","Dennis Koga"
382,713424c1ff02b75b46e4ccbc2978f0f5,0,"ROBUS-2","The ROBUS-2 Protocol Processor (RPP) is a custom-designed hardware component implementing the functionality of the ROBUS-2 fault-tolerant communication system. The Reliable Optical Bus (ROBUS) is the core communication system of the Scalable Processor-Independent Design for Enhanced Reliability (SPIDER), a general-purpose fault-tolerant integrated modular architecture currently under development at NASA Langley Research Center. ROBUS is a time-division multiple access (TDMA) broadcast communication system with medium access control by means of time-indexed communication schedule. ROBUS-2 is a developmental version of the ROBUS providing guaranteed fault-tolerant services to the attached processing elements (PEs), in the presence of a bounded number of faults.","https://ti.arc.nasa.gov/m/opensource/downloads/robus2.zip","https://ti.arc.nasa.gov/opensource/projects/robus-2/","Dennis Koga"
383,09bf3cd5cdf8896d8bcec74da0c1e92f,0,"sequenceMiner","sequenceMiner was developed to address the problem of detecting and describing anomalies in large sets of high-dimensional symbol sequences. sequenceMiner works by performing unsupervised clustering (grouping) of sequences using the normalized longest common subsequence (LCS) as a similarity measure, followed by a detailed analysis of outliers to detect anomalies. sequenceMiner utilizes a new hybrid algorithm for computing the LCS that has been shown to outperform existing algorithms by a factor of five. sequenceMiner also includes new algorithms for outlier analysis that provide comprehensible indicators as to why a particular sequence was deemed to be an outlier. This provides analysts with a coherent description of the anomalies identified in the sequence, and why they differ from more 'normal' sequences.","https://ti.arc.nasa.gov/m/opensource/downloads/SequenceMiner.tar.gz","https://c3.ndc.nasa.gov/dashlink/algorithm/sequenceminer-algorithm/","Dennis Koga"
384,08265b6dd0f981406fd2994bb766e3d4,0,"Self-Healing Independent File Transfer (Shift)","Shift is a lightweight framework for high performance local and remote file transfers that provides resiliency across a wide variety of failure scenarios through various techniques. These include end-to-end integrity via cryptographic hashes, throttling of transfers to prevent resource exhaustion, balancing transfers across resources based on load and availability, and parallelization of transfers across multiple source and destination hosts for increased redundancy and performance.","https://ti.arc.nasa.gov/m/opensource/downloads/shift-3.1.tgz","https://ti.arc.nasa.gov/opensource/projects/shift/","Dennis Koga"
385,3840c72510a633796110dbed577ce779,0,"Surfer","Surfer is an extensible framework designed to select and rank grid resources where a resource is defined to be anything that may need selecting such as compute resources, storage resources, data resources, etc.","https://ti.arc.nasa.gov/m/opensource/downloads/ipg-surfer-1.0.tar.gz","http://www.nas.nasa.gov/~kolano/projects/surfer.html","Dennis Koga"
386,ccfbd9f7f95d3a40cd6937ca6f60edd3,0,"Swim","Swim is a software information service for the grid built on top of Pour, which is an information service framework developed at NASA. Swim provides true software resource discovery integrated with the tools used by administrators to install software.","https://ti.arc.nasa.gov/m/opensource/downloads/ipg-swim-1.0.tar.gz","http://people.nas.nasa.gov/~kolano/projects/swim.html","Dennis Koga"
387,1198428725ebefa27f1ed36712f36e88,0,"Inference Kernel for Open Static Analyzers (IKOS)","IKOS is a C++ library designed to facilitate the development of sound static analyzers based on Abstract Interpretation. Specialization of a static analyzer for an application or family of applications is critical for achieving both precision and scalability. Developing such an analyzer is arduous and requires significant expertise in Abstract Interpretation. ","https://ti.arc.nasa.gov/m/opensource/downloads/ikos/ikos_arbos.0.1.tar.gz","https://ti.arc.nasa.gov/opensource/ikos/","Dennis Koga"
388,0a7c62d8fadb48a9776c4004bc734eed,0,"SIAM 2007 Text Mining Competition data set","This is the dataset used for the SIAM 2007 Text Mining Competition. This is a subset of the Aviation Safety Reporting System (ASRS) dataset.","https://github.com/Buzz-Beater/SIAM-2007-Text-Mining","https://c3.nasa.gov/dashlink/resources/138/","Nikunj Oza"
389,9c0918f5fcfacf589da493feb2314843,0,"Land Information System Verification Toolkit (LVT)","The Land Information System Verification Toolkit (LVT) is a hybrid Fortran90 and C software tool designed to enable the evaluation, analysis and comparison of outputs generated by the Land Information System (LIS). LIS is a software framework to support land surface modeling and data assimilation.","https://lis.gsfc.nasa.gov/sites/default/files/LIS/LIS_public_release_7_2r/LDT_public_release_7.2r.tar.gz","https://opensource.gsfc.nasa.gov/projects/LVT/index.php","Christa Peters-Lidard"
390,63697c3edabb08419b778ef6e2a4797b,0,"Matlab-CodeV Toolkit","Matlab-CodeV toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.","https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/CodeV%20v2007a.zip","https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php","Joseph Howard"
391,c2f3782d565c144d9b942507530b66d9,0,"Matlab-OSLO Toolkit","Matlab-OSLO toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.","https://opensource.gsfc.nasa.gov/projects/Matlab/Matlab_OSLO.zip","https://opensource.gsfc.nasa.gov/projects/Matlab/index.php","Joseph Howard"
392,cc6b6fa8fb08b59dce300f56a72ba3a4,0,"Matlab-zemax Toolkit","Matlab-Zemax toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.","https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/15151%20ZEMAX%20v2007a.zip","https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php","Joseph Howard"
393,3a7b6b5704768c7eba5e48cb8088043c,0,"ODL to XML Converter","Converts an HDF-EOS ODL metadata file into appropriate XML. Written in Java.","https://opensource.gsfc.nasa.gov/projects/ODL_XML/odl_java.tgz","https://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php","Richard Ullman"
394,c6daf0a2f3894c1d1d1e9f10ca511f37,0,"PARAMESH","PARAMESH is a package of Fortran 90 subroutines designed to provide an application developer with an easy route to extend an existing serial code which uses a logically cartesian structured mesh into a parallel code with adaptive mesh refinement (AMR).","https://opensource.gsfc.nasa.gov/projects/paramesh/paramesh3.3_beta.tar.gz","https://opensource.gsfc.nasa.gov/projects/paramesh/index.php","Peter MacNiece"
395,90b16ce096f23ac785e6fd0d6bd0384f,0,"pFUnit","pFunit is a Fortran analog to various other xUnit testing frameworks which have been developed within the software community,and is intended to enable test driven development (TDD) within the scientific/technical programming community.","https://opensource.gsfc.nasa.gov/projects/FUNIT/pFUnit.tar","https://opensource.gsfc.nasa.gov/projects/FUNIT/index.php","Thomas Clune"
396,c2b54e62744cdfb5364007344465168f,0,"User Friendly Metadata (UFM)","The User-friendly Metadata (UFM) tool functions as a filter, taking input from standard input (STDIN) and writing output to standard output (STDOUT) and/or standard error (STDERR).","https://opensource.gsfc.nasa.gov/projects/UFM/UFM.zip","https://opensource.gsfc.nasa.gov/projects/UFM/index.php","Richard Ullman"
397,97ac5c662451144700df276844f5d237,0,"XML to HDF-EOS Converter","Program that takes an XML representation of the contents of an HDF-EOS file and recreates the file from that description.","https://opensource.gsfc.nasa.gov/projects/xml2he/xml2he5.tar.gz","https://opensource.gsfc.nasa.gov/projects/xml2he/index.php","Richard Ullman"
398,199e22a60ac1daf93037ff715c118676,0,"XML to ODL Converter","Converts an XML file to an HDF-EOS ODL metadata file.","https://opensource.gsfc.nasa.gov/projects/xml2odl/xml2odl.zip","https://opensource.gsfc.nasa.gov/projects/xml2odl/index.php","Richard Ullman"
399,eb5bb4efb6b0a82374eb2191a1c614bb,0,"CFITSIO","CFITSIO is a library of C and Fortran subroutines for reading and writing data files in FITS (Flexible Image Transport System) data format. CFITSIO provides simple high-level routines for reading and writing FITS files that insulate the programmer from the internal complexities of the FITS format. CFITSIO also provides many advanced features for manipulating and filtering the information in FITS files.","ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz","http://heasarc.gsfc.nasa.gov/docs/software/fitsio/fitsio.html","William D. Pence"
400,c5d4e8712e1d7bd3b20d18d2e21ac4f7,0,"fitsy/funtools","This is a small C library for FITS I/O originally written by John Roll at SAO. It is now maintained and distributed as part of the FUNTOOLS utility package.","https://github.com/ericmandel/funtools","https://github.com/ericmandel/funtools","William D. Pence"
401,fc82b3928fbadcd65e8940abe81cacd6,0,"qfits","The qfits library is a small, portable C library that provides low level support for accessing FITS images, headers and tables.","ftp://ftp.eso.org/pub/eclipse/latest/eclipse-main-5.0.0.tar.gz","http://www.eso.org/sci/software/eclipse/qfits/","William D. Pence"
402,55f3a31703eef481a795028e93a2ea4a,0,"CCfits Library","The CCfits library is build on top of CFITSIO and provides an interface that allows the user to manipulate FITS data through high-level object-oriented building blocks.","http://heasarc.gsfc.nasa.gov/fitsio/CCfits/CCfits-2.4.tar.gz","http://heasarc.gsfc.nasa.gov/fitsio/CCfits/","Phil Newman"
403,0ab05ede2c54868b49a3b86603328cbc,0,"AIPS++FITS Library","The AIPS++ FITS library is available separately from the AIPS++ distribution.  Currently there is limited documentation.  This defines a set of C++ objects to read and write FITS files.","http://www.cv.nrao.edu/fits/src/c++fits-09.076.tar.gz","http://www.cv.nrao.edu/fits/src/","William D. Pence"
404,3567be5f82a0dbc33ee4833e766c1819,0,"IDLAstro","TThe IDL Astronomy Library contains four different sets of procedures for reading, writing, and modifying FITS files. The reason for having four different methods of FITS I/O with IDL is partly historical, as different groups developed the software independently. However, each method also has its own strengths and weakness for any particular task. For example, the procedure MRDFITS() -- which can read a FITS table into an IDL structure --is the easiest procedure for analyzing FITS files at the IDL prompt level (provided that one is comfortable with IDL structures). But mapping a table into an IDL structure includes extra overhead, so that when performing FITS I/O at the procedure level, it may be desirable to use more efficient procedures such as FITS_READ and FTAB_EXT.","https://github.com/wlandsman/IDLAstro","http://idlastro.gsfc.nasa.gov/fitsio.html","Theodore Gull"
405,95e84daf50b6fad613f51bb0707053a3,0,"nom-tam-fits","A full function 100% Java library for reading and writing FITS files.","https://github.com/nom-tam-fits/nom-tam-fits","http://heasarc.gsfc.nasa.gov/docs/heasarc/fits/java/","William D. Pence"
406,62d64760c361cfd906a63a41d671c521,0,"Starlink/starjava","STIL/starlink is a pure Java library for generic input, output and processing of tabular data. It presents to the application programmer a view of a table which looks the same regardless of whether it came from a FITS file, a VOTable, an ASCII text file, a query on a relational database, or whatever.","https://github.com/Starlink/starjava","https://github.com/Starlink/starjava","William D. Pence"
407,226dd9c3a52db5dc3850f0c571f22803,0,"fitsjs","A standalone JavaScript library for reading the FITS astronomical file format. This library is built for modern browsers supporting the DataView object. These include at least Chrome 9, Firefox 15, and Safari 6. This library may be used to read various forms of the FITS format. This implementation is under active development. In its current state it supports the following: reading of multiple header data units, reading of FITS images, reading of data cubes, reading of binary tables, reading of ASCII Tables, and decompressing images using the Rice algorithm. ","https://github.com/astrojs/fitsjs","https://github.com/astrojs/fitsjs/","William D. Pence"
408,149c8598427f80c3cb51bd5ba4ec59cc,0,"CFITSIO.pm","A Perl module incorporating the CFITSIO library has been developed using XS wrappers. Most useful CFITSIO calls have direct Perl counterparts. Users will need the C version of CFITSIO to link to.","http://search.cpan.org/~pratzlaff/Astro-FITS-CFITSIO-1.10/CFITSIO.pm","http://search.cpan.org/~pratzlaff/Astro-FITS-CFITSIO-1.10/","William D. Pence"
409,6af3d4a7353db4e840fde7a792e824fb,0,"PDL FITS capabilities","A FITS reader is provided within the Perl Data Language module.  It handles FITS images and binary tables. PDL is a Perl module providing mechanisms to manipulate arrays of data efficiently.","http://www.cpan.org/modules/by-module/PDL/Data-Frame-0.003.tar.gz","http://www.cpan.org/modules/by-module/PDL/","William D. Pence"
410,e8b4c8c5b5305a19d071a164435dde4f,0,"MFITSIO","Damian Eads (at Los Alamos at that time) wrote a MatLab interface to the CFITSIO library using a tool called 'mex'. MFITSIO supports reading and writing FITS images, image subsets, and headers. (UPDATE, June 2013: MFITSIO is no longer available from the Los Alamos web site, however, the last version (1.2.4) of the MFITSIO source code .tar file has been retrieved from the Internet Archive WayBack Machine and made available here. The mfitsio interface has not been maintained for many years, and some users have reported problems with installing the software.)","http://fits.gsfc.nasa.gov/software/mfitsio-1.2.4-src.tar.gz","http://fits.gsfc.nasa.gov/fits_libraries.html#mfitsio","William D. Pence"
411,b26a9558438e8f53786a784cf2a8ca57,0,"GFITSIO","George Gatling (NRL, email = george.gatling  'at' nrl.navy.mil) wrote an interface to the CFITSIO library for LabVIEW 2013 or later under Microsoft Windows . It supports reading and writing FITS images and ASCII and binary tables.","http://fits.gsfc.nasa.gov/software/gfitsio_v5.2_Apr_2014.zip","http://fits.gsfc.nasa.gov/fits_libraries.html#LabVIEW","William D. Pence"
412,3abde11fe7ee518119fb5f632b77fdea,0,"PyFITS","PyFITS is a set of Python modules which read and write most FITS formats.","http://docs.astropy.org/en/stable/io/fits/index.html#module-astropy.io.fits","http://www.stsci.edu/institute/software_hardware/pyfits/","William D. Pence"
413,d2274b62e46c3f46efc5dc4c0b37ee7e,0,"Python/fitsio","fitsio is a full featured python library to read and write data to FITS files. This is a python extension written in c and python. Data are read into numerical python arrays. A version of cfitsio is bundled with this package, which is used, in particular, to read and write images in tile-compressed format.","https://github.com/esheldon/fitsio","https://github.com/esheldon/fitsio","William D. Pence"
414,d1ae8a92e78eac24743404673665da5f,0,"PFITS","This package uses the CFITSIO library to interface to FITS files from Python. Particular attention has been paid to supporting ASCII and BINARY tables with fixed and variable-length entries. Data I/O is handled through numpy arrays. Note: this library appears to not have been updated since 2009 and may no longer be supported.","https://pypi.python.org/packages/source/p/pfits/pfits-0.0.2.tar.gz","https://pypi.python.org/pypi/pfits","William D. Pence"
415,7fb229d074ff7b64c3fc3b09a69257e7,0,"fitsio","FITSio is a contributed R package for reading and writing FITS images and reading binary tables within the R software environment. It has no dependencies other than the base R installation. The FITSio contributed package source code is available directly from the R project web site under the 'contributed extension packages' link.","http://www.astro.umd.edu/~harris/r/FITSio_2.0-0.zip","http://fits.gsfc.nasa.gov/fits_libraries.html#Rlang","William D. Pence"
416,7ed5aabfb23c954b23850d42c8ecd90c,0,"ESA/ESO/NASA FITS Liberator","Liberator is a free plug-in for Adobe Photoshop or Photoshop Elements 2 for manipulating FITS images with those programs. A color composite 'Action' file is also available to simplify the process of creating color composite images from 3 separate red, green, and blue images.","https://www.spacetelescope.org/static/projects/fits_liberator/v301files/FITSLiberator3.zip","http://www.spacetelescope.org/projects/fits_liberator/","William D. Pence"
417,e4453f4eb0cc80f9428e443ba789e0cd,0,"golang fits reader","Package fits reads and processes FITS files. It is written in pure golang and is not a wrapper around another library or a direct translation of another library to golang. The main purpose is to provide a native golang solution to reading FITS file and to assess the suitability of golang for scientific and numerical applications.","https://github.com/siravan/fits","https://github.com/siravan/fits","William D. Pence"
418,57f2962f23af01d121d668feae6b26fc,0,"golang wrapper","A set of CGo bindings to some of the most commonly used routines in the CFITSIO library (written in C).","https://github.com/astrogo/cfitsio","https://github.com/astrogo/cfitsio","William D. Pence"
419,c302981678c290b529b8507b19edd31f,0,"native golang fits package","Go package to read and write FITS files. It is written in pure golang and is not a wrapper around another library.","https://github.com/astrogo/fitsio","https://github.com/astrogo/fitsio","William D. Pence"
420,e0db1d3ac60851f21b2d44b289ece473,0,"ALIAS","The Advanced Land Image Assessment Systems (ALIAS) supports radiometric and geometric image processing for the Advanced Land Imager (ALI) instrument on board NASA’s Earth Observing-1 (EO-1) satellite. ALIAS consists of two processing subsystems for radiometric and geometric processing of the ALI’s multispectral imagery. The radiometric processing subsystem characterizes and corrects, where possible, radiometric qualities including: detector operability; gain; bias; coherent, impulse and random noise; signal-to-noise ratios (SNR); saturation levels; striping and banding; and the stability of detector performance. The geometric processing subsystem and analysis capabilities support sensor alignment calibrations; sensor chip assembly (SCA)-to-SCA alignments and related issues; geodetic accuracy assessments; modulation transfer function (MTF) characterizations; and perform image-to-image characterizations. The ALIAS also characterizes and corrects band-to-band registration, and performs systematic, precision and terrain correction of ALI images. The ALIAS can geometrically correct and automatically mosaic the SCA image strips into a seamless, map-projected image. The ALIAS was developed through collaboration between NASA and the U.S. Geological Survey (USGS).","https://opensource.gsfc.nasa.gov/projects/Alias/alias2_1.tar","https://opensource.gsfc.nasa.gov/projects/Alias/Alias.zip","Vicki Zanoni"
421,8fc0fe2f4b31b7fc460597c6e3dd9b62,0,"Assert-Based Unit Test Tools (UT-Assert)","The ut-assert unit test tools provide a unit test framework and a collection of utilities that are designed to facilitate unit testing.","https://opensource.gsfc.nasa.gov/projects/ut-assert/ut-assert%20v1_0%2011-24-14.zip","https://opensource.gsfc.nasa.gov/projects/ut-assert/index.php","David McComas"
422,b39f72a9301e1c5771e4879d41f7c075,0,"CEOP Satellite Data Server","A gateway using OPeNDAP, implemented as a plug-in to the Hyrax server, for accessing WCS data.","https://opensource.gsfc.nasa.gov/projects/CEOP/CEOP.tar.gz","https://opensource.gsfc.nasa.gov/projects/CEOP/index.php","Christopher Lynnes"
423,134cf19dd77c6278986dec852c9200aa,0,"Core RHSEG Software Package","The RHSEG software provides hierarchical segmentation (pre-processing) of image and image-like data. The software significantly improves the extraction of patterns from complex data sets and is optimized for speed and accuracy. This algorithm provides the user with precise control for selecting the desired level of detail from the hierarchy of results.","https://opensource.gsfc.nasa.gov/projects/HSEG/core_rhsegV1.47.tar.gz","https://opensource.gsfc.nasa.gov/projects/HSEG/index.php","James Tilton"
424,6341a07847dc31bd69468ac8fb72e3fb,0,"Data Quality Screening Service (DQSS)","The Data Quality Screening Service (DQSS) is designed to help automate the filtering of remote sensing data on behalf of science users.","https://opensource.gsfc.nasa.gov/projects/DQSS/dqss_64.tar","https://opensource.gsfc.nasa.gov/projects/DQSS/index.php","Christopher Lynnes"
425,b0998f2c600a04f5f6763b639dadd6d6,0,"ECS Metadata Validator","The ECS Schema Validation tool validates an XML Document based on the BMGT Granule or Collection Schema, and generate reports listing all invalid elements.","https://opensource.gsfc.nasa.gov/projects/ECS_Metadata_validate/schemavalidator.zip","https://opensource.gsfc.nasa.gov/projects/ECS_Metadata_validate/index.php","Richard Ullman"
426,8b5244e32eda873e17930455b298f663,0,"EDG","The Earth Observing System Data Gateway (EDG) was developed in response to the earth science community's need for a one-stop-shopping interface to search for data and order data granules from distributed data archives. This innovation enables users to explore, discover, and order available data from geographically distributed data providers through a standard interface.","https://opensource.gsfc.nasa.gov/projects/edg/edg.zip","https://opensource.gsfc.nasa.gov/projects/edg/index.php","Robert Harberts"
427,d198067f63047b5affe0c3f71b32be31,0,"Forecast Model Web Map Service (NFMW)","The NFMW reads Earth science models and produces web pages that display the desired area, time, and elevation, using WMS (Web Map Service).","https://opensource.gsfc.nasa.gov/projects/NFMW/nfmw-20081204.zip","https://opensource.gsfc.nasa.gov/projects/NFMW/index.php","Eric Sokolowsky"
428,1a6084023ccf4a19fc278b913e4d6efb,0,"Global Precipitation Mission (GPM) Visualization Tool for Validation Network Geometrically-Matched Ground- and Space-based Radar Data","The GPM displays grand- and space-based radar observations for easy comparison and validation. Inteded for meteorologists and other sciences; not end users.","https://opensource.gsfc.nasa.gov/projects/GPMV/GPM_VN_visualization_master.tar","https://opensource.gsfc.nasa.gov/projects/GPMV/index.php","Mathew Schwaller"
429,9c9a03282deb8ca5f2783af0d2de5b20,0,"Global Precipitation Radar (GPM) Space and Ground Radar Comparison","The GPM Collects various data sets from TRMM spacecraft, re-samples it, and generates statistics.","https://opensource.gsfc.nasa.gov/projects/GPM/GPMGV_VN_IDL_CODE.tar","https://opensource.gsfc.nasa.gov/projects/GPM/index.php","Mathew Schwaller"
430,fef1a3217ee5b80f7d636d2f247f42a3,0,"HDF-EOS Metadata Updater","HDF-EOS Metadata Updater updates metadata inside an HDF-EOS file.","https://opensource.gsfc.nasa.gov/projects/hemu/HEMU.zip","https://opensource.gsfc.nasa.gov/projects/hemu/index.php","Richard Ullman"
431,276e667dd1ac4f9aa89408ac5fe2d3fd,0,"HDF-EOS to netCDF Convertor","The HDF-EOS to netCDF Convertor takes an HDF-EOS dataset and outputs a netCDF file that preserves as much as possible of the dataset's data and metadata using the CF conventions for netCDF.","https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/hdfeos5-netcdf.tar","https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/index.php","Richard Ullman"
432,168fae876fc9715464346232b993cd8c,0,"HDF-EOS Web Server","The HDF-EOS Web Server converts HDF-EOS metadata into human-readable HTML and publishes it to a local web server (which must be pre-configured).","https://opensource.gsfc.nasa.gov/projects/heserve/heserve.zip","https://opensource.gsfc.nasa.gov/projects/heserve/index.php","Richard Ullman"
433,35c28923c6301938042387adca975a86,0,"HDFEOS XML DTD and Schemas","The HDFEOS XML DTD and Schemas is a set of DTD and schemas for HDFEOS files.","https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/schemavalidator.zip","https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php","Richard Ullman"
434,b4ad9d3e0d18ffaec0017edfcf6d4986,0,"HDFView HDF-EOS Plug-in","This is a Java language software plug-in to The HDF Group's (formerly of NCSA at University of Illinois at Urbana-Champaign) HDFView which provides an HDF-EOS interface for both versions of HDF (4 and 5) of HDF-EOS. Browse and edit functions are provided.","https://opensource.gsfc.nasa.gov/projects/HDF/HDF.zip","https://opensource.gsfc.nasa.gov/projects/HDF/index.php","Dan Marinelli"
435,f46cc4179598a94bbfb7a36d9adf5bf3,0,"MINX","MINX, which stands for MISR INteractive eXplorer, is an interactive visualization and analysis program written in IDL and designed to make MISR data more accessible to science users. Its principal use is to retrieve heights and motion for aerosol plumes and clouds using stereoscopic methods.","https://github.com/nasa/MINX","http://misr.jpl.nasa.gov/","David Nelson"
436,bace2e723e804686db5d9cc06458aaa4,0,"PO.DAAC Tools and Services","A meta-repository which essentially lists code related to all tools and services software for NASA JPL's PO.DAAC","https://github.com/nasa/podaac_tools_and_services","https://github.com/nasa/podaac_tools_and_services","lewismc"
437,60552e26a9407320da610899ff75b506,0,"OpenMDAO: testflo","A simple python testing framework that can run unit tests under MPI (or not).","https://github.com/OpenMDAO/testflo","https://github.com/OpenMDAO/testflo/archive/master.zip","naylor-b"
438,53f30bb1eb9be26394fd69207876c16f,0,"OpenMDAO","OpenMDAO is a high-performance computing platform for systems analysis and optimization that enables you to decompose your models, making them easier to build and maintain, while still solving them in a tightly-coupled manner with efficient parallel numerical methods.","https://github.com/OpenMDAO/OpenMDAO","https://github.com/OpenMDAO/OpenMDAO/archive/master.zip","naylor-b"
439,a7c81e04c96de9819b1a2230e4bd0e86,0,"OpenMDAO: benchmark","Prototype of a benchmarking/regression tool.","https://github.com/OpenMDAO/benchmark","https://github.com/OpenMDAO/benchmark/archive/master.zip","swryan"
440,12cf2e9ea5187e65ffa8d447c07e7f99,0,"OpenMDAO: Cadre","OpenMDAO plug-in.","https://github.com/OpenMDAO/CADRE","https://github.com/OpenMDAO/CADRE/archive/master.zip","swryan"
441,8ecf66cccdbf5fe6524e7011fe8c26b7,0,"OpenMDAO: NRELTraining","An old problem used for NREL Training, converted to OpenMDAO 1.x","https://github.com/OpenMDAO/NRELTraining","https://github.com/OpenMDAO/NRELTraining/archive/master.zip","jcchin"
442,e4a740f85d86d3debb1497ccce395e55,0,"OpenMDAO: MBI","MBI sub-branch of the OpenMDAO repository.","https://github.com/OpenMDAO/MBI","https://github.com/OpenMDAO/MBI/archive/master.zip","hwangjt"
443,8fb5f54b4f87978006f31080c54b1d37,0,"OpenMDAO: flops_wrapper","OpenMDAO component wrapper for FLOPS.","https://github.com/OpenMDAO/flops_wrapper","https://github.com/OpenMDAO/flops_wrapper/archive/master.zip","fcapristan"
444,e0e19633e48dbfb15564ab69437d2acc,0,"OpenMDAO: OpenMDAO-Framework","A python based open-source (Apache 2.0) engineering analysis framework designed to facilitate the use of MDAO. To add issues, visit our user forums at http://www.openmdao.org/forum . NOTE: this version is no longer being developed. The current active version can be found here: https://github.com/OpenMDAO/OpenMDAO.","https://github.com/OpenMDAO/OpenMDAO-Framework","https://github.com/OpenMDAO/OpenMDAO-Framework/archive/dev.zip","naylor-b"
445,56535cb476616fc4faafb207fdf16a44,0,"OpenMDAO: OpenMDAO-Procedures","Procedures for OpenMDAO maintainers.","https://github.com/OpenMDAO/OpenMDAO-Procedures","https://github.com/OpenMDAO/OpenMDAO-Procedures/archive/master.zip","kmarsteller"
446,561feb641671e81841959827f216c146,0,"OpenMDAO: OpenMDAO-airline-allocation","Airline allocation problem.","https://github.com/OpenMDAO/airline-allocation","https://github.com/OpenMDAO/airline-allocation/archive/master.zip","swryan"
447,f85450191e144fdd1df071853d3b1103,0,"OpenMDAO: openmdao_testapp","Web app to manage openmdao automated testing.","https://github.com/OpenMDAO/openmdao_testapp","https://github.com/OpenMDAO/openmdao_testapp/archive/master.zip","swryan"
448,b0bff3b7a71b9a2adc5d14b71c3421e3,0,"OpenMDAO: marathon-aircraft","Aero-Velo Marathon Aircraft.","https://github.com/OpenMDAO/marathon-aircraft","https://github.com/OpenMDAO/marathon-aircraft/archive/master.zip","treforevans"
449,24aa65b232e9f42690e6292aebe9dab2,0,"OpenMDAO: pyV3D","Python web-based geometry viewer.","https://github.com/OpenMDAO/pyV3D","https://github.com/OpenMDAO/pyV3D/archive/master.zip","treforevans"
450,8f3e682eb286eb807845423721d0dee3,0,"OpenMDAO: pygem","Python wrappers for the GEM libraries diamond and quartz.","https://github.com/OpenMDAO/pygem","https://github.com/OpenMDAO/pygem/archive/master.zip","naylor-b"
451,0483859ca95c490eeedfa2ae970b48a5,0,"OpenMDAO: GEM","Geometry Environment for MDAO.","https://github.com/OpenMDAO/GEM","https://github.com/OpenMDAO/GEM/archive/master.zip","naylor-b"
452,e97a68e2386cd46f67d9f5e13ab53cfa,0,"OpenMDAO: EGADS","EGADS: Engineering Geometry Aerospace Design System.","https://github.com/OpenMDAO/EGADS","https://github.com/OpenMDAO/EGADS/archive/master.zip","haimes"
453,d40cd8cbade35f7665ad758753f99842,0,"OpenMDAO: SimplePylab","Simple script to create virtual environment with numpy, scipy, matplotlib and ipython.","https://github.com/OpenMDAO/SimplePylab","https://github.com/OpenMDAO/SimplePylab/archive/master.zip","kmarsteller"
454,5b9f0cdf1fcc34a30aedcf8e269973da,0,"OpenMDAO: EngSketchPad","ESP: The Engineering Sketch Pad.","https://github.com/OpenMDAO/EngSketchPad","https://github.com/OpenMDAO/EngSketchPad/archive/master.zip","JustinSGray"
455,d3480f0c3134a487d04c13765afd97f6,0,"C++ Random Variable Library","The RandomVariable Library is an C++ open source library for representing statistical uncertainty in a precise, readable, and usable manner. Value uncertainty can be represented with a parametric distribution such as Gaussian or a nonparametric distribution such as a weighted sample set. The library enables sampling from a parametric or fitting to a parametric distribution. Calculations may also be performed on multiple RandomVariable objects by sampling/overlaying techniques.","https://github.com/nasa/RVLib","https://github.com/nasa/RVLib/archive/master.zip","cullo7"
456,b060454826c10a0321a49823ba7325d9,0,"OpenVSP3Plugin","The OpenVSP3Plugin is a JAVA software tool that allows for the interface between OpenVSP and an analysis framework such as Phoenix Integration’s ModelCenter or the NASA developed OpenMDAO software. The OpenVSP3Plugin is designed to work on any computer desktop platform (Mac, Linux, and Windows) that has a local installation of JAVA.","https://github.com/nasa/openvsp3plugin","https://github.com/nasa/openvsp3plugin","jrwelstead"
457,dc42c34d173e210d7cae9de58fe56398,0,"Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI)","Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots. It also creates a true color image.","https://github.com/NASA-DEVELOP/CBCHI","https://software.nasa.gov/software/LAR-18794-1","larc-sra@mail.nasa.gov"
458,03b2e00dfff416d3b8c0a415792690a5,0,"The Goddard Fortran Template Library","This project provides Fortran templates for defining software containers.   Of necessity the capabilities are a bit manual as compared to C++ STL, but still quite useful.  Container types supported for now are Vector, Set, and Map.   Contained objects can be specified as any intrinsic type or derived type.   This includes deferred length strings and/or unlimited polymorphic entities.   The container can contain a single static type or allow for subtypes.   In the polymorphic case, the container can either keep deep copies (allocatable) or shallow references (pointer).","https://github.com/Goddard-Fortran-Ecosystem/gFTL","https://github.com/Goddard-Fortran-Ecosystem/gFTL/wiki","tclune"
459,24638ed3f7471e15020529aac0b4a23c,0,"SAFE-DART","Software Architecture Framework for Extensibility using Dynamic Assembly of Reflective Types (SAFE-DART) is a framework for Qt-based C++ applications which simplifies the process of writing modular object-oriented code.","https://github.com/nasa/SAFE-DART","https://github.com/nasa/SAFE-DART","JordanRHiggins"
460,205e9a2ba503335fe4212cc8f972f05b,0,"ISS Camera Geolocate","Python software library that facilitates the geolocation of photographs and video frames from the International Space Station (ISS).","https://github.com/nasa/ISS_Camera_Geolocate","https://github.com/nasa/ISS_Camera_Geolocate/wiki","tjlang"
461,bb9db53461b1fe3f190c306172b2d91d,0,"GFR","GFR (Glenn Flux Reconstruction) is a high-order computational fluid dynamics (CFD) Fortran code for large-eddy simulations. It is based on the simple and efficient flux reconstruction method and accurate to arbitrary order through a user-supplied input parameter. It is currently capable of using unstructured grids containing quadrilateral and hexahedra elements. The current release only supports UNIX-like operating systems.","https://github.com/nasa/gfr","https://github.com/nasa/gfr","scspiegel"
462,6416216b387fde20d780d5b39381e3b3,0,"MISR View","misr_view is a graphical user interface-driven display and analysis tool for use with MISR files that use the HDF-EOS 'grid' interface. The display and analysis tools include simultaneous display of several data planes through color assignment, contrast enhancement, pseudo coloring, data value query, image rotation, creation of stereo anaglyphs, zooming, linked analysis and view windows, vector overlays and map projections.","https://github.com/nasa/MISR-View","http://misr.jpl.nasa.gov/","Charles Thompson"
463,fa1eeb9e97017af94418fabd3c9d84c0,0,"Apache SensSoft (Incubating) UserALE.js","Apache SensSoft is a user activity logging and analytics system that enables developers to instrument and extract design and user insights from their applications. SensSoft incorporates a number of components that work together to provide user-experience researchers, project managers and software developers insights about how web applications are used. UserALE.js is an open source tool to quickly and efficiently instrument a JavaScript frontend application.","http://senssoft.incubator.apache.org/releases/","http://senssoft.incubator.apache.org/","Lewis.J.Mcgibbney@jpl.nasa.gov"
464,69dd2b5d22cba0a99a8dca84dfd61ade,0,"SWEET Ontology Suite","Apache SensSoft is a user activity logging and analytics system that enables developers to instrument and extract design and user insights from their applications. SensSoft incorporates a number of components that work together to provide user-experience researchers, project managers and software developers insights about how web applications are used. UserALE.js is an open source tool to quickly and efficiently instrument a JavaScript frontend application.","https://github.com/ESIPFed/sweet","https://github.com/ESIPFed/sweet","Lewis.J.Mcgibbney@jpl.nasa.gov"
465,6f80f8584c17f8eee84b669505a06d7c,0,"LCD","The Normalized Difference Vegetation Index (NDVI) for the study time period is calculated and then compared to the maximum and minimum NDVI from a baseline range of years in order to calculate Relative Greenness (RG). The change in RG from the previous year is found, and this allows the user to identify abrupt change in vegetation.","https://github.com/NASA-DEVELOP/LCD","https://github.com/NASA-DEVELOP/LCD","jordan.s.vaa@nasa.gov"
466,6ba7805eee6f352d1082c9cb4de73343,0,"LUCT","We used the Google Earth Engine Code interface to create a classification of land use on the United States Virgin Islands (USVI). We used six classes: water, low density residential, high-density residential, forest/shrub, agriculture and barren. We included DEM, classification points, and landsat imagery bands to analyze the imagery.","https://github.com/NASA-DEVELOP/LUCT","https://github.com/NASA-DEVELOP/LUCT","JDilger"
467,9bbd22155aa141b45f408f06d6836f6c,0,"SET","Beta version of the Skyglow Estimation Toolbox. Documentation -> https://nasa-develop.github.io/SET/","https://github.com/NASA-DEVELOP/SET","https://github.com/NASA-DEVELOP/SET","rba.eos@gmail.com"
468,0cd34e0fbee55be4e26b846a5b68b8c3,0,"COVER","This code develops calibration models using linear regression models with in-situ field data. The calibration models are then used to predict biomass (log), nitrogen percent, and nitrogen content for Landsat images from 2006-2016. Model results and data tables are output as separate files for each field season (i.e. winter and spring seasons).","https://github.com/NASA-DEVELOP/COVER","https://github.com/NASA-DEVELOP/COVER","jordan.s.vaa@nasa.gov"
469,b14b7e6972efcd210ed2585f64ae1612,0,"WRIT","For the AcoFixDual_Tool: Geolocates and rescales ACOLITE output to make it useful in ArcMap.","https://github.com/NASA-DEVELOP/WRIT","https://github.com/NASA-DEVELOP/WRIT","jordan.s.vaa@nasa.gov"
470,5c84c30c33be0e2e4eaabbc3dc997b0f,0,"SAVeTrEE","SAVeTrEE is a script within Google Earth Engine for classifying areas of vegetation mortality. It prompts the user for a year, duration, and spectral index for which a mortality map should be produced, then fits a trend line to an imagery time sequence of vegetative spectral index values calculated from Landsat multispectral data.","https://github.com/NASA-DEVELOP/SAVeTrEE","https://github.com/NASA-DEVELOP/SAVeTrEE","jordan.s.vaa@nasa.gov"
471,2e366f50b7115b2990d355e88c468d17,0,"RIFRAF","This software was created to address concerns of fire managers in the Missouri River Basin. Previously, fire managers inferred a regional fire risk from separate sources, (i.e. temperature maps, drought indices, and precipitation averages).","https://github.com/NASA-DEVELOP/RIFRAF","https://github.com/NASA-DEVELOP/RIFRAF","jordan.s.vaa@nasa.gov"
472,a46a3b44bd6bc33fe3edf604a5755d68,0,"HAE","Using the cloud-based computing power of Google Earth Engine (GEE), the Hydrologic Anomaly Index (HAE) is capable of uploading and analyzing large amounts of Earth observation climate data for the purpose of hydrologic analysis and monitoring. The end-user will be able to pull from and modify a library of scripts that are stored in Earth Engine, as well as upload and access data stored on a private data catalog. The final stage of development of the tool will include a more user-friendly application built using Google’s App Engine, in which users will be able to display data products and interactive maps.","https://github.com/NASA-DEVELOP/HAE","https://github.com/NASA-DEVELOP/HAE","jordan.s.vaa@nasa.gov"
473,cbd372b29c76ef9704e6f2c255ed4e4d,0,"CCROP","Cover Crop Remotely Observed Performance (CCROP): The Maryland Department of Agriculture (MDA) is interested in verifying winter cover crop implementation and analyzing cover crop productivity using satellite imagery.","https://github.com/NASA-DEVELOP/CCROP","https://github.com/NASA-DEVELOP/CCROP","jordan.s.vaa@nasa.gov"
474,5facc0d575c52b91c4c109234def8f3d,0,"FAULT","Flood Analysis Utilizing Landsat and ArcMap Tools (FAULT): This product was created in an effort to automate flood analysis throughout the Mississippi River Basin.","https://github.com/NASA-DEVELOP/FAULT","https://github.com/NASA-DEVELOP/FAULT","jordan.s.vaa@nasa.gov"
475,d605d4784150226319006824261bfd66,0,"tiledwms","Tiled WMS is a software package consisting of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The software was originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool (http://podaac-tools.jpl.nasa.gov/soto/), the Lunar Mapping and Modeling Project (LMMP) (http://lmmp.nasa.gov), and GIBS. Tiled WMS has also been used to serve data from JPL for NASA WorldWind and to produce movies at the Hayden Planetarium.","https://github.com/nasajpl/tiledwms","https://github.com/nasajpl/tiledwms","jtroberts"
476,c6adde7f5409806c88a04f855b8cbe56,0,"T-ENTacle","Extracting structured information from PDFs - and later, diagrams","https://github.com/nasa-jpl/T-ENTacle","https://github.com/nasa-jpl/T-ENTacle","wmb@waynemosesburke.com"
477,8ff7d1bf22b3fe4bf732b0e40bc798a6,0,"ASSESS","Automatic Semantic Search Engine for Suitable Standards (ASSESS)","https://github.com/nasa-jpl/ASSESS","https://github.com/nasa-jpl/ASSESS","wmb@waynemosesburke.com"
478,f542e5ef0dff0dce00caf3f5bda73392,0,"LiveView","LiveView2 is a Qt frontend GUI for cuda_take, it displays focal plane data and basic analysis (such as the std. dev, dark subtraction, FFT, Spectral Profile, and Video Savant*-like* playback). Plots are implemented using the QCustomPlot library, which generates live color maps, bar graphs, and line graphs within the Qt C++ environment.","https://github.com/nasa-jpl/LiveView","https://github.com/nasa-jpl/LiveView","Elliott Liggett"
479,acc3196557a77349b0219dae3e2afa73,0,"Ontology Analysis","The ontology analysis workflow is intended for validating ontologies based on the core IMCE ontologies. It uses OWL ontologies (TODO: OML AS INPUT) as input, and produces test reports in the quasi-standard JUnit format. The following will walk through the environment setup, and give instructions on how to run the workflow (a) locally and (b) on a CI system such as Jenkins.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analysis","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analysis","StevenJenkinsJPL"
480,bdb5ef3ef61d092c67ab7d8174343402,0,"Ontology Public","JPL's IMCE ontologies for Model-Based Systems Engineering","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.public","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.public","StevenJenkinsJPL"
481,16df80d46f3732bfb901dc419bb6024c,0,"Ontology Workflow","The ontology processing and profile generation workflow is intended for validating and generating MagicDraw-compatible SysML profiles for core IMCE ontologies. It uses OWL ontologies (TODO: OML AS INPUT) as input. The following will walk through the environment setup, and give instructions on how to run the workflow (a) locally and (b) on a CI system such as Jenkins.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.workflow","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.workflow","StevenJenkinsJPL"
482,a3b43c1a1ad32fe9d3709253c9960ea1,0,"Ontological Modeling Language (OML) Platform & Core Features","Eclipse Tycho-based organization of the Ontological Modeling Language (OML)","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml","NicolasRouquette"
483,09daa40b034f5035f6b3e37d6fd564e3,0,"Normalized Database Schema Tables for JPL's Ontological Modeling Language (OML)","Definition of the normalized schema tables for JPL's Ontological Modeling Framework (OMF) at https://jpl-imce.github.io/gov.nasa.jpl.imce.oml.tables/.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.tables","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.tables","NicolasRouquette"
484,0f29ed9d51ad125616ccb0031d50d079,0,"Xtend generators for JPL's Ontological Modeling Framework (OMF)","The Xcore OMF metamodel/schema is intended to be a single source for several derived artifacts whose contents is a projection of the OMF metamodel/schema. Among such artifacts, the cross-platform normalized database schema tables provide a single source specification for normalized database schema tables cross-compiled for several environments, including JVM (pure Java, pure Scala, mixed Java+Scala), JavaScript (Node.js), mixed (ScalaJS).","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.development.generators","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.development.generators","NicolasRouquette"
485,2fc86995a7d725d90b8ceb1cc8cc42c8,0,"gov.nasa.jpl.imce.xml.catalog.scope","This is an enhancement of the Apache XML Commons Resolver library implementation of the OASIS XML Catalog 1.1 specification. OML uses an OASIS XML Catalog to establish a mapping between external URI references (i.e., http URIs) and corresponding local URI references (i.e., file URIs). Stanford's Protege Desktop uses OASIS XML Catalogs for the same purpose.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.xml.catalog.scope","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.xml.catalog.scope","NicolasRouquette"
486,84adf3cafe9ac6b92a3695c0ccbaea6b,0,"Scala/Frameless-based API for the Ontological Modeling Language","This Scala library provides a strongly typed API for processing Ontological Modeling Language data on Apache Spark using the expressive type extensions provided by Frameless.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.frameless","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.frameless","NicolasRouquette"
487,11188f8d6af760e5569338d4067ba15c,0,"OWL API binding for OMF (Ontological Modeling Framework)","The OWL API binding for OMF implements the OMF Core functional API using the OWL API. This particular binding captures the conventions and restrictions on the use of OWL2-DL adopted for the development of JPL's Integrated Model-Centric Engineering (IMCE) ontologies.","https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.binding.owlapi","https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.binding.owlapi","NicolasRouquette"
488,34f3de210b2bb1bbdf8c84b6a33847fc,0,"OMF (Ontological Modeling Framework) Core Functional API","The OMG core functional API adopts techniques from the field of functional programming languages, particularly Scala, for specifying the vocabulary of ontological modeling as a set of abstract types (that is, no commitment implied or assumed about any implementation of these abstract types) and a set of functional operations on these abstract types (that is, operations in the mathematical sense of pure functions that compute output values based on input values). This functional paradigm for specifying a domain allows a clean separation between the domain of ontological modeling (i.e., the focus of the OMF Core Functional API) from specific bindings for standards-based technology frameworks such as W3C's OWL, OMG's UML/SysML and, potentially, others. More importantly, the functional nature of this OMF Core API allows decoupling algorithms for analyzing, constructing, auditing, verifying, reasoning about OMF ontological models independently of the particular technology in which these ontological models are represented.","https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.core","https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.core","NicolasRouquette"
489,339e5ae7ae3071c6c0a361431313ae9b,0,"Symbol table resolver for the JSON serialization of JPL's Ontological Modeling Framework Schema.","This library provides an implementation of the OML Resolver API.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.resolver","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.resolver","NicolasRouquette"
490,9ae25b17bc859c39850e5fbf438989bd,0,"JPL's Ontological Modeling Language Specification Document","The documentation about the Ontological Modeling Language specification","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.doc","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.doc","NicolasRouquette"
491,c2c30d3645955a081b858eea874ac31f,0,"Configuration for setting up a Fuseki server for the IMCE ontology workflows","Configuration for setting up a Fuseki server for the IMCE ontology workflows","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.fuseki","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.fuseki","NicolasRouquette"
492,e59f3945bc8bc643c50ee05d686be7f4,0,"IMCE Third-Party Other Scala Libraries","Aggregate of Akka, Play, Scalaz, ScalaCheck, ScalaTest, Spray libraries","https://github.com/JPL-IMCE/imce.third_party.other_scala_libraries","https://github.com/JPL-IMCE/imce.third_party.other_scala_libraries","NicolasRouquette"
493,01f3c444902c810c491f777b307dc02f,0,"JPL's IMCE SBT Plugin for Java, Scala, AspectJ projects","This sbt plugin aggregates a few community plugins used across several projects in JPL's Integrated Model-Centric Engineering initiative and in OMG's Tool Infrastructure Working Group. There is an inherent tradeoff between maintaining slight variations of similar build configurations across multiple projects (i.e. no common sbt plugin) and defining a common sbt plugin reused across multiple projects to simplify their build configurations. Conceptually, the scope and purpose of this sbt plugin is very similar to the elegant nice-sbt-settings. Practically, nice-sbt-settings is indeed nicer.","https://github.com/JPL-IMCE/imce.sbt.plugin","https://github.com/JPL-IMCE/imce.sbt.plugin","NicolasRouquette"
494,6dde65e7975eced337a738b3ae06cf37,0,"IMCE Third-Party OWLAPI Libraries","This project builds an aggregate of the OWL API published by several organizations, including: net.sourceforge.owlapi (the official OWL API as the de-facto reference implementation of the W3C OWL Functional Syntax Specification), and org.openrdf.sesame (the Eclipse RDF4J Sesame implementation of W3C Resource Description Framework, RDF)","https://github.com/JPL-IMCE/imce.third_party.owlapi_libraries","https://github.com/JPL-IMCE/imce.third_party.owlapi_libraries","NicolasRouquette"
495,e71e8b12df6542c7cf20621c16c022d9,0,"IMCE Third-Party Scala Graph Libraries","This project builds an aggregates of several Scala libraries for graph data structures published by several organizations: com.assembla.scala-incubator (In-memory graph library intended to fit seamlessly into the Scala Collection Library), and net.liftweb (The JSON library from the Lift web framework for Scala).","https://github.com/JPL-IMCE/imce.third_party.scala_graph_libraries","https://github.com/JPL-IMCE/imce.third_party.scala_graph_libraries","NicolasRouquette"
496,6efb6d0f01da0e88b8b853a85fd8e8fc,0,"gov.nasa.jpl.imce.ontologies.loadprod","There is no description for this software","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analyzed","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analyzed","none listed"
497,1e449cfd3194e8a2cf2f3838f807dc3a,0,"IMCE Dynamic Scripts plugin for MagicDraw 18","The IMCE Dynamic Scripts plugin is compatible with any edition of MagicDraw 18.0.","https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.plugin","https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.plugin","NicolasRouquette"
498,a50a8e1f07fe8c654737bf0ff97842ad,0,"Apache Open Climate Workbench 1.3.0","Apache Open Climate Workbench is an effort to develop software that performs climate model evaluation using model outputs from a variety of different sources the Earth System Grid Federation, the Coordinated Regional Climate Downscaling Experiment, the U.S. National Climate Assessment and the North American Regional Climate Change Assessment Program and temporal/spatial scales with remote sensing data from NASA, NOAA and other agencies. The toolkit includes capabilities for rebinning, metrics computation and visualization.","http://www.apache.org/dyn/closer.lua/climate/1.3.0/climate-1.3.0-rc1.zip","http://www.apache.org/dyn/closer.lua/climate/1.3.0/climate-1.3.0-rc1.zip","lewis.j.mcgibbney@jpl.nasa.gov"
499,d1381f6e4d60e8808196aa37da44478f,0,"Launcher for IMCE's MagicDraw DynamicScripts Plugin","This launcher application follows the guidelines for starting MagicDraw 18.5 in a configuration for running MagicDraw 18.5 with the IMCE DynamicScripts plugin for MagicDraw 18.5. installed outside of the MagicDraw installation folder.","https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.launcher","https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.launcher","NicolasRouquette"
500,321e69fad79a4e8ff98ea93cb9a2ca06,0,"IMCE MagicDraw Library for AspectJ-based MD API enhancements","To enable these enhancements at runtime in MD, this library uses the so-called load-time weaving strategy. AspectJ is an aspect-oriented extension to Java. Because AspectJ operates at the level of bytecode, it is also applicable to other languages like Scala that compile to the JVM.","https://github.com/JPL-IMCE/imce.magicdraw.library.enhanced_api#imce-magicdraw-library-for-aspectj-based-md-api-enhancements","https://github.com/JPL-IMCE/imce.magicdraw.library.enhanced_api#imce-magicdraw-library-for-aspectj-based-md-api-enhancements","NicolasRouquette"
501,7b4ea2812005be101a7f337d459e2e80,0,"JPL Dynamic Scripts Generic DSL","A textual DSL for specifying browser, diagram & contextualized actions in a modeling tool. This project defines a tool-neutral, generic DSL for specifying 'dynamic scripts'. A dynamic script specifies the location of a modeling function compiled for the JVM that can be invoked for modeling elements matching the applicability criteria specified in the script. The genericity of this DSL is that the applicability criteria can be specified in terms of references to tool-neutral identifiers of metaclasses, stereotypes and library types and the context where scripts are to be made available to users is specified in terms of generic notions of model browser and diagrams; user-interface notions that are widely common to graphical modeling tools.","https://github.com/JPL-IMCE/imce.dynamic_scripts.generic_dsl","https://github.com/JPL-IMCE/imce.dynamic_scripts.generic_dsl","NicolasRouquette"
502,cbeb6086b725b069d08a7c4e44e9ee0e,0,"Profile Generator - Batch Execution","This program will execute the profile generator application (gov.nasa.jpl.imce.profileGenerator.application), and will package the results. It depends on both the profile generator application and the ontology bundles produced.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.batch","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.batch","NicolasRouquette"
503,40c40970ba18e578cc7977d05678e0d3,0,"Ontology Processor","This repository contains the files required for creating a docker image with required software for ontology processing.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor","NicolasRouquette"
504,f6e293b2c6321bfb5b750c7052fa1227,0,"Mapping from OTI models to Generic OMF","This repository provides mapping from OTI models (i.e., OMG Tool-neutral Interface for UML) to generic OMF (Ontological Modeling Framework).","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor","NicolasRouquette"
505,8ac39a387f54af597e6bce5affd8a8e3,0,"Ontological Modeling Language core build (Xcore, Xtext, Xtend)","This repository provides simplified OML for exercising Xcore/Xtext/Xtend code generation and building using gradle.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.core","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.core","NicolasRouquette"
506,e14d0a4df0f5bfcd825ce2049447c570,0,"A MagicDraw DynamicScript application for executing the IMCE profile generator from OMF bundles","Generator from Ontological Modeling Framework (OMF) vocabularies to profiles extending UML/SysML","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application","NicolasRouquette"
507,9a97e97e4ae64f2e98a4906961ec1f3a,0,"IMCE Project Template","The IMCE Project Template is a Giter8 template project serving as the basis for new Scala projects within the IMCE build ecosystem. Meant for developers familiar with or new to the IMCE platform, this repository contains reference guides and general purpose build and publish scripts for integration with IMCE accounts on Travis CI, Bintray and Github.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.templates.scala.g8","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.templates.scala.g8","sjiherzig"
508,e53a7e0e2d9b9363dfab1415dd19336a,0,"Composite project for JPL's Integrated Model-Centric Engineering (IMCE) Ontological Modeling Language (OML) Specification","This is a multi-project of mostly Xcore/Xtext/Xtend sources used to generate several components (abstract syntax metamodel; concrete syntax parser, doc, ...). There are several Xtend-based code generators that produce Scala source code.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.specification.parent","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.specification.parent","NicolasRouquette"
509,261e7d270a21804dd8e0e989c61e1749,0,"ISO/IEC 80000 MagicDraw library resource from JPL's Integrated Model-Centric Engineering (IMCE)","This contains changes from previous versions. In IMCE.ISO80000-5 Thermodynamics::Units -- 'cubic metre ratio per pascasl' has a slot value: hasReducedFactors=false -- 'metre coefficient per kelvin' has a slot value: hasReducedFactors=false","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.metrology.isoiec80000.magicdraw.library","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.metrology.isoiec80000.magicdraw.library","NicolasRouquette"
510,ea04f932425903eb74d4d12e47e4ddf9,0,"IMCE Third-Party Jena Libraries","This project builds an aggregate of several Apache Jena libraries published by the following organizations: 1) org.apache.jena A Java framework for building Semantic Web & Linked Data applications 2) org.apache.httpcomponents Toolset of low-level Java components focused on HTTP and associated protocols 3) xerces XML parsers for Java.","https://github.com/JPL-IMCE/imce.third_party.jena_libraries","https://github.com/JPL-IMCE/imce.third_party.jena_libraries","NicolasRouquette"
511,a6430643b11537e25eab7f03fdb0af15,0,"Project Usage Integrity Checker for MagicDraw 18","Project Usage Integrity Checker for MagicDraw 18","https://github.com/JPL-IMCE/gov.nasa.jpl.magicdraw.projectUsageIntegrityChecker","https://github.com/JPL-IMCE/gov.nasa.jpl.magicdraw.projectUsageIntegrityChecker","NicolasRouquette"
512,48c79efa0e0dbf049b5ebb964e9c9172,0,"Configuration for Semmle Analysis of JPL's open-source projects","Configuration for Semmle Analysis of JPL's open-source projects","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.semmle","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.semmle","NicolasRouquette"
513,829b1af74cfa1dc548fb3519ea4ca41c,0,"Prototyping SPARK-based analysis of IMCE OMF Schema data","This is a prototype to explore SPARK idioms for loading & analyzing OMF Schema tabular data.","https://github.com/JPL-IMCE/imce.spark.data","https://github.com/JPL-IMCE/imce.spark.data","NicolasRouquette"
514,3495a1b191263c14782f97c3a5ce7dc7,0,"Profile Generator - Profile Model","Model for representing SysML profiles, used as an intermediate format in the profile generation process.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.profile","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.profile","NicolasRouquette"
515,199d132c5913dd5430b4883a64d3c987,0,"Profile Generator - Bundle Model","Model for representing digest bundles, used as an intermediate format in the profile generation process.","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.bundle","https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.bundle","NicolasRouquette"
516,acd9c1ee1c47316232dd81396dcc0e47,0,"IMCE Third-Party AspectJ Libraries","This project builds an aggregate of the AspectJ libraries published by the following organization: org.aspectj A seamless aspect-oriented extension to the Java programming language.","https://github.com/JPL-IMCE/imce.third_party.aspectj_libraries","https://github.com/JPL-IMCE/imce.third_party.aspectj_libraries","NicolasRouquette"
517,87dac757197890c2e198dea441dec653,0,"Dymos","Dymos is a library for solving general optimal control problems within the context of multidisciplinary optimization via the OpenMDAO multidisciplinary optimization framework.","https://github.com/OpenMDAO/dymos","https://github.com/OpenMDAO/dymos","robfalck"
518,d9e9bc479a54c9fde6af2b805ff4c8e9,0,"Simulation of Cryogenic Tank with Temperature Stratification","'Simulation of Cryogenic Tank with Temperature Stratification' is a MATLAB-based simulation of temperature stratification effects for cryogenic fluid in a tank. It is a reduced dynamical model describing temperature stratification effects driven by natural convection in a liquid hydrogen cryogenic tank. It accounts for storage, loading, and unloading of cryogenic fluid.","https://github.com/nasa/LH2Sim","https://software.nasa.gov/software/ARC-17900-1","Christopher Teubert"
519,b0b543ea3792ac9686624e7b552aaef5,0,"JWST Background Tools","jwst_backgrounds is a a simple program to predict the levels of background emission in JWST observations, for use in proposal planning. It accesses a precompiled background cache prepared by Space Telescope Science Institute. The background cache is hosted by the Mikulski Archive for Space Telescopes (MAST), so you need internet access to run the tool with the remote cache. It is possible to download the full background cache to your local machine. Instructions for downloading the background cache can be found at http://archive.stsci.edu/archive_news/2017/08-Aug/index.html#article1.","https://github.com/spacetelescope/jwst_backgrounds","https://jwst.stsci.edu/news-events/news/News%20items/the-jwst-backgrounds-tool-is-now-available","Klaus Pontoppidan"
520,37938ca63de8e846fa2d5fd70ffd00fb,0,"Perl 6 DBPg PostgreSQL module","PostgreSQL (https://www.postgresql.org) is an Open Source Relational Database Management System (RDBMS). It includes a C library (libpq) for interacting with the server over the network (https://www.postgresql.org/docs/10/static/libpq.html). This module provides a rich interface to the PostgreSQL libpq library for Perl 6. It includes capabilities for prepared query caching, database connection caching, exception handling, flexible type conversion (including Boolean, Date, DateTime, Byte Arrays, etc. as well as custom types), bulk data copy in and out, listen/notify, transactions, and cursors for large query processing.","https://github.com/CurtTilmes/perl6-dbpg","https://software.nasa.gov/software/GSC-18031-1","Curt Tilmes"
521,6e146d2a7ec55e6a482b51663bfe6662,0,"Perl 6 epoll","A simple wrapper exposing the Linux epoll(7) I/O event notification facility within Perl 6.","https://github.com/CurtTilmes/perl6-epoll","https://software.nasa.gov/software/GSC-18030-1","Curt Tilmes"
522,8c5e464fdf585ef31e8f25fa8f35faa8,0,"Fortran Template Library (gFTL) for managing collections of objects via software containers","This innovation creates the capability for Fortran software developers to routinely declare and use specialized software containers for arbitrary types of data. The capability is somewhat analogous to that of the C Standard Template Library but with important differences. Although the number of containers are expected to grow, the current supported cases are Vector, Map, and Set. Contained items can be of any intrinsic type or user-defined derived type. The user can also indicate that the contained objects are polymorphic and/or pointers with corresponding implications for the semantics of using those containers.","https://github.com/nasa/gFTL","https://software.nasa.gov/software/GSC-17742-1","tclune"
523,6fd6546ca14201372fc4377d882156f2,0,"General Mission Analysis Tool (GMAT) Version R2018a","The General Mission Analysis Tool (GMAT) is the world's only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.","https://sourceforge.net/projects/gmat/files/latest/download","https://software.nasa.gov/software/GSC-18094-1","gsfc-softwarerequest@mail.nasa.gov"
524,38f5c9aa11f2407885a2d79d80d0b4a5,0,"Stochastic Reduced Order Models with Python (SROMPy)","The Stochastic Reduced Order Models with Python (SROMPy) software package is code written in Python to help solve uncertainty quantification and propagation problems. Stochastic Reduced Order Models (SROMs) are low-dimensional, discrete representations of a given random vector being modeled that facilitate efficient stochastic calculations. SROMs can be viewed as a smart Monte Carlo method - using the concept for uncertainty propagation is similarly straightforward, but can significantly reduce computation time. An SROM is formed for a given target random vector by solving an optimization problem that determines it's parameters by minimizing the error between the statistics of the SROM and the target. Once the SROM is formed, it can be use to efficiently perform a probabilistic analysis. The SROMPy software package is a tool to solve the optimization problem efficiently to generate an SROM that can be used to propagate uncertainty through a given model.","https://github.com/nasa/SROMPy","https://software.nasa.gov/software/LAR-19359-1","larc-sra@mail.nasa.gov"
525,9bcea211d7f8faf8fef8edb245e4ebdc,0,"Formal Interactive Verification Environment for the Plan Execution Interchange Language (PLEXIL5)","The Plan Execution Interchange Language (PLEXIL) is an open source synchronous language developed by NASA for commanding and monitoring autonomous systems. PLEXIL Formal Interactive Verification Environment (PLEXIL5) is a tool that implements a formal executable semantics of PLEXIL. PLEXIL5 includes a graphical interface that enable access to formal verification techniques such as model-checking, symbolic execution, theorem proving, and static analysis of plans. The graphical environment supports formula editing and visualization of counterexamples, interactive simulation of plans at different granularity levels, and random initialization of external environment variables.","https://github.com/nasa/PLEXIL5","https://software.nasa.gov/software/LAR-19339-1","cesar.a.munoz@nasa.gov"
526,81c785f634c0ccbaa45ac5a0c6c51a3d,0,"AprilNav","AprilNav is a mobile indoor real-time landmark navigation system.","https://github.com/nasa/AprilNav","https://github.com/nasa/AprilNav","gretastudier"
527,ee172d75125e0fcdeaa93382b277ca1e,0,"CFS-101 Training","This is a training tool for individuals to learn how to develop software with NASA-developed Core Flight software (CFS) framework. No agreement is necessary through this catalog. Software is available at open source site.","https://software.nasa.gov/software/LAR-19128-1","https://software.nasa.gov/software/LAR-19128-1","jsc-ttco-software-request@mail.nasa.gov"
528,0051ef779d3dc52d4ec1566175cc786d,0,"MaRSHE- Marsh Remote Sensing Health Evaluation","This tool includes three general types of scripts. The first one extracts average NDVI values from Landsat 5 and Landsat 8 image collections for specified reference dates (typically a period of 10-15 years). Anomalies in NDVI values are then derived from Landsat 5 & 8 reference image collections from later dates (typically the year after the reference period to present). Various graphs and charts are produced showing positive and negative NDVI changes for specified points. The results are also visualized on the map as either areas of NDVI gain (displayed in green) or NDVI loss (displayed in red). The second types of scripts included scripts that perform unsupervised classifications to determine marsh extent for a variety of years and were made by applying a mask over the specified study area that incorporates elevation data to exclude regions over a specified height above average sea-level. These scripts require the user to choose classified pixel clusters that represent marsh land cover by using the Google Earth Inspector tab and then entering those values into the script to generate the marsh extent maps. Results of these scripts include classification maps for various years (2000, 2005, 2010, 2015, etc.). The user can then decide to export those results into either their Assets or their Drive, or both. A third type of script is used for statistics regarding the classified maps generated in the classification scripts. These statistics include total pixel number and total marsh area calculated into square meters after the marsh extent pixels are clipped to our study area (the State of Maryland).","https://github.com/NASA-DEVELOP/MARSHe","https://software.nasa.gov/software/LAR-19211-1","larc-sra@mail.nasa.gov"
529,38fc8e6e371619b5c1946b84ac54c94c,0,"TLNS3D","This software was developed to solve Reynolds-averaged Navier-Stokes Equations to simulate turbulent, viscous flows over three-dimensional configurations. A general multiblock grid is used to model complex configurations. A multi-stage Runge-Kutta pseudo-time stepping scheme is coupled with residual smoothing and multigrid acceleration techniques to form an efficient algorithm. TLNS3D-MB was the first CFD code to demonstrate grid independent convergence rate for transonic viscous flows over wing/fuselage configurations.","https://github.com/nasa/TLNS3D","https://software.nasa.gov/software/LAR-16666-GS","larc-sra@mail.nasa.gov"
530,2c30fefdb5451ca49ed5f185c24aadca,0,"Access Mars","The Curiosity rover has been on the surface of Mars for over five years. In that time, it has sent over 200,000 photos back to Earth. Using these photos, engineers at JPL have reconstructed the 3D surface of Mars for their scientists to use as a mission planning tool – surveying the terrain and identifying geologically significant areas for Curiosity to investigate further. And now you can explore the same Martian surface in your browser in an immersive WebVR experience. Access Mars features four important mission locations: the Landing Site, Pahrump Hills, Marias Pass, and Murray Buttes. Additionally, users can visit Curiosity's 'Current Location' for a look at where the rover has been in the past two to four weeks. And while you explore it all, JPL scientist Katie Stack Morgan will be your guide, teaching you about key mission details and highlighting points of interest.","https://github.com/googlecreativelab/access-mars","https://accessmars.withgoogle.com/","jeremyabel"
531,dc4c8e53327b2d28cc108a038ba28129,0,"NASA Acronyms","This is a tool for defining over 25,000 NASA acronyms.","https://github.com/nasa/NASA-Acronyms","https://nasaacronyms.com/","maliska"
532,a24bafa842619de6494a8c64453e14b2,0,"HyperSolve AD Mini-App","HyperSolve AD Mini-App uses an in-house developed AD tool that is based on operator-overloading to compute linearizations of a given function.","https://github.com/T-infinity/miniapps","https://software.nasa.gov/software/LAR-19476-1","kbthomp1"
533,22729b0aa796f2e414f8b8a3054ccab4,0,"Multi-Level Monte Carlo","Python module for applying the Multi-Level Monte Carlo (MLMC) method for uncertainty propagation.","https://github.com/nasa/mlmcpy","https://github.com/nasa/mlmcpy","lukemorrill"
534,b2b33b6f47814cc8e9fbfcb531c3854f,0,"Sequential Monte Carlo Sampling with Python","Python module for uncertainty quantification using a parallel sequential Monte Carlo sampler","https://github.com/nasa/SMCPy","https://github.com/nasa/SMCPy","peleser"
535,9ae15df597a152cdc92ece6ec49efdf2,0,"Bingo","Bingo is an open source package for performing symbolic regression. Its emphasis lies on the efficient use of HPC resources. For the most part, things should work "out of the box", with a few dependencies that are standard in many python installs.","https://github.com/nasa/bingo","https://github.com/nasa/bingo","gbomarito"
536,779aa87a9c642f23d7674acd1f5ccd09,0,"FPRoCK","FPRoCk is a software library for checking satisfiability of a set of mixed real and floating-point constraints. If this set of constraints has at least one solution, it returns one of the solutions, otherwise it returns UNSAT indicating that the set is unsatisfiable.","https://github.com/nasa/fprock","https://github.com/nasa/fprock","cesar.a.munoz@nasa.gov"
537,9049ba03e9fb34cf016e3c4f02b1febf,0,"NASAaccess: Downloading and reformatting tool for NASA Earth Observation data products","NASAaccess is R package that can generate gridded ascii tables of climate (CIMP5) and weather data (GPM, TRMM, GLDAS) needed to drive various hydrological models (e.g., SWAT, VIC, RHESSys, ..etc). The package assumes that users have already set up a registration account(s) with Earthdata login as well as authorizing NASA GESDISC data access. Please refer to  https://disc.gsfc.nasa.gov/data-access for further details. The package relies on 'curl' (https://curl.haxx.se/) commands and library to access and download data from NASA remote sensing servers.  Since Mac users have curl as part of macOS, Windows users should make sure that their local machines have 'curl' installed properly.  Creating the .netrc file at the user machine 'Home' directory and storing the user NASA GESDISC logging information in it is needed to execute the package commands. Instructions on creating the .netrc and .urs_cookies files can be accessed at https://wiki.earthdata.nasa.gov/display/EL/How+To+Access+Data+With+cURL+And+Wget.","https://github.com/nasa/NASAaccess","None","ibrahim.mohammed@nasa.gov"
538,5bb04ca0eb4fbea84d6d9d9a873ad96a,0,"LHASA","Landslide Hazard Analysis for Situational Awareness","https://github.com/nasa/LHASA","None","gsfc-softwarerequest@mail.nasa.gov"
539,de8b2af13637279f5226469c0fa40f6c,0,"Core Flight System (cFS) Stored Command Absolute (SCA) application","The Stored Command Absolute (SCA) application is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS.  The SCA application allows a system to be commanded 24 hours a day using sequences of absolute time tagged command sequences.","https://github.com/nasa/SCA","None","gsfc-softwarerequest@mail.nasa.gov"
540,c8a711d00b3715e4f9f1922d5039f481,0,"LAGER (Light-weight Accumulator Gathering Efficiently in Real-time)","LAGER (Light-weight Accumulator Gathering Efficiently in Real-time) is a reliable software logging system designed to allow multiple logging sources to log to multiple end users.","https://github.com/nasa/lager","None","jsc-ttco-software-request@mail.nasa.gov"
